%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 518 Digital reality 30x30@2x outlined-01.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: ASUS
%%CreationDate: 2/21/2019
%%BoundingBox: 0 0 520 430
%%HiResBoundingBox: 0 0 520 430
%%CropBox: 0 0 520 430
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">сетка 30x30@2x</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-02-21T16:02:26+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-02-21T16:02:26+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-02-21T16:02:26+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FVlxBHcQSQSjlFKrI48VYUOKvIba5/wAO8NB15xaT2g9G0u5vghuoU2jkjkPw&#xA;cuFOS1qDirrm5/xHz0HQXF3Pdj0bu7h+OC1gfaSSSQfBy4V4rWpOKvXreCO3gjgiHGKJVRB4KooM&#xA;VX4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqsn&#xA;t4LiMxTxrLE3VHUMp+g4q6C3gt4xFBGsUS9ERQqj6Biq/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYqhdWTUJNKvU02RYtReCVbKV91WYoRGzVB2D0rtirzfy/571fRPJmn3euzR3m&#xA;oaxemLSory6SJhb0VS006RUokgbfgaclBxVN4Nb/ADOfzraWl1o8Nrobgeu0TfWIgnBy0huj6TBw&#xA;/ACP0t99++Kp95b86aD5imuodMkkZ7XizepG8YeN2ZVkjLAckYxtQjFU9xVAa7rdhommS6helvRj&#xA;Kqscal5JJHYKkcaDdndiABirzCD8xZNNtZtVtNU+uwlWabRtRmE09Y2JBtp7VGirIppxJIBHU4qn&#xA;evfmTpl1qVppul6rBa2bBLm91NhKWCxToTBGoSnKRAwPI9DiqV3Xn/675ivLSbXvq+kRPFc2CWEQ&#xA;ElysTIwthM7IyyyuvEqRRgSK74q9N0rVLLVdOt9Rsn9S1uUEkTEEGh6gg7gg7EHocVRWKuxVifmL&#xA;zhpmianPa6nrUFtFdwKlnaxRSTXkUzVHPhCJGZWqONVG4xV3l3zhpmt6nBa6ZrUFzFaQMl5ayxSQ&#xA;3ksy0HPhMI2VVoeVFO5xVlmKuxV2KpLrPnHQdJMoubhWNsUF4kbIzw+qjtFyj5cyZCnFVQFiSNqb&#xA;4qlH1r8xZ4zrkMMMNuCDD5ZlVfXktxWrPcV+C4bqqfZX7JNakKo9Nch17T7K60kzEx3sK31vRo54&#xA;CjfvYriMSQlSv7SnkP8AJYYqyLFXYqxzzZ560fy9DKkjC41QIhttOB4NK0jcEHMgqoLdSemKpLpH&#xA;mH8xLrTZ4Laz0q/1C1lkhnvDfMY1kDluDRx2yAlFIQ0fqPHFVXXfMP5habCNXl0a1j0vTUluNTto&#xA;L4SySwqhqV9S2joY/t0DfFSmKppp3niyvfMk+iG3eDgZ1t7uRowkz2skccyKobkCGlFPEVOKskxV&#xA;2KuxV2KuxV2KsL83ah+YsHmbTYfLtnHcaXIqfWGlVfTLmRhKJpeXOJVj4lSiNU12PTFXnmoaPZQ3&#xA;/mC3hkjvtafy/qR1VbS3iS3S7M9uTFA0UMLSFOVDyLMO9CSMVZbY675lsdXt7NLq4N1dq0Tab5mK&#xA;W4aYFShtLuxtnhl25ApyqdjirI/I3lM6DFqM9xa2ltfandvcypZcmjRDThGHdImIU8j9kUqcVZPi&#xA;qR+d7K1uvKupm4jEhtrWe4gr+xKkL8XHuK7YqwTzPrzw+XhaxyPb6PounWTXkVuzQtc3V2oS2tec&#xA;dHSJV+OXh8RBAGKqeoXWmH8r7OwW/vnvobpo1heKcSPdQF55baWKM+qsCJXYNyVQKVYUxV0Outd+&#xA;RtasJZpLzTr/AEC61XR5bhvVmiWKMxz20kvWQ283Hg53IO/TFXp2j6XHpliLONgyCWaUEKE3nmeY&#xA;ig8C/Xv1xVG4q89/MjzAGaXTVV3sNORLnVY4w3K5mlr9T09eO5EzDnLT9ge+Ksb/AC68san9dtI/&#xA;UtbG4g0mHUbO6gj+sPz1CUoZpDJRWf0bdkUD4UVqCu+KqXn7ypri6lqKSXVpqb3WlyalLPPCLWSN&#xA;tOZY/UR4yV5mOcK1QA6jiabHFWU/lv5gCtDpjK6WGoI9xpUcoblbTRU+t6e3LcCFjzir+wfbFXoW&#xA;KobUormXT7mO1leG5eJxDLGELq5U8SvqfBWv822KvH9En0zQNBPmXUbZptcW7ntrLTbljxt7iMM1&#xA;xPNIeTSyiNC0s5FduKACgxVGfpfzZdecdO1k6TdLffo5Z000GRYmUW19zjLEcE9Sb6ueLfECVruM&#xA;VVf8UR32lXPm7TkNj5n01reC8t4FZ4L9LiUQwI6P6bENISgY0kjZWG9KFV6hp1xcXOn21xc2zWdx&#xA;NEjzWjMHaJ2UFkLLseJ2riqIxViX5nDUv8NN9WMItRNb/XBIGMhX6zFx9IqQAa9eWKpNYeXbJfML&#xA;aHq1xMlrZadHc28MN9cQIJLq9u2kblCbXmSqoN12p9JVauBHB5W/MXT7eeSawsoJ0sxLNJclFk0q&#xA;OVwJJWkcj1HY7tiqZ+QZYLuDha2uiHSbRnMUml3Ul26XLkMa+pBFx5KSS3KvTFWaYq7FXYq7FXYq&#xA;7FVK7u4bS3a4nLCJKciqs53IUUVAzHc9hirDPy70i1Nva3/qcb/S11DTL63AH9/JeLLK79+TGIMP&#xA;ZsVTH8y0jbyTqbEAzoiNZtSpW5EiiBl/yvVK0piqYeWNUu9Tsbm4uVUcL69t4CqlQYbe5khjbeu5&#xA;VNziqb4qxj8x01FvK8/1JJJBy4XSxcywglVopH4R/E4TnzK0NQMVYO+o6ho+m6zqGreV7wz28Vrc&#xA;WTSJDLBDc2NoIRMZA5HFXHIMFrTtXbFURPeRDyqnlWx0TVV13ToIb+2maBKi8DsyXLMJeX72eN+R&#xA;60JxVDa3LdandWmiaL5autOuZ9J1SB7SVIoIYTqTQK01Q5+BGVyaCtaUG+KvYMVdirC007T5vN3m&#xA;GDUfhhifTdajYnitY4nh5GvVVNrv2xV535L1650eXTSdZSyu7y0Wyt7XW7RliWziZ57R0uElhqjr&#xA;KQrFWofhP7OKqXnLzDqes6jqqnVIrw2Vj9Ulj0SBnWS3mdZr3nK7zBY444V5OKcm+AftYq9JfT9O&#xA;h82+XYdOPKCZ9R1pyG5LWSJYeQp0VjdfD2xVmmKqd1OtvbSzsKrEjORULUKK9WIA+k4q8X8xWtze&#xA;+XLjWbdAYLfWNRacMQyxrcENHI5Wo4CREV2B2RmPTFXojfmN5ci06C5uXljuriL1I9PSJ5Z2I2Kx&#xA;hFKyfFsHU8T1rTFXlWlanHctqkpjIlvrmwlUQ0eJB+nhcSVcHdQ94IkYVDFHpsMVe8Wl3BdwLPAx&#xA;aJiwBKspqrFTswB6jFVXFWLeffKn6a0uWe0jkm1a3EbWkX1maGJzFKsvBkDiElgCAXU4qkOr+Z9N&#xA;1G6MWseRpL25tLmKwpcjTZzHPdIkkcas8zfbV1NRt44q1cX19f6Drvlby/5OfTpGjksblRJYQW8E&#xA;t3Ap5uIZW5UjlVvgU16YqnqC1tvzAljtb669e9ijm1GwS1Mtv8MUkcLyXIT9zyER4gt8RX3xVleK&#xA;uxV2KuxV2KuxVZPDFPDJBMoeKVSkiHoVYUI+7FWIaN5LufLuuafNpk0tzZzRzW2rPM68jEgLWTN0&#xA;LtDT0Q3Xid9hsqnGu6LcanquisxU6ZYTvd3URNC80aUttqbhHYt8wMVTW0tYbS2itoOQhhUJGHdp&#xA;GoNhV3LM3zJxVVxV2KsSbyjqmtXl1L5pueVkyRxW2l2FzcxW5RS5kM6gxiX1OSghgRQe+KovzN5T&#xA;/SUj6lp11Np+vJCsVtdRzTRxEROZI0niRgkiBnbZlPU9cVQvmDyzq+tS6RLLFYQ3VnJDNPqC+o1x&#xA;C0cySyJatxHwyBOB5EbHFWWYq7FWHj8u9K1G/wBWvvMEBvJ7y4dYHFxOtLPgojiKo6KADy2p3xVv&#xA;SPKWqJov1DWWtdTgt4GisdPuYhPGrrI5jaSSXk7UTgoApQDv1xV2r+UtTfRfqOjG00yG4gWK/wBP&#xA;tohBGzmRGkaOWLi61T1FINag9jvirR/LvStOv9JvvL8Bs57O4RZ3NxO1bPgwkiCu7qQTx2p2xVmG&#xA;KrZY0ljeJxVHUqwqRsRQ7jfFWI2mhebtIa+tdKGm3Gm3VzLcxi7adZAJ9yjBVcEL0rXfFUmb8u9S&#xA;Z2P6E0IRu3NrdZ75bckmprAFEVK9uNMVRa+TvM72a6e0OlWlrJcWk11cwNO9wY7O5W4jjHJF5BAn&#xA;BATRV2GKsz0nTo9NsEs425pGzsG4In947OfhjVF/a8PxxVF4qkvmPyzba9LpqXvCXT7Sd57qylXn&#xA;HODBJGisK0+B5A4qD0xVTn8keXTpQ0yytxpcCzpdxtYBYHWeMgrICARXam4OKpU/knVhYx6hBqMk&#xA;Pmwi1kvLlJ50srme3EaOZbdSI2EkUfCvDbrTbFUy8vaRrsOs6nq+sNaie+itYEhszIyKtqZjyLSB&#xA;TVvX6U7YqyHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhb7VdM09Ua/vILRZCQjTyJEGI6gFyK4qg/8XeVP+r1Yf9JM&#xA;P/NWKqF5538q20SyDU7WeronCG4gZhzYLyILr8K1q3tiq3y3520TzBLJBZmWK5jX1DBOnEmOvHmj&#xA;KWjdQxoeLGh64qn+KrZZY4o3lldY4o1LSSMQFVQKkknYADFWIn80vLRnCxxXstsUMovUtnMZiBIa&#xA;VV/vmjWm7rGV98VZTBf2M9il/DcRvZPH6yXKsPTMdOXPl0pTeuKoH/FvlQ/9Lqw/6SYf+asVTXri&#xA;rsVdirsVS7W/MWkaLFE+oTFGuG9O2gjR5ppXArxjiiDux8aDbFVPRfM+j6zJPDZyut3bU+s2dxFJ&#xA;b3EYb7JaKZUeh7GlMVTXFXYqld55n0S01SPS5rkC9ZDLIigsIYgCfUncfDEppQFyKnpiqXN+ZHkk&#xA;E8dVjljXYzxJJLCO397GrR/8Niqeadqmm6nardaddRXls3SaB1kWvhVSd8VROKuxVbJJHGpeRgij&#xA;qzEAfecVUvr9j/y0xf8ABr/XFVG61nTraH1XmDryROMX7xqyOEB4pU0BarHsNzsMVSzSfPXl/U76&#xA;Owia4t7yYMYIbu2ntjJwHJhGZkRWIG9Aa0xVkGKuxV2KuxV2KuxV5pq+q2uneevMF/q+kPq1haWV&#xA;r6dxGkUrWkaJJLKDHK6ni+7FkHbftiqzzn558saJrMeiWGlabNfc1jurm8aK2toGdPUHI8HdqJu3&#xA;EUFQK1NMVd5X/MLyXq2kX95e6Pa2l1ptu93cW8CwXIeGJijtEwC7hhurAbFSKgg4qmfk+Vm89a2I&#xA;tKk0S0msbOYWcojRpX9WeP6wY4mdULBOFOpCgnFWd4qxj8yF5eU7j1FZrJZ7V9TVa8jZLcxm56dv&#xA;SDcv8muKsOvBo0v5kRa3FOf0VDdWyS6lHacoo7lYDBFbreh6LE/rLz+HjyoK4qlmo63dRaLqGn6X&#xA;bxzaAb+TU0NaB7KPU4EdIKlY1jMpkZmc8OFeg3xVHjzRp4uTJLp1s9sHZntTN5foUrIfTLfWeWyy&#xA;IK9fg9zir0HyOJF8leXxICJBptmHDV5BvQSta98VTvFUBrVk17Zi2jv5dOnaRHhuIGVX5IwbjRgV&#xA;ZWpRlI3GKqs2m20upW2ovy+sWkc0UVGIXjOUL8l7n90tMVeceabrTL/zrrFjcapJpN/FY2tppdwW&#xA;e3VpW9W4li9YcPgl5RBqSIzUoOmKrfJ1i6eYNBijv5NR1S0huLjXHExuI7WGeLjHaeqXnNTLxfj6&#xA;r7qWHwkYq9TxVBa3c3tvpc72KCS+ZfTtAyu6CaQhI2kEYZvTVmBc02WuKvH9K0yXUJoorZF1K4v2&#xA;ku7f62KwGOJykmr3sdV9Z5pARbQseKr4bnFUZa+YdBc6cbzzjd2sjpKNSie8ht5LeWM8USOCBTbh&#xA;eQbYg/DTFW7Q6zbzWOs2VBqGpq0ul3wSOEX4QNJ9R1OKAmH1pIgTFKtDXqAQQVXqmi6ta6vpNpqd&#xA;rX0LyJZUDfaXkKlW/wApTsffFUZirEte0zT9X89aVYapbx3tjFpt7dJaTqJIvWWe2jV2jaqsQkjA&#xA;VG1cVed+cr2yszBodh5N0q08xScBdNHY296kfrTGGD0iI1SsoHqD1aUG3Gp2VUPL97Yafr02h6/5&#xA;Vsb95H9LTpZtLtbGZppIjJbxyFVa3X1ipQb1B33FeKr0C30TT9I83+XHstOtdKub20vE1GCxVUhd&#xA;o0icA8VjD8HJ4sVrirOMVdirsVdirsVdirxn8wv+Us17/tmXP/dJusVQOvz6j5L/ADKmvKW7Wtzc&#xA;S6gt5cRSsI479PSb1ZYQ7hY5YuKrx2BqOpoqlFjBqWu2HmzzHPFHbQ2tjqEhWOJoXkfUWMihmf45&#xA;I1jXmvIAAnbucVekeQ7mS488+YWcAFI5IhSp2j1bUFHUnsMVeh4q06I6MjqGRgQykVBB2IIOKvE9&#xA;MHkq9vm9SP6voc/qiPylp9/dXc1xc+qrLJLp0HFYOCxNyXddx4YqyWLzT5abzRLMgnsLHT9JGn3E&#xA;DWk8UsE1xOnoQpD6ZZmZVJUIrbDwxVj1noNlcXNpe6Ra6xdwT3VxPp13JeWcDzyDkk7enJGJFBCk&#xA;UemwG2KvW9D1e31jSbXU7dWSG6jEio9Ay9irUJFQRTY4qjsVSXzXq2g6Pp66lq0ccr27VsImRXme&#xA;4OyJbggt6jHYcf1Yq8qfzN521PTtT12TWIrW2so5pFtoruO3DmAMXjt4kilkYAqUDyP8Z3FBiqNT&#xA;X/MGj6xDp2tXEXmLS7wVa1WWK/EiJQyekPSjlE0X2/TYMJF5caMMVem+W7zyzd6eJPLslq9jWpFm&#xA;EVFYipDKlOLeIIriqa4qhNYWVtIvlhr6rW8oj49eRQ0p9OKvGoY45pLVpYZLjQBpulS3tvbh3ZrQ&#xA;WkiQM8cY5yQRXXP1kUeBI2OKsf0nUkFpp8drfQQaOsdoL+Brq2jteSk/pL67aN+8uGlI/dcQfhIC&#xA;namKppoEcTadosmiwzQ2st1ZrLJICsEt6NRie2MIbZpY7NZRM67EbMScVer/AJeUPl2Ro/8AeV9Q&#xA;1F7Mf8UNfTFPw6YqyXFWGeYtQ0Sy89WB1q6trWxuNHv4Ga7kSKN+dxa1jrIVB5KDt4Yq8380GzZb&#xA;XXdB1bStPvovRWTRrLU7IKq2Uxa1k/e/uZHWIlCp6bUqKqVWtFuk1XzFP5g1bzDZiO1lF1p1tqWo&#xA;WCNcTW8RjtPWis/gi9N2Zi256ADqxVZzo+p+WrjzB5StNFksYxb2188+nWE8M6W7SpG7LWEkfbLb&#xA;98Veh4q7FXYq7FXYq7FXkHn22V/M3mZ2YrJDo806JRfijbTrqEt8TK1A+1VVt+tMVZH5i078xotP&#xA;1DUI9V0+O5Fo0Sm3tL3kAtWDRotxOPUqftCJj7HFUL5/0zzjD5Z8z3TX1g1jc20rSw/V7kyCJIyq&#xA;qjNctGjcepCUJ3piqp5Ds5bfzx5kVyrUUuxjZXC/WNSvriNWKkgMYpVbj1FcVehYqoX95BZWU93P&#xA;IkMUKM7ySsEQUH7TGgAxV5/+XqeXlkXzJeauj6/dWvoavBdSqskVyZDJOvBm/dKGAVVVQKKDvXFV&#xA;LzBJZt5v0zzMsthc3iXEWl2ulMI555IpLjibmGWORirqj+oAU+Ecq4q7ynrOqwaXpcKaBJdus98N&#xA;PuFu4YhIfWlMn7tmHRa/aHyxVk/5aknyNpBYcWMJqvWh5ttirJcVeTec7m+0z8yU1iSI3DrbRWej&#xA;280Upt3MqytMTMqyKCnGvpqplc8Qu2Kpdqd35V1ny7qKSaObHXrS2uYYLXTbCWW3nluLRXgLutsS&#xA;jD1F+F2VkatcVTa41ryXocStomlm+1W5unltpNQ0+a1WDjG0x9OQ2sbEIsJ9ONKuWO2KoHyJ9ak8&#xA;/fpG29WOe8ubtNds44JPq6I8PrpJ9ZZIwf3xUCN1EqFip2xV7FirsVeXa3pV75WvluIJjZ2MDyvp&#xA;Gr8Glgto7huc1hfqnxC3aT4opf2D8t1ULarb00+YeWoNQECTfWL1bjTL0XTv8QmN/NJHcJxYs32B&#xA;12GwxVLJdUkjhjb9IiRtOR7Symila7t9MWaqs31lgpvb9o29KKNB8P3nFXrflmz+paFZ2iwC2hgj&#xA;CW0AqGSAf3Sycv8AdnCnqf5VcVTPFUg8xeXL2+1Gz1XTbmC31Czjlt+F3Abm3khnKMysivEysGiU&#xA;qyt7d8VY7dzedotfs9EgfQ7i6nje5uWFhcKtvbr8Ikf/AEo1LyfCi99/DFXXU3na08wWelXL6HHF&#xA;qEbmzvPqFwUeePd4CPrXwtw+Nd96HwxVO9L8sasNbg1fWLq0kls4pYrS3sLZraMGfjzeQvLMzmiA&#xA;AVAGKsmxV2KuxV2KuxV2KoHU9B0PVeH6U061v/Sr6f1qGObjXrx5hqYqjsVU7m2trq3ktrqJJ7eZ&#xA;SksMqh0dTsVZWqCD74qo6dpWl6ZAbfTbOCxtyxcw20aRJyPU8UCiu2KorFVk0MM8MkMyLJDKpSSN&#xA;wGVlYUKkHqCMVYza/lt5Ztbj1YFnEYKcLV5mkhQI6uFRZOdF+DjxrTiSOmKp/b6TpVvKJbezghlF&#xA;aSRxIrCux3ABxVKbn8v/ACbc3ElxNpUJmmYvIw5LVmNWaikCpO5xVPLW1trS2itraJYbeFQkUSAK&#xA;qqooFUDoBiqpiqTa15O8ta3z/Stgl16hUvyLCpQEKfhI6A4qgIfyw8hwRiOLR4lQduUnf3LYq6b8&#xA;sPIc8Zjl0eJkPblJ29w2KorR/IflHR7mK50zTY7aeDl6UilyRyUq32mPUMcVT7FXYq7riqTS+SvJ&#xA;s0pml0HTpJmNWke0gZifEkpXFUedJ0utqfqcNbIk2f7tf3JYUJj2+Co8MVRWKuxVB6no2karEsOq&#xA;WNvfwo3NI7mJJlVqU5AOGANDiqXf4C8jf9S7pn/SHb/80Yq7/AXkb/qXdM/6Q7f/AJoxVHad5f0H&#xA;TG5abptrZMAwrbQRxGknHn9hV+16aV8eI8MVR+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjj6zq481pYiI+iYyPqVY&#xA;94eag33qeCE+n6VeRrWmKovXvM+n6O8UEp9S7nV5Y4OSoBFEKyzSyOQkcaA7sx67DfFWG2v5q6mZ&#xA;ojLZWdzFcNSG3tpbqOZx4W73dtbwXL+Co4J7VxVn2j6vYavpsGo2Enq2s61QkEMCDRlZTurKwIYH&#xA;ocVRmKuxVLLjWrGY32n6dfW8us20Lt9TSWJpo34/CXjLVX4iPtUGKsS1r80o4719J0EWOo6gtvy9&#xA;Wa8WGM3J5KtvFxSRZZQy7pzXqBXwVWeRvNXmk2l/ceY1nntImskguLi1TTpfrF0wjmhCSNGrpC7q&#xA;A3U9ByNMVeh4q7FWJa75i1q6u9S0bQLC6e4sPRW51OGS0jEUkirMERboOrn0mHL4duXjiqR2U35l&#xA;SL60cmoXULK6qVm0QryKlQwZIRujb/Mb7Yqml9+YV/p9wltf6RDaXElPThn1Swidq9KK8gJxVMbP&#xA;zbqB1ex07VNFm079Jeotlc+tDPG0kUZlKN6TErWNWI8aYqyTFUHrNxNbaRe3EMqQSwwSSJNKpdEK&#xA;IW5MoKkgU33xVgvli1/My5tLXWTfQ3Ed4qXUcN7cN9h424ho7e3RFBEnLiCaED4jTdVbd+ftfg86&#xA;jTGlsVgjv7TTX0mkhvJRcxLJJdxttSOMvtUU4g13pVVkE91+ZEELzfUtJufTUv8AV457iN5Kb8VZ&#xA;4yoY9q7Yqneiava6xo9lqtrX6vewpPGGpyAda8Wp3HQ4qjcVSHzamrxwWup6deRWy6W8lzeR3LSp&#xA;bywehIjCT0gxIQsHGx3GKvL4/PnmHTX07UJNWmh0fUIXWfWNTh+sW8twCrcrSyt+E8aijBebCoPQ&#xA;UxVH2/5j+YtSn0ltQu/0HpWoO1tZ6lp/1Sdrqd3VY2e3uPrEsMdK/skg/aOKs08qXXm671FZNZtJ&#xA;7OKDToILlZTB6ct+GJmlhWF5PgI6E0+WKsrxV2KuxV2KuxV2KtcV5cqDlSnLvTwrirxfzhL5jk8w&#xA;XE1/a6fDck2H+hyXc0i8P34tI2ZrVYzG95+8atFqqqxFQcVSjUn1E6bYrNp5imu7S5m1p7vUrmUv&#xA;FAjJJNcwSW/7iSO5p6TR78xxSoxV6F+WJ16OXVYrqG3a0a55XE0U8jMl4tvCs6+m8ENfUcGRiG+F&#xA;iV6g4qz7FVC/muILG5mtovXuIoneGCtObqpKpX/KO2KvCbT63qmlX1zq8ciW8d5aXN/qkcVxp7QH&#xA;UrlY9TtGqw9WNI+p6AdcVZEpaWePSbuScD67Nb6n5cktgmmQaShcLKj+mqoEiVJElElSx+5VvQvz&#xA;Q1DTdJstN1XS59Suntxc6dKhCvcWMSNIZ5DNxXmqRhtiS1fHFXqOl6jb6nplpqNty+rXsMdxDyFG&#xA;4SoHWo7GjYqicVef6hdWEI8/QXk7wLf3MNjC0KNLMZbnS7eNFijT4nerbAYqhfy2caPpGsWBjNtr&#xA;RV9QTS/qs1pEEWFIVeGOSpcM8Xxlf2jTwxV57pyahQ6n6scsdzNDFeTTyENLLdRxuXZAQsh9KSS4&#xA;5Tq8aovEAUOKsr8kag9zqPl+CJXXTbbVJDYJI3IxJPoss5hDcUFFMnIAKKBuNBSmKvYcVQHmABtB&#xA;1IEVBtZwQehHptirz3ynqdpol1AYr26/Qlro15cXFncTJNFFJZyWwPo8S7KKSMArNUdKDFUogvjd&#xA;+XbnzbcatfxeY7W8GnSSrHaiC3upShEQVl5fV4zMEerVPxGmKpnrPmZtZXSriW4uo7G8023kvNOt&#xA;Jzbcprm/hspVdwrPSMzMCBStKVGKsx/LX/lAPL//ADAQf8QGKskxVg35manqUlm+jaXLPAz213Pq&#xA;c6W5eNbVLSZlUzSRtCOcyohAPOh2p1xV5zqMY0nUda1WTT5tE1u0t7M2moaSPWtFMiEOZgEovrgA&#xA;/HH9r9qvVVdLpYW51ldMsXsbKe60ZZ7/AFMsNVdpbxSHhUglGkcczyp8K/Y8FXrHlIedEf6vryp9&#xA;XtYFhW45o8lzMJGrN8AHFTHx2YA1xVkuKuxV2KuxV2KuxV5/5ii1vzXqX1ezsrGfRdHvZILm01C5&#xA;liF3OkNfijihmUpGZOS8juR0xVJPLWjWN7e2mmaotrcWU51O3sX065knh+rqwMtjL60MRMcTMrRM&#xA;jHiy7UxVd5k0XX7RdMs7iGO6u/3Nv9fJZlvbhJ3TTY5+QB428fK4nWlGYDrir0fy9o9ro2lQ6bBI&#xA;ZjBU3E7mskk0h9SSWT/KkZix+eKpliqD1nVbbSdJvNUuuRt7KF55QgqxWNSxCjx2xVhGieetA1/W&#xA;hDq8B02+9D6l+jbgJcRTR6h6csVZ0DIC6oF9NqVJpucVYnYane3egw+XOH16FNQs4bPS2fh60Imu&#xA;ZJYnf4iYxHAK8qgAYqyfXtZ8papbWD+bYLbT7bTr24tLmxuJFkHqxxCno8ImZ1AdS1CgHeuKvQ7Q&#xA;2htITZ8PqhjX6v6VPT9Og4cOO3Hj0piqriryy/1aO187a4slvazGz1O1vrdrjUIbJhKNLih+xIrF&#xA;14yNv4/LFUxufNdy+oWmsy6bYLNbRSwW8v6ZtwhS5KMwPwUNTAKfTiqQ2UuiWkepRLpmmSQ6k1ZI&#xA;5NatGWNA3qCKMGP+7EhLBWqN6fZ2xVEaBfQpr/lPSYILZEivbueW4i1CG+nmmksbgvJKI1U1YtXl&#xA;07DamKvWMVQOv/8AHC1H/mFm/wCTbYq8n8maNZazqDabeBvq93ZatHIUPFxS8sipB36HfcU8RiqW&#xA;XulwQate+Tw8j6Hc6tELmF2q8jGbR42kaT7XIid6keOKsg80aJaaJf22n2rySRpb2kjSzNzkeSXX&#xA;rWSR2ICirOxOwAxVmv5a/wDKAeX/APmAg/4gMVZJirF/Nfmq40zUrPSI9KTUF1GKQgSzpAJSpCtB&#xA;EJFZJJCrV4My1HSuKvN/MT+WIfV0vy8+oaJf6nFTUNIuVghgWKBhxquoSwKDV/g9CanXtirJNBW1&#xA;gul8wah5c1PV9RnoV1svYX1OPw1ijtZ2WIL0HppX3xVkvk/WfM2uW1vq9ylnDpN2rvDbos31lRyI&#xA;QOzHhXbf4RirJ8VdirsVdirsVdirz7W/KmqTfpPT5dGj1awvb46lb3Ud79Tmhd41QqPgZgRxYVDb&#xA;qcVTLSNI1iXWNKnn0qDRdO0WCeK3t4pxPz9cIoVQqIECBKknrirL8VY55e0bV7PV9RnupSUldPVn&#xA;Ij/05/QiUXBVf7kxhfS4LQHjy71xVkeKrZoYponhmRZIZFKSRuAysrChVgdiCMVSWPyP5Ti0qXSo&#xA;NNitrGaVZ5I7ctCxljYMjiSMq4ZWUUIbbFWG6L5A1yGW10+a2itbGwvo7p9UMySTyrbyyywrbhY/&#xA;VXn6oWRpZK05BRvuqmt7+XFtrUNrqk8kujeYpInXUbm0SJTJ9YiEU6PHyuI6lRQFWNPE4qzDTNPt&#xA;9N020062qLayhjt4Axq3CJAi1Pc0XFUTirFdW/LvS9Q1i51ZL26srm8EYulhFs8btEvBX43MM/Fu&#xA;AAPGlaYqx3U/JfmSK6e3s/rt7ZJx9KZ7jS4uXw1P7s6e3HiSR1xVvTPIWszzBb83dlEWAMizaVNR&#xA;eDktxFgv7SqtP8qvbFWQ6R+Xel6frFtqz3t1e3NmJBarOLZI0aVeDPxt4YOTcCQOVaVOKsqxVRvb&#xA;VbuyuLVmKrcRvEWHUB1K1/HFXneifl1cPqtpFr+l20mn2Fpcxm5iuJHFzdTywN6/psFaIlIm5LUq&#xA;CdsVSuf8rfOovZJrZ9NAEryW0hnmUKVmtXt/3X1ZxxjjsI1KFyW3+PFU61TyJe6fq4uPK+mW4Sez&#xA;EErvcPAiTpcRzpIw4yuyAxbqOo2rirM/LmjjRdA07SRJ6v1G3jtzLSnIxqFLU7VOKpjiqVeadDXX&#xA;NCutMJjVp1HpvNGJUVlIIJWqntSqkMOoIOKsT0ey8/2dt+jtR06016C2VSn1uYq6Fiw4xTvFIJ1A&#xA;QGrqrryAJbriqbw2Pny4RYhNp3l6zX7ENnG17KN605yC3iX/AJFHFVvkVNf0zTbPQdR0iaJbNHRt&#xA;U9W2aCQhiQyokhl+Ou1UHvTFWWYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVBb6ya6e1WeM3UdPUgDDmvIFlqta7gVx&#xA;VXxVQlvrOKG4mkmQRWgLXTVB9MKvM86dPhNfliq8XFuTEPUXlMKwqSAXAFTxHfbFVTFXYqg9V1rS&#xA;dItvrWp3kVnBWgeZwgJ/lWv2j7DfFUlP5j+UlXm9xcxw97iSxvUhA/mMrQiML7lqYqn9zf2VskLz&#xA;zKiXEiQwMTs8kpoiin83bFVfFXYqpPeWkdzHayTxpczAmGBmUO4UVYqpNTTvTFVXFXYq7FXYqpXd&#xA;3bWdrNd3Uiw21ujSzSuaKqIKsxPgAMVY/p35h+Xb+49GNpoAX4LLcxG3Qgq7hv3vFgv7ulSOpXxx&#xA;VkkckckayRsHjcBkdTUEHcEEdQcVQaa5oruqJqFszsQFUTRkknYAAHFUbirsVdiq2KWOWNZInWSN&#xA;xVHUgqQe4IxVZc3Vrax+pczJBHWnORgi1ParEYqhLXzDol3qL6bbXsUt9HGJjArVYxtsHXs612JW&#xA;tO+KphirsVdirsVdirsVYJ+YN5o2niJ/Miw6lpzGWaG0SFv0ghjAIa3eNk4qm/N2K9ftdsVSHS/N&#xA;ms2WqppVvc3ljPII2t9M8yoJYmE9fRVL+BmljZ+JAEwb4vh+1tiqb3HnrRtCvdQOs+Xbix1e5hjl&#xA;1JbURXUc0QYwxOZFdAas3Beaqx6UOKsj0K90PX7gaolhLbappvK1aK9i9K5t/VRJSpWrBeaMpqD0&#xA;NPEYqn+KoDX9Zt9F0a71SdS6WycliX7UjkhY41/ynchR7nFXk7fWrq6k1vWbmYXH1g2ayWIV7q4u&#xA;lrzstMLfDbwQU4yTCjOVYlgMVQq6v5S9eJbvR4ZoJ5lt5Fg1e9urxi7hGHIKIrn7R5RpM3f6VXov&#xA;nRfL1mumm9vo9ME0sdjGjySojwMR6kcaRsFjfjTjMADH2ZcVZVFGsUaRpXiihVqSxoBQVJqT9OKr&#xA;sVeNea9Iup/MPmm9ubieGaDTNQvbV4WmgYrbRRx28ZchGaJG5PxQ8GYmpPTFWQ6tpvlvy3pljLBq&#xA;erafdXQjjtLHT7mW6lnlZa/u7W4+sIff4QMVTDy3qvmnV9AivdJ1Ow1GN5pBHd3cMiSmIBaLNFD6&#xA;SpMknMMAKceJ74qnOgeZbXUr3UtLklQarpU7RXNuvwkxmjxSKpZmKlHVS38wPamKp3iqB155o9D1&#xA;F4G4TJazNE/gwjJU/QcVefeXtU8tWHl2Gw1TQTpt/Dphu5LiW3ilS4ZDHE0sciGSSV5JJ0IqORJ8&#xA;cVVtA1XVdXbSPLYu4rF9GttLn1VnL/WpriGjz28YBRaI0apN1+3Trtiqvfa15Rv9PS1h8sHUJ9Qg&#xA;naO1jgt1AWOY21ZJGZBHWSlGHT54qyH8vLi5ufI2gz3MhmnexgLyN1PwClT3NOp74qyHFUu16znu&#xA;7FY4kEwWWN5bYlVEqK4JUswPGn2qjfamKofQraQXN1eJaNp9pdLAY7RgisWWIAyOq/YYCkfCpHwV&#xA;74q85u5tS1bznIzR6bNdS3N9a6f+mUklto1sZVhS2t0UhVmm3ld924nYUFCqs8tWvHztasiWcQe/&#xA;mspbjSFaK1laK2F56kKtz4MDEYLjg1HDUO4xV7FirsVdirsVdirsVeJfmisC+c786zHdvbNbaabF&#xA;rcv6C2iXim99dYzzbvSgIBpXfhiqWefE8jm6mGhWl8tdLnVltY7m3pdPPCLQyi4CKycg4pueWw+L&#xA;jRVldz6y+YSdVZTdpqWgi+b9mn1Zwh/1PrRPH/KxVFfl1D52Tzlr51eRWhV6ap8URR7spGbZrcIi&#xA;uqC04A8z+OKvS8VYr+YPI2mjKN1bVrTkvYspZ4gR3rMqYq84mFo+leVreaQ/V7nSNPj48qO/16/g&#xA;TUxH3LurBXpvxJ98VZNqPmjzf5c83mzksFfy5IDb6Np1tHEplYRJ6KwsG58vU5CTknBF38MVZDpP&#xA;k43IutR80iO/1fUoWgnj6wW1s43tbcHov8z9WO+Kon8v7i6n8p2S3UhmntWnsmmbq4s7iS2Vz7sI&#xA;gTirIcVeffmB/vfrv/gJ6j/xIYqlXnOfTfq7eYdLu5zrVraLpJtEtUkEh9dIyqNcREKfUuhVlPxD&#xA;pWmKse8p65qMFleaB5btTHquucvR1FHiSG3uIbYstuY0giSKUwwNWvxBt2xVnX5beWHs1uNT1kV1&#xA;ya8uJIGluVubiO3mjijEU0sRCStS2B6Gn34qz3FUDr//ABwtR/5hZv8Ak22KvKvL9zpt3cs2uIG0&#xA;q20rVhc/HKx9K3ubNuQJYspHGq8CKH7IGKoDSPK2ra8Fl07TxBFDJqbRG/kdpraU3VtJCFuCJ2S4&#xA;AQ/Gwb9oGuKq08lqVs7e2SWE2UFtb3ltclXnjul1+1aYO6BUarNyBVQCCDt0xV6R+Wv/ACgHl/8A&#xA;5gIP+IDFWSYqxbz15mn0qK3srSdbS6vFlklvnQyi1tYAvrTCIVMj1dUjTuzDFWNxWbCNb39D+apw&#xA;CG/Sb3/C4YeP1MXSbf5Hojb9ntiqA0ax1DXjqelW99p99aXEr6r9X1DT3KXC3M8qsXb1hJHLA0fp&#xA;EBF40HXrirK/Knl+a21y4k1B4Zp9Mgjt7CO0h+rWdqk9XljggPLchU5SF2J6fDQ1VZjirsVdirsV&#xA;dirsVYJ+YGl2urejFrnoQ2FuZnSK3Se51KaI8Ij9XEPBkDGVVkHBx0rtiqSaL5H1aXUk1KztLlHT&#xA;0xb6p5nnN3cIIqiNobKHgoKVPAyuGFem5xVkEn5ceX9Uubn9NandavqzRRx3j/WDblYeReOP0LYx&#xA;KsZcFlDA7jrirIdE0nRtE5WFrKzXdzW4lNxM091NxCx+o7SM0jBQFTwGwxVNcVSvzPY6beaHcxal&#xA;M1taxhZ2uozR4WgcSpKho3xIyA9DirFbTzB5f8u+UA9xaNJc6NIfStnKyy+pdTSLbzGYqkcQuVPO&#xA;uyoG49qYqiNKbSNJvZdc826tZp5hnRVZpZVjgtYZAWS2tTIQCKKSxHxMdz2xVQ1b8z1+s266DbfX&#xA;7aXmkUzI6/W7gqRFBZ14l/i+KWWhREHckYqyfypo0ujeXrLT5pPWuY1L3Uo6PPM5lmYexkdiMVTb&#xA;FXnv5gEDUNcFdz5T1Kg+TDFVTU5fNer6LbaZc6La2lreGKOOWe8uGkEkYE8b/wChwn0+Ji5BjKBW&#xA;grWlVUD5I8uX0p1a9bUPrmtaVqUsOmXFxPeXdjHytYebCF56u1JpE5c61+7FWYaB5faxYy3dtpgu&#xA;PhYS2Fn9WPq1kVmqzyn+7kCjev2t6NQKp5iqC1xHfRdQRFLO1tMFUCpJMZAAAxV47pmk6rewxWen&#xA;28F6Nc0nVjGzXIiVbe5mtAJQ6Rz/ABq1PgIHv0xV6Z5GvbafRZS0ItNRhnkTW4Ca8b4UM7VJPwvs&#xA;6kbcSMVeaWyXF/rGo6lcRfVtO1AfpaznDKztaR6tausjo5iVAYoA/wBs7Go3+HFXpn5cxyR+Q/L6&#xA;SKUcWEFVYUIrGDirIsVef+YfMUmj/mLa3WoW5i0y3spIXvF5Oot7p4iZnoKKIriBUffZXVvHFUwk&#xA;8o+XZdXF39RlkSVGv/8AEYvX5pIJAyxK3qcwnA7U+DiKYqs05E8zeZr3WrWeaLSLaCPT7K8t24C6&#xA;ZZWluGRwKmIHggYdSG4nFUw0q/FpBbTpZxwaTqMqelOJOUpednCzS/z+ufSpT4qseXTFWR4q7FXY&#xA;q7FXYq7FXUFQabjYHvQ4q7FUHNo2mSwX8Jt0RdTVlvmjARpeUfpEsy0JPDauKrzptg0trM0CPPZB&#xA;ltZmUF4wy8WCsdxyXY4qicVdiqCstG02z099OihDWcjTPJDJ+8VjcyNLKGDVqGaRtsVSJvy50ZAI&#xA;7C8v9NthutpbXLegtf8AfccolWP/AGFMVTLRvKWiaTcveQRvPqMq8ZdQupXuLhl/l9SUsVX/ACVo&#xA;PbFU4xV2KpL5k8n6F5iRP0jE/qxpJFHcQSvDII5hxkjLIRyR12ZWqD4YqgIvy38tMiLqBu9X4AKo&#xA;1G6nuEAFKD0iwi7fyYqyKxsLGwtktbG2itLZK8IIEWONampoqgAYqr4q7FXYqltj5Z8vafqE2o2O&#xA;m21rfXClZriGJY3dWIZgxUCtWUE++Kq0WkWEVzf3KIRLqXA3ZqfiMcYiXbt8AptiqCm8neV7iOxj&#xA;u9Mt7sadEkFmbiNZTHHGAFALg+GKpz0xV2KqF5Y2t5EsVynqRq6SBKkAtGwZa0IqKjodsVSJvy48&#xA;kM5Y6RBwLczbjkLctWtfQB9L/hcVZFFFHFGsUSLHGgCoigBVA2AAHQYqgLfQbGC6WdGlIjYyQQtI&#xA;5jjkf1fUdQTUl/XavIkdKAUxVMcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9d726d61-9234-0940-8262-3b88d0f60d8e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9d726d61-9234-0940-8262-3b88d0f60d8e</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5e18a764-9361-bf4c-b3bd-51647f59fe9c</stRef:instanceID>
            <stRef:documentID>xmp.did:5e18a764-9361-bf4c-b3bd-51647f59fe9c</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88ef7b6c-9d0b-be49-927b-d70d23a9160c</stEvt:instanceID>
                  <stEvt:when>2016-09-24T11:29:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9d726d61-9234-0940-8262-3b88d0f60d8e</stEvt:instanceID>
                  <stEvt:when>2019-02-21T16:02:26+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>520.000000</stDim:w>
            <stDim:h>430.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB красный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB желтый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB зеленый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB голубой</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB синий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB пурпурный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>192</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>175</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>197</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>225</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>187</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>146</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>142</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>157</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>197</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Холодный</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>199</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>130</xmpG:red>
                           <xmpG:green>138</xmpG:green>
                           <xmpG:blue>196</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>185</xmpG:red>
                           <xmpG:green>154</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>178</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>203</xmpG:red>
                           <xmpG:green>203</xmpG:green>
                           <xmpG:blue>203</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -430 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 430 li
520 430 li
520 0 li
cp
clp
520 430 mo
0 430 li
0 0 li
520 0 li
520 430 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
260 17 mo
250.626 17 243 9.37401 243 0 cv
245 0 li
245 8.27155 251.729 15 260 15 cv
268.272 15 275 8.27155 275 0 cv
277 0 li
277 9.37401 269.374 17 260 17 cv
.614069 .513329 .497841 .45893 cmyk
f
260 15 mo
251.729 15 245 8.27155 245 0 cv
275 0 li
275 8.27155 268.272 15 260 15 cv
.238682 .177401 .185702 .010956 cmyk
f
260 16 mo
251.163 16 244 8.83691 244 0 cv
245 0 li
245 8.27155 251.729 15 260 15 cv
268.272 15 275 8.27155 275 0 cv
276 0 li
276 8.83691 268.837 16 260 16 cv
.614069 .513329 .497841 .45893 cmyk
f
470 380 mo
410 380 li
410 320 li
470 320 li
470 380 li
cp
0 0 0 0 cmyk
f
380 379 mo
320 379 li
320 319 li
380 319 li
380 379 li
cp
f
289 381 mo
229 381 li
229 321 li
289 321 li
289 381 li
cp
f
200 380 mo
140 380 li
140 320 li
200 320 li
200 380 li
cp
f
110 380 mo
50 380 li
50 320 li
110 320 li
110 380 li
cp
f
469 290 mo
409 290 li
409 230 li
469 230 li
469 290 li
cp
f
380 289 mo
320 289 li
320 229 li
380 229 li
380 289 li
cp
f
290 289 mo
230 289 li
230 229 li
290 229 li
290 289 li
cp
f
201 290 mo
141 290 li
141 230 li
201 230 li
201 290 li
cp
f
110 290 mo
50 290 li
50 230 li
110 230 li
110 290 li
cp
f
470 200 mo
410 200 li
410 140 li
470 140 li
470 200 li
cp
f
380 200 mo
320 200 li
320 140 li
380 140 li
380 200 li
cp
f
290 200 mo
230 200 li
230 140 li
290 140 li
290 200 li
cp
f
200 200 mo
140 200 li
140 140 li
200 140 li
200 200 li
cp
f
110 199 mo
50 199 li
50 139 li
110 139 li
110 199 li
cp
f
470 110 mo
410 110 li
410 50 li
470 50 li
470 110 li
cp
f
380 109 mo
320 109 li
320 49 li
380 49 li
380 109 li
cp
f
290 110 mo
230 110 li
230 50 li
290 50 li
290 110 li
cp
f
200 109 mo
140 109 li
140 49 li
200 49 li
200 109 li
cp
f
111 110 mo
51 110 li
51 50 li
111 50 li
111 110 li
cp
f
431 368 mo
431 368.002 li
431 368 li
cp
431 370 mo
429.897 370 429 369.103 429 368 cv
429 366.897 429.897 366 431 366 cv
432.103 366 433 366.897 433 368 cv
433 369.103 432.103 370 431 370 cv
cp
0 0 0 .686279 cmyk
f
425.343 362.344 mo
423.929 360.93 li
425.817 359.04 428.329 358 431 358 cv
433.67 358 436.18 359.039 438.068 360.927 cv
436.654 362.341 li
435.144 360.831 433.136 360 431 360 cv
428.863 360 426.854 360.832 425.343 362.344 cv
cp
f
420.394 357.394 mo
418.979 355.979 li
422.19 352.769 426.459 351 431 351 cv
435.541 351 439.81 352.768 443.02 355.979 cv
441.605 357.393 li
438.772 354.56 435.007 353 431 353 cv
426.993 353 423.227 354.561 420.394 357.394 cv
cp
f
431 377 mo
421.626 377 414 369.374 414 360 cv
414 350.626 421.626 343 431 343 cv
433.537 343 435.979 343.546 438.255 344.621 cv
437.399 346.43 li
435.393 345.48 433.239 345 431 345 cv
422.729 345 416 351.729 416 360 cv
416 368.271 422.729 375 431 375 cv
439.271 375 446 368.271 446 360 cv
446 357.035 445.136 354.167 443.502 351.708 cv
445.168 350.601 li
447.021 353.39 448 356.64 448 360 cv
448 369.374 440.374 377 431 377 cv
cp
f
414.854 373.429 mo
412.892 371.072 411.496 368.38 410.708 365.427 cv
412.64 364.911 li
413.354 367.581 414.615 370.017 416.392 372.149 cv
414.854 373.429 li
cp
f
419.154 377.342 mo
418.66 377.005 418.168 376.636 417.692 376.246 cv
418.96 374.699 li
419.391 375.052 419.835 375.385 420.281 375.689 cv
419.154 377.342 li
cp
f
451 333 mo
449.346 333 448 334.346 448 336 cv
448 338.557 452.017 340.972 453.999 341.903 cv
455.982 340.969 460 338.549 460 336 cv
460 334.346 458.654 333 457 333 cv
456.262 333 455.581 333.323 454.649 334.117 cv
453.991 334.677 li
453.342 334.107 li
452.491 333.362 451.726 333 451 333 cv
cp
454 344.088 mo
453.606 343.919 li
452.827 343.586 446 340.528 446 336 cv
446 333.243 448.243 331 451 331 cv
452.011 331 452.999 331.354 454.002 332.078 cv
454.81 331.489 455.781 331 457 331 cv
459.757 331 462 333.243 462 336 cv
462 340.528 455.173 343.586 454.394 343.919 cv
454 344.088 li
cp
f
467.415 330.281 mo
467.151 329.756 466.856 329.246 466.539 328.765 cv
468.209 327.663 li
468.569 328.21 468.903 328.788 469.202 329.383 cv
467.415 330.281 li
cp
f
465.132 326.946 mo
463.679 325.339 461.862 324.041 459.878 323.195 cv
460.663 321.355 li
462.911 322.314 464.97 323.784 466.616 325.606 cv
465.132 326.946 li
cp
f
425 324 mo
423 324 li
423 326 li
425 326 li
425 324 li
cp
f
429 326 mo
427 326 li
427 328 li
429 328 li
429 326 li
cp
f
419 330 mo
417 330 li
417 332 li
419 332 li
419 330 li
cp
f
431 330 mo
429 330 li
429 332 li
431 332 li
431 330 li
cp
f
425 336 mo
423 336 li
423 338 li
425 338 li
425 336 li
cp
f
421 334 mo
419 334 li
419 336 li
421 336 li
421 334 li
cp
f
429 334 mo
427 334 li
427 336 li
429 336 li
429 334 li
cp
f
421 326 mo
419 326 li
419 328 li
421 328 li
421 326 li
cp
f
463 365 mo
461 365 li
461 367 li
463 367 li
463 365 li
cp
f
467 367 mo
465 367 li
465 369 li
467 369 li
467 367 li
cp
f
457 371 mo
455 371 li
455 373 li
457 373 li
457 371 li
cp
f
469 371 mo
467 371 li
467 373 li
469 373 li
469 371 li
cp
f
463 377 mo
461 377 li
461 379 li
463 379 li
463 377 li
cp
f
459 375 mo
457 375 li
457 377 li
459 377 li
459 375 li
cp
f
467 375 mo
465 375 li
465 377 li
467 377 li
467 375 li
cp
f
459 367 mo
457 367 li
457 369 li
459 369 li
459 367 li
cp
f
452 361 mo
450 361 li
450 363 li
452 363 li
452 361 li
cp
f
460 358 mo
458 358 li
458 360 li
460 360 li
460 358 li
cp
f
462 354 mo
460 354 li
460 356 li
462 356 li
462 354 li
cp
f
456 360 mo
454 360 li
454 362 li
456 362 li
456 360 li
cp
f
463 350 mo
461 350 li
461 352 li
463 352 li
463 350 li
cp
f
448.241 346.372 mo
448.591 346.57 li
450.241 347.506 452.111 348 454 348 cv
460.065 348 465 343.065 465 337 cv
465 330.935 460.065 326 454 326 cv
447.935 326 443 330.935 443 337 cv
443 338.565 443.333 340.093 443.989 341.54 cv
444.153 341.902 li
442.077 347.944 li
448.241 346.372 li
cp
454 350 mo
451.902 350 449.824 349.484 447.963 348.506 cv
442.449 349.903 li
442.26 349.968 442.061 350 441.857 350 cv
440.833 350 440 349.167 440 348.143 cv
440 347.924 440.041 347.699 440.117 347.493 cv
442.006 341.996 li
441.338 340.397 441 338.72 441 337 cv
441 329.832 446.832 324 454 324 cv
461.168 324 467 329.832 467 337 cv
467 344.168 461.168 350 454 350 cv
cp
f
369 376 mo
365 376 li
365 348 li
367 348 li
367 374 li
369 374 li
371.757 374 374 371.757 374 369 cv
374 331 li
376 331 li
376 369 li
376 372.859 372.859 376 369 376 cv
cp
f
367 349 mo
365 349 li
365 336 li
369 336 li
371.757 336 374 333.757 374 331 cv
374 328.243 371.757 326 369 326 cv
358 326 li
358 324 li
369 324 li
372.859 324 376 327.141 376 331 cv
376 334.859 372.859 338 369 338 cv
367 338 li
367 349 li
cp
f
335.001 351 mo
333.001 351 li
333.001 338 li
331.001 338 li
327.142 338 324.001 334.859 324.001 331 cv
324.001 327.141 327.142 324 331.001 324 cv
343 324 li
343 326 li
331.001 326 li
328.244 326 326.001 328.243 326.001 331 cv
326.001 333.757 328.244 336 331.001 336 cv
335.001 336 li
335.001 351 li
cp
f
335.001 376 mo
331.001 376 li
327.142 376 324.001 372.859 324.001 369 cv
324.001 331 li
326.001 331 li
326.001 369 li
326.001 371.757 328.244 374 331.001 374 cv
333.001 374 li
333.001 350 li
335.001 350 li
335.001 376 li
cp
f
330.001 345 mo
328.001 345 li
328.001 343 li
330.001 343 li
330.001 345 li
cp
f
330.001 369 mo
328.001 369 li
328.001 347 li
330.001 347 li
330.001 369 li
cp
f
372 370 mo
370 370 li
370 368 li
372 368 li
372 370 li
cp
f
372 366 mo
370 366 li
370 341 li
372 341 li
372 366 li
cp
f
324.138 325.179 mo
322.612 323.884 li
324.708 321.416 327.766 320 331.001 320 cv
333 320 li
333 322 li
331.001 322 li
328.354 322 325.853 323.158 324.138 325.179 cv
cp
f
337 322 mo
335.001 322 li
335.001 320 li
337 320 li
337 322 li
cp
f
342.548 368 mo
334.001 368 li
334.001 366 li
342.548 366 li
342.548 368 li
cp
f
366 368 mo
360.814 368 li
360.814 366 li
366 366 li
366 368 li
cp
f
359 378 mo
357 378 li
357 374.104 li
357 373.189 357.242 372.334 357.701 371.63 cv
360.134 367.907 361 362.406 361 358.5 cv
361 353.813 356.514 350 351 350 cv
350.69 350 350.383 350.012 350.08 350.036 cv
349.92 348.042 li
350.275 348.014 350.636 348 351 348 cv
357.617 348 363 352.71 363 358.5 cv
363 362.694 362.048 368.633 359.376 372.723 cv
359.13 373.1 359 373.578 359 374.104 cv
359 378 li
cp
f
348 378 mo
346 378 li
346 375.109 li
346 374.581 345.845 374.069 345.551 373.63 cv
341.891 368.149 339 363.82 339 358.5 cv
339 354.91 341.06 351.607 344.51 349.665 cv
345.49 351.407 li
342.679 352.991 341 355.643 341 358.5 cv
341 363.214 343.606 367.117 347.214 372.519 cv
347.728 373.288 348 374.184 348 375.109 cv
348 378 li
cp
f
346 361 mo
344 361 li
344 340.5 li
344 338.57 345.57 337 347.5 337 cv
349.43 337 351 338.57 351 340.5 cv
351 354 li
349 354 li
349 340.5 li
349 339.673 348.327 339 347.5 339 cv
346.673 339 346 339.673 346 340.5 cv
346 361 li
cp
f
345 345 mo
340 345 li
338.897 345 338 344.103 338 343 cv
338 338.984 li
338 337.891 338.891 337 339.984 337 cv
341.016 337 li
341 328 li
343 328 li
343 337.016 li
343 338.109 342.109 339 341.016 339 cv
339.984 339 li
340 343 li
345 343 li
345 345 li
cp
f
349 338.05 mo
347 338.05 li
347 334 li
347 332.897 347.897 332 349 332 cv
353 332 li
353 327 li
355 327 li
355 332 li
355 333.103 354.103 334 353 334 cv
349 334 li
349 338.05 li
cp
f
359 347 mo
356 347 li
354.897 347 354 346.103 354 345 cv
354 343 li
350 343 li
350 341 li
354 341 li
355.103 341 356 341.897 356 343 cv
356 345 li
359 345 li
359 335 li
361 335 li
361 345 li
361 346.103 360.103 347 359 347 cv
cp
f
233 334.999 mo
231 334.999 li
231 332.207 li
231 327.957 233.897 324.345 238.047 323.423 cv
238.508 323.32 li
238.941 325.273 li
238.48 325.376 li
235.254 326.093 233 328.901 233 332.207 cv
233 334.999 li
cp
f
233 339 mo
231 339 li
231 337 li
233 337 li
233 339 li
cp
f
244.46 378.95 mo
238.817 377.734 li
236.557 377.17 235 375.177 235 372.878 cv
235 332.207 li
235 329.847 236.609 327.84 238.914 327.328 cv
244.358 326.069 li
244.81 328.019 li
239.356 329.279 li
237.966 329.588 237 330.791 237 332.207 cv
237 372.878 li
237 374.257 237.934 375.453 239.271 375.787 cv
244.882 376.995 li
244.46 378.95 li
cp
f
243.158 369.195 mo
242.842 367.221 li
264.842 363.7 li
265.158 365.675 li
243.158 369.195 li
cp
f
256 370 mo
254 370 li
254 372 li
256 372 li
256 370 li
cp
f
259 348 mo
254 348 li
251.794 348 250 346.206 250 344 cv
250 341.794 251.794 340 254 340 cv
254.101 340 li
254.565 337.721 256.585 336 259 336 cv
261.757 336 264 338.243 264 341 cv
262 341 li
262 339.346 260.654 338 259 338 cv
257.346 338 256 339.346 256 341 cv
256 342 li
254 342 li
252.897 342 252 342.897 252 344 cv
252 345.103 252.897 346 254 346 cv
259 346 li
259 348 li
cp
f
277.5 346 mo
276.121 346 275 347.121 275 348.5 cv
275 349.879 276.121 351 277.5 351 cv
278.879 351 280 349.879 280 348.5 cv
280 347.121 278.879 346 277.5 346 cv
cp
277.5 353 mo
275.019 353 273 350.981 273 348.5 cv
273 346.019 275.019 344 277.5 344 cv
279.981 344 282 346.019 282 348.5 cv
282 350.981 279.981 353 277.5 353 cv
cp
f
282 348.5 mo
280 348.5 li
280 336 li
282 336 li
282 348.5 li
cp
f
287 345 mo
285 345 li
285 342.566 284.155 342.06 282.985 341.357 cv
281.655 340.56 280 339.566 280 336 cv
282 336 li
282 338.434 282.845 338.94 284.015 339.643 cv
285.345 340.44 287 341.434 287 345 cv
cp
f
258 352 mo
257.998 352 li
258 360 li
270 360 li
270 352 li
258 352 li
cp
270 362 mo
258 362 li
256.897 362 256 361.103 256 360 cv
256 352 li
256 350.897 256.897 350 258 350 cv
270 350 li
271.103 350 272 350.897 272 352 cv
272 360 li
272 361.103 271.103 362 270 362 cv
cp
f
264.004 358 mo
263.996 358 li
263.491 357.998 263.009 357.805 262.636 357.455 cv
256.645 352.013 li
257.99 350.532 li
263.993 355.985 li
270.036 350.552 li
271.376 352.036 li
265.352 357.47 li
264.99 357.808 264.507 358 264.004 358 cv
cp
f
250 356 mo
246 356 li
246 354 li
250 354 li
250 356 li
cp
f
254 356 mo
252 356 li
252 354 li
254 354 li
254 356 li
cp
f
280 366 mo
273 366 li
273 364 li
280 364 li
280 366 li
cp
f
284 366 mo
282 366 li
282 364 li
284 364 li
284 366 li
cp
f
284 359 mo
277 359 li
277 357 li
284 357 li
284 359 li
cp
f
288 359 mo
286 359 li
286 357 li
288 357 li
288 359 li
cp
f
276 334 mo
269 334 li
269 332 li
276 332 li
276 334 li
cp
f
280 334 mo
278 334 li
278 332 li
280 332 li
280 334 li
cp
f
245 379 mo
243.346 379 242 377.654 242 376 cv
242 329 li
242 327.346 243.346 326 245 326 cv
245.208 326 245.418 326.023 245.645 326.072 cv
263.656 330.075 li
265.037 330.387 266 331.589 266 333 cv
266 335 li
264 335 li
264 333 li
264 332.531 263.679 332.131 263.22 332.027 cv
245.217 328.026 li
245 328 li
244.448 328 244 328.448 244 329 cv
244 376 li
244 376.552 244.448 377 245 377 cv
245.217 376.974 li
263.223 372.972 li
263.679 372.869 264 372.469 264 372 cv
264 361 li
266 361 li
266 372 li
266 373.411 265.037 374.613 263.659 374.924 cv
245.65 378.927 li
245.431 378.976 245.212 379 245 379 cv
cp
f
263 348 mo
258 348 li
258 346 li
263 346 li
264.103 346 265 345.103 265 344 cv
265 342.897 264.103 342 263 342 cv
261.897 342 261 342.897 261 344 cv
259 344 li
259 341.794 260.794 340 263 340 cv
265.206 340 267 341.794 267 344 cv
267 346.206 265.206 348 263 348 cv
cp
f
192 326 mo
190 326 li
190 322 li
192 322 li
192 326 li
cp
f
192 334 mo
190 334 li
190 330 li
192 330 li
192 334 li
cp
f
196 329 mo
193 329 li
193 327 li
196 327 li
196 329 li
cp
f
189 329 mo
186 329 li
186 327 li
189 327 li
189 329 li
cp
f
150 370 mo
148 370 li
148 366 li
150 366 li
150 370 li
cp
f
150 378 mo
148 378 li
148 374 li
150 374 li
150 378 li
cp
f
154 373 mo
151 373 li
151 371 li
154 371 li
154 373 li
cp
f
147 373 mo
144 373 li
144 371 li
147 371 li
147 373 li
cp
f
170 348 mo
168.897 348 168 348.897 168 350 cv
168 351.103 168.897 352 170 352 cv
171.103 352 172 351.103 172 350 cv
172 348.897 171.103 348 170 348 cv
cp
170 354 mo
167.794 354 166 352.206 166 350 cv
166 347.794 167.794 346 170 346 cv
172.206 346 174 347.794 174 350 cv
174 352.206 172.206 354 170 354 cv
cp
f
170 335 mo
161.729 335 155 341.729 155 350 cv
155 352.325 155.378 354.338 156.156 356.155 cv
156.391 356.657 156.923 357 157.5 357 cv
158.327 357 159 356.327 159 355.5 cv
159 355.302 158.961 355.107 158.884 354.924 cv
158.067 353.228 158 351.627 158 350 cv
158 343.383 163.383 338 170 338 cv
171.573 338 172.726 338.401 174.067 338.927 cv
174.2 338.971 174.356 339 174.5 339 cv
175.327 339 176 338.327 176 337.5 cv
176 336.902 175.645 336.362 175.095 336.125 cv
173.442 335.453 171.932 335 170 335 cv
cp
157.5 359 mo
156.148 359 154.904 358.203 154.331 356.971 cv
153.431 354.872 153 352.602 153 350 cv
153 340.626 160.626 333 170 333 cv
172.389 333 174.232 333.615 175.869 334.28 cv
177.172 334.845 178 336.104 178 337.5 cv
178 339.794 175.817 341.63 173.384 340.806 cv
172.157 340.327 171.227 340 170 340 cv
164.486 340 160 344.486 160 350 cv
160 351.752 160.107 352.863 160.694 354.074 cv
160.711 354.111 li
160.903 354.553 161 355.021 161 355.5 cv
161 357.43 159.43 359 157.5 359 cv
cp
f
170 323 mo
155.112 323 143 335.112 143 350 cv
143 354.507 143.643 357.837 145.148 361.135 cv
145.392 361.658 145.923 362 146.5 362 cv
147.327 362 148 361.327 148 360.5 cv
148 360.299 147.961 360.103 147.884 359.919 cv
146.634 357.125 146 353.787 146 350 cv
146 336.767 156.767 326 170 326 cv
172.403 326 174.387 326.46 176.174 326.958 cv
177.156 327.196 178 326.431 178 325.5 cv
178 324.848 177.575 324.276 176.942 324.078 cv
174.643 323.397 172.762 323 170 323 cv
cp
146.5 364 mo
145.148 364 143.904 363.204 143.332 361.972 cv
141.696 358.39 141 354.812 141 350 cv
141 334.01 154.01 321 170 321 cv
173.005 321 175.034 321.428 177.524 322.165 cv
179.011 322.629 180 323.968 180 325.5 cv
180 327.43 178.43 329 176.5 329 cv
176.236 329 175.964 328.965 175.667 328.893 cv
173.73 328.354 172.042 328 170 328 cv
157.869 328 148 337.869 148 350 cv
148 353.508 148.576 356.573 149.713 359.11 cv
149.721 359.128 li
149.906 359.563 150 360.025 150 360.5 cv
150 362.43 148.43 364 146.5 364 cv
cp
f
160.166 371.248 mo
164.229 374.965 169.458 377 175 377 cv
180.877 377 186.401 374.712 190.557 370.557 cv
194.712 366.401 197 360.877 197 355 cv
197 349.458 194.965 344.229 191.248 340.166 cv
160.166 371.248 li
cp
175 379 mo
168.589 379 162.563 376.504 158.029 371.971 cv
157.322 371.264 li
191.264 337.322 li
191.971 338.029 li
196.504 342.563 199 348.589 199 355 cv
199 361.411 196.504 367.438 191.971 371.971 cv
187.438 376.504 181.411 379 175 379 cv
cp
f
175 374 mo
174.001 374 172.997 373.922 172.018 373.769 cv
172.328 371.792 li
173.205 371.93 174.104 372 175 372 cv
179.541 372 183.81 370.231 187.021 367.021 cv
188.036 366.007 188.918 364.874 189.641 363.655 cv
191.361 364.677 li
190.553 366.038 189.568 367.303 188.436 368.436 cv
184.847 372.023 180.075 374 175 374 cv
cp
f
169.561 373.214 mo
168.977 373.04 168.398 372.837 167.841 372.61 cv
168.595 370.757 li
169.093 370.96 169.61 371.142 170.133 371.298 cv
169.561 373.214 li
cp
f
68 337 mo
61.3828 337 56 342.383 56 349 cv
56 355.617 61.3828 361 68 361 cv
74.6172 361 80 355.617 80 349 cv
80 342.383 74.6172 337 68 337 cv
cp
68 363 mo
60.2803 363 54 356.72 54 349 cv
54 341.28 60.2803 335 68 335 cv
75.7197 335 82 341.28 82 349 cv
82 356.72 75.7197 363 68 363 cv
cp
f
68 337 mo
65.6348 337 63 341.928 63 349 cv
63 356.072 65.6348 361 68 361 cv
70.3652 361 73 356.072 73 349 cv
73 341.928 70.3652 337 68 337 cv
cp
68 363 mo
64.0752 363 61 356.851 61 349 cv
61 341.149 64.0752 335 68 335 cv
71.9248 335 75 341.149 75 349 cv
75 356.851 71.9248 363 68 363 cv
cp
f
68 344 mo
60.9277 344 56 346.635 56 349 cv
56 351.365 60.9277 354 68 354 cv
75.0723 354 80 351.365 80 349 cv
80 346.635 75.0723 344 68 344 cv
cp
68 356 mo
60.1494 356 54 352.925 54 349 cv
54 345.075 60.1494 342 68 342 cv
75.8506 342 82 345.075 82 349 cv
82 352.925 75.8506 356 68 356 cv
cp
f
103 347 mo
101.374 347 100 347.916 100 349 cv
100 350.084 101.374 351 103 351 cv
104.626 351 106 350.084 106 349 cv
106 347.916 104.626 347 103 347 cv
cp
103 353 mo
100.243 353 98 351.206 98 349 cv
98 346.794 100.243 345 103 345 cv
105.757 345 108 346.794 108 349 cv
108 351.206 105.757 353 103 353 cv
cp
f
101 362 mo
99.541 362 li
98.2412 362 96.9668 361.484 96.0439 360.584 cv
92.6875 357.309 92 353.584 92 349 cv
92 344.918 92.542 340.64 96.4736 337.009 cv
97.209 336.33 98.0352 336 99 336 cv
101 336 li
102.654 336 104 337.346 104 339 cv
104 346 li
102 346 li
102 339 li
102 338.448 101.552 338 101 338 cv
99 338 li
98.543 338 98.1934 338.143 97.8311 338.478 cv
94.6514 341.414 94 344.808 94 349 cv
94 353.195 94.5752 356.356 97.4404 359.152 cv
97.9932 359.691 98.7588 360 99.541 360 cv
101 360 li
101.552 360 102 359.552 102 359 cv
102 352 li
104 352 li
104 359 li
104 360.654 102.654 362 101 362 cv
cp
f
100 362 mo
93 362 li
91.7012 362 90.4268 361.484 89.5039 360.584 cv
85.999 357.163 85.999 353.271 86 349.151 cv
86 349 li
86 345.141 86.3359 340.712 90.3457 337.009 cv
91.0205 336.386 91.6992 336 93 336 cv
100 336 li
100 338 li
93 338 li
92.2539 338 92.0527 338.155 91.7031 338.478 cv
88.6055 341.338 88 344.502 88 349 cv
88 349.151 li
87.999 353.157 87.999 356.321 90.9004 359.152 cv
91.4531 359.691 92.2178 360 93 360 cv
100 360 li
100 362 li
cp
f
98 326 mo
96 326 li
96 322 li
98 322 li
98 326 li
cp
f
106.162 328.252 mo
104.748 326.838 li
107.842 323.744 li
109.256 325.158 li
106.162 328.252 li
cp
f
87.8066 328.221 mo
84.7754 325.189 li
86.1895 323.775 li
89.2207 326.807 li
87.8066 328.221 li
cp
f
98 378 mo
96 378 li
96 374 li
98 374 li
98 378 li
cp
f
107.877 376.291 mo
104.756 373.17 li
106.17 371.756 li
109.291 374.877 li
107.877 376.291 li
cp
f
86.1895 376.225 mo
84.7754 374.811 li
87.7988 371.787 li
89.2129 373.201 li
86.1895 376.225 li
cp
f
55.4434 325.197 mo
53.8252 324.566 li
54.5518 322.703 li
56.1699 323.334 li
55.4434 325.197 li
cp
f
90.4629 338.863 mo
57.918 326.163 li
58.6445 324.3 li
91.1895 337 li
90.4629 338.863 li
cp
f
53.3135 332.269 mo
51.7988 331.718 li
52.4824 329.839 li
53.9971 330.39 li
53.3135 332.269 li
cp
f
59.5508 334.537 mo
55.8838 333.203 li
56.5674 331.324 li
60.2344 332.658 li
59.5508 334.537 li
cp
f
57.5547 374.125 mo
56.8281 372.262 li
58.3311 371.675 li
59.0576 373.538 li
57.5547 374.125 li
cp
f
61.5752 372.557 mo
60.8486 370.693 li
90.1934 359.241 li
90.9199 361.104 li
61.5752 372.557 li
cp
f
52.5381 368.141 mo
51.8545 366.262 li
53.4043 365.698 li
54.0879 367.577 li
52.5381 368.141 li
cp
f
56.5879 366.668 mo
55.9043 364.789 li
61.3594 362.806 li
62.043 364.685 li
56.5879 366.668 li
cp
f
423.038 241.999 mo
436.967 247.977 li
450.993 241.001 li
437.034 235.023 li
423.038 241.999 li
cp
437 250 mo
436.711 250 436.422 249.932 436.142 249.798 cv
422.159 243.798 li
421.422 243.426 421 242.747 421 242 cv
421 241.198 421.476 240.475 422.211 240.158 cv
436.16 233.187 li
436.79 232.913 437.316 232.943 437.858 233.202 cv
451.84 239.187 li
452.578 239.559 453 240.243 453 241 cv
453 241.794 452.523 242.511 451.786 242.826 cv
437.841 249.814 li
437.529 249.947 437.268 250 437 250 cv
cp
f
437 259 mo
436.711 259 436.422 258.932 436.142 258.798 cv
422.159 252.798 li
421.422 252.426 421 251.747 421 251 cv
423 251 li
422.992 250.978 li
436.967 256.977 li
450.945 250.012 li
453 250 li
453 250.794 452.523 251.511 451.786 251.826 cv
437.841 258.814 li
437.529 258.947 437.268 259 437 259 cv
cp
f
437 268 mo
436.711 268 436.422 267.932 436.142 267.798 cv
422.159 261.798 li
421.422 261.426 421 260.747 421 260 cv
421 242 li
423 242 li
423 260 li
436.967 265.977 li
450.945 259.012 li
451 241 li
453 241 li
453 259 li
453 259.794 452.523 260.511 451.786 260.826 cv
437.841 267.814 li
437.529 267.947 437.268 268 437 268 cv
cp
f
438 267 mo
436 267 li
436 249 li
438 249 li
438 267 li
cp
f
430 263.646 mo
428 263.646 li
428 245.027 li
444.814 236.565 li
445.713 238.353 li
430 246.26 li
430 263.646 li
cp
f
446 263.109 mo
444 263.109 li
444 245.767 li
428.274 238.965 li
429.069 237.129 li
446 244.452 li
446 263.109 li
cp
f
423 237 mo
418 237 li
416.897 237 416 236.103 416 235 cv
416 230 li
418 230 li
418 235 li
423 235 li
423 233 li
423 231.897 423.897 231 425 231 cv
431 231 li
432.103 231 433 231.897 433 233 cv
433 236.384 li
431 236.384 li
431 233 li
425 233 li
425 235 li
425 236.103 424.103 237 423 237 cv
cp
f
462 240 mo
457 240 li
455.897 240 455 239.103 455 238 cv
455 234 li
448 234 li
448 238.202 li
446 238.202 li
446 234 li
446 232.897 446.897 232 448 232 cv
455 232 li
456.103 232 457 232.897 457 234 cv
457 238 li
462 238 li
462 231 li
464 231 li
464 238 li
464 239.103 463.103 240 462 240 cv
cp
f
462 255 mo
458 255 li
456.897 255 456 254.103 456 253 cv
456 249 li
452 249 li
452 247 li
456 247 li
457.103 247 458 247.897 458 249 cv
458 253 li
462 253 li
462 249 li
464 249 li
464 253 li
464 254.103 463.103 255 462 255 cv
cp
f
416 258 mo
412 258 li
412 256 li
416 256 li
416 250 li
416 248.897 416.897 248 418 248 cv
422 248 li
422 250 li
418 250 li
418 256 li
418 257.103 417.103 258 416 258 cv
cp
f
442 277 mo
433.643 277 li
431.787 277 430.195 275.62 430.018 273.857 cv
429.919 272.87 430.242 271.884 430.904 271.152 cv
431.567 270.42 432.513 270 433.5 270 cv
445.123 270 li
446.436 270 447.752 270.131 449.036 270.388 cv
457.196 272.02 li
456.804 273.98 li
448.644 272.349 li
447.488 272.117 446.304 272 445.123 272 cv
433.5 272 li
433.071 272 432.676 272.176 432.388 272.494 cv
432.1 272.813 431.965 273.226 432.008 273.658 cv
432.083 274.41 432.802 275 433.643 275 cv
442 275 li
442 277 li
cp
f
425.3 287.251 mo
425.018 287.063 424.891 286.974 424.616 286.771 cv
418.67 282.393 li
419.855 280.781 li
425.802 285.16 li
426.047 285.341 426.158 285.42 426.409 285.587 cv
425.3 287.251 li
cp
429.472 289.462 mo
428.754 289.184 428.371 289.011 427.687 288.657 cv
428.604 286.88 li
429.222 287.199 429.549 287.347 430.196 287.599 cv
429.472 289.462 li
cp
f
437.488 287 mo
433.683 287 430.052 285.807 426.988 283.55 cv
414.608 274.432 li
413.379 273.684 412.755 272.204 413.089 270.71 cv
413.343 269.564 414.195 268.605 415.313 268.209 cv
416.196 267.895 417.112 267.935 417.96 268.325 cv
433.07 274.903 li
432.271 276.737 li
417.142 270.15 li
416.749 269.97 416.377 269.951 415.984 270.094 cv
415.516 270.26 415.146 270.672 415.041 271.145 cv
414.865 271.932 415.299 272.514 415.724 272.774 cv
428.174 281.939 li
430.892 283.941 434.112 285 437.488 285 cv
439.055 285 440.608 284.767 442.106 284.306 cv
451.796 281.324 li
452.496 281.109 453.222 281 453.952 281 cv
457 281 li
457 283 li
453.952 283 li
453.421 283 452.894 283.079 452.384 283.236 cv
442.694 286.218 li
441.006 286.736 439.255 287 437.488 287 cv
cp
f
466 288 mo
458 288 li
456.897 288 456 287.103 456 286 cv
456 269 li
456 267.897 456.897 267 458 267 cv
466 267 li
466 269 li
458 269 li
458 286 li
466 286 li
466 288 li
cp
f
350 235 mo
348.346 235 347 236.421 347 238.167 cv
347 239.833 li
347 241.579 348.346 243 350 243 cv
351.654 243 353 241.579 353 239.833 cv
353 238.167 li
353 236.421 351.654 235 350 235 cv
cp
350 245 mo
347.243 245 345 242.682 345 239.833 cv
345 238.167 li
345 235.318 347.243 233 350 233 cv
352.757 233 355 235.318 355 238.167 cv
355 239.833 li
355 242.682 352.757 245 350 245 cv
cp
f
351 285 mo
349 285 li
349 264 li
351 264 li
351 285 li
cp
f
356 286 mo
344 286 li
342.903 286 342.006 285.112 342 284.022 cv
341.99 282.385 343.028 280.937 344.581 280.419 cv
345 280.279 li
345 254.628 li
347 254.628 li
347 281.721 li
345.214 282.316 li
344.483 282.56 343.995 283.24 344 284.011 cv
356 284 li
356.005 283.24 355.517 282.56 354.786 282.315 cv
353 281.721 li
353 254.628 li
355 254.628 li
355 280.279 li
355.419 280.418 li
356.972 280.937 358.01 282.385 358 284.022 cv
357.994 285.112 357.097 286 356 286 cv
cp
f
369 287 mo
365 287 li
365 259 li
367 259 li
367 285 li
369 285 li
371.757 285 374 282.757 374 280 cv
374 242 li
376 242 li
376 280 li
376 283.859 372.859 287 369 287 cv
cp
f
367 260 mo
365 260 li
365 247 li
369 247 li
371.757 247 374 244.757 374 242 cv
374 239.243 371.757 237 369 237 cv
358 237 li
358 235 li
369 235 li
372.859 235 376 238.141 376 242 cv
376 245.859 372.859 249 369 249 cv
367 249 li
367 260 li
cp
f
335.001 262 mo
333.001 262 li
333.001 249 li
331.001 249 li
327.142 249 324.001 245.859 324.001 242 cv
324.001 238.141 327.142 235 331.001 235 cv
342 235 li
342 237 li
331.001 237 li
328.244 237 326.001 239.243 326.001 242 cv
326.001 244.757 328.244 247 331.001 247 cv
335.001 247 li
335.001 262 li
cp
f
335.001 287 mo
331.001 287 li
327.142 287 324.001 283.859 324.001 280 cv
324.001 242 li
326.001 242 li
326.001 280 li
326.001 282.757 328.244 285 331.001 285 cv
333.001 285 li
333.001 261 li
335.001 261 li
335.001 287 li
cp
f
330.001 256 mo
328.001 256 li
328.001 254 li
330.001 254 li
330.001 256 li
cp
f
330.001 280 mo
328.001 280 li
328.001 258 li
330.001 258 li
330.001 280 li
cp
f
372 281 mo
370 281 li
370 279 li
372 279 li
372 281 li
cp
f
372 277 mo
370 277 li
370 252 li
372 252 li
372 277 li
cp
f
324.045 236.288 mo
322.5 235.019 li
324.6 232.465 327.698 231 331 231 cv
333 231 li
333 233 li
331 233 li
328.298 233 325.764 234.198 324.045 236.288 cv
cp
f
337 233 mo
335.001 233 li
335.001 231 li
337 231 li
337 233 li
cp
f
343 279 mo
334 279 li
334 277 li
343 277 li
343 279 li
cp
f
366 279 mo
357 279 li
357 277 li
366 277 li
366 279 li
cp
f
359 266 mo
357.682 266 356.533 265.148 356.143 263.881 cv
352.911 254.539 li
354.802 253.885 li
358.043 263.259 li
358.184 263.715 358.564 264 359 264 cv
359.552 264 360 263.552 360 263 cv
360 262.919 359.983 262.826 359.947 262.709 cv
356.002 251.109 li
355.572 249.848 354.389 249 353.057 249 cv
346.943 249 li
345.611 249 344.428 249.848 343.998 251.109 cv
340.044 262.736 li
340 263 li
340 263.552 340.448 264 341 264 cv
341.436 264 341.816 263.715 341.947 263.291 cv
345.2 253.881 li
347.091 254.535 li
343.848 263.913 li
343.467 265.148 342.318 266 341 266 cv
339.346 266 338 264.654 338 263 cv
338 262.717 338.047 262.429 338.143 262.119 cv
342.105 250.465 li
342.811 248.393 344.755 247 346.943 247 cv
353.057 247 li
355.245 247 357.189 248.393 357.895 250.465 cv
361.849 262.092 li
361.953 262.429 362 262.717 362 263 cv
362 264.654 360.654 266 359 266 cv
cp
f
246 245 mo
244.897 245 244 245.897 244 247 cv
244 249 li
244 250.103 244.897 251 246 251 cv
247.103 251 248 250.103 248 249 cv
248 247 li
248 245.897 247.103 245 246 245 cv
cp
246 253 mo
243.794 253 242 251.206 242 249 cv
242 247 li
242 244.794 243.794 243 246 243 cv
248.206 243 250 244.794 250 247 cv
250 249 li
250 251.206 248.206 253 246 253 cv
cp
f
254 265 mo
252 265 li
252 261.916 li
252 259.205 249.795 257 247.084 257 cv
244.916 257 li
242.205 257 240 259.205 240 261.916 cv
240 265 li
238 265 li
238 261.916 li
238 258.103 241.103 255 244.916 255 cv
247.084 255 li
250.897 255 254 258.103 254 261.916 cv
254 265 li
cp
f
236 239 mo
234.897 239 234 239.897 234 241 cv
234 278 li
234 279.103 234.897 280 236 280 cv
284 280 li
285.103 280 286 279.103 286 278 cv
286 241 li
286 239.897 285.103 239 284 239 cv
236 239 li
cp
284 282 mo
236 282 li
233.794 282 232 280.206 232 278 cv
232 241 li
232 238.794 233.794 237 236 237 cv
284 237 li
286.206 237 288 238.794 288 241 cv
288 278 li
288 280.206 286.206 282 284 282 cv
cp
f
256 234 mo
240 234 li
240 232 li
256 232 li
256 234 li
cp
f
260 234 mo
258 234 li
258 232 li
260 232 li
260 234 li
cp
f
268 287 mo
248 287 li
248 285 li
268 285 li
268 287 li
cp
f
272 287 mo
270 287 li
270 285 li
272 285 li
272 287 li
cp
f
247 277 mo
233 277 li
233 275 li
247 275 li
247 277 li
cp
f
251 277 mo
249 277 li
249 275 li
251 275 li
251 277 li
cp
f
287 277 mo
253 277 li
253 275 li
287 275 li
287 277 li
cp
f
287 271 mo
233 271 li
233 269 li
287 269 li
287 271 li
cp
f
265.07 266.333 mo
264.853 266.11 li
262.522 263.722 259 260.112 259 254 cv
259 247.383 264.383 242 271 242 cv
277.617 242 283 247.383 283 254 cv
283 260.112 279.477 263.722 277.146 266.11 cv
276.949 266.312 li
275.518 264.915 li
275.715 264.713 li
278.069 262.301 281 259.299 281 254 cv
281 248.486 276.514 244 271 244 cv
265.486 244 261 248.486 261 254 cv
261 259.298 263.93 262.301 266.284 264.713 cv
266.504 264.938 li
265.07 266.333 li
cp
f
275.831 250.445 mo
275.466 249.951 275.03 249.518 274.536 249.156 cv
275.718 247.543 li
276.375 248.023 276.954 248.6 277.438 249.256 cv
275.831 250.445 li
cp
273.914 263.28 mo
272.471 261.896 li
272.699 261.657 272.936 261.417 273.174 261.176 cv
275.055 259.266 277 257.29 277 254 cv
277 253.46 276.928 252.923 276.785 252.402 cv
278.713 251.873 li
278.903 252.565 279 253.281 279 254 cv
279 258.109 276.662 260.483 274.599 262.579 cv
274.367 262.814 274.138 263.047 273.914 263.28 cv
cp
267.716 263.315 mo
265.506 261.052 263 258.485 263 254 cv
263 249.589 266.589 246 271 246 cv
271.724 246 272.443 246.098 273.138 246.29 cv
272.604 248.218 li
272.083 248.073 271.543 248 271 248 cv
267.691 248 265 250.691 265 254 cv
265 257.671 267.015 259.734 269.147 261.919 cv
267.716 263.315 li
cp
f
271.846 260.056 mo
270.154 258.987 li
270.686 258.146 271.188 257.504 271.631 256.937 cv
272.514 255.805 273 255.182 273 254 cv
273 252.897 272.103 252 271 252 cv
269.897 252 269 252.897 269 254 cv
269 254.62 269.09 255.141 269.283 255.64 cv
267.418 256.362 li
267.137 255.635 267 254.862 267 254 cv
267 251.794 268.794 250 271 250 cv
273.206 250 275 251.794 275 254 cv
275 255.869 274.169 256.935 273.207 258.167 cv
272.793 258.697 272.323 259.299 271.846 260.056 cv
cp
f
170 249 mo
167.794 249 166 250.794 166 253 cv
166 255.206 167.794 257 170 257 cv
172.206 257 174 255.206 174 253 cv
174 250.794 172.206 249 170 249 cv
cp
170 259 mo
166.691 259 164 256.309 164 253 cv
164 249.691 166.691 247 170 247 cv
173.309 247 176 249.691 176 253 cv
176 256.309 173.309 259 170 259 cv
cp
f
170.014 243 mo
169.627 243 169.236 243.021 168.845 243.065 cv
164.461 243.555 160.794 247.061 160.124 251.402 cv
159.459 255.709 161.602 259.927 165.456 261.899 cv
166 262.179 li
166 285.282 li
166 285.756 166.506 286.111 166.943 285.964 cv
172.331 284.169 li
174.897 280.33 li
174.967 280.226 175 280.118 175 280 cv
175 279.846 174.941 279.688 174.844 279.579 cv
171.803 276.158 li
173.725 272.313 li
173.905 271.954 174 271.552 174 271.149 cv
174 262.179 li
174.544 261.9 li
177.909 260.177 180 256.767 180 253 cv
180 250.158 178.784 247.44 176.664 245.544 cv
174.807 243.883 172.479 243 170.014 243 cv
cp
166.718 288 mo
165.219 288 164 286.781 164 285.282 cv
164 263.384 li
159.722 260.909 157.383 256.051 158.147 251.098 cv
158.952 245.879 163.357 241.665 168.622 241.077 cv
172.037 240.698 175.456 241.781 177.997 244.054 cv
180.541 246.329 182 249.59 182 253 cv
182 257.314 179.717 261.238 176 263.384 cv
176 271.149 li
176 271.862 175.832 272.574 175.513 273.209 cv
174.197 275.842 li
176.338 278.25 li
176.765 278.729 177 279.351 177 280 cv
177 280.51 176.849 281.006 176.563 281.437 cv
174.038 285.243 li
173.783 285.628 173.401 285.92 172.964 286.065 cv
167.577 287.86 li
167.302 287.953 167.013 288 166.718 288 cv
cp
f
170 282 mo
168 282 li
168 280 li
170 280 li
170 282 li
cp
f
170 278 mo
168 278 li
168 265 li
170 265 li
170 278 li
cp
f
149 271 mo
147.346 271 146 272.346 146 274 cv
146 275.654 147.346 277 149 277 cv
150.654 277 152 275.654 152 274 cv
152 272.346 150.654 271 149 271 cv
cp
149 279 mo
146.243 279 144 276.757 144 274 cv
144 271.243 146.243 269 149 269 cv
151.757 269 154 271.243 154 274 cv
154 276.757 151.757 279 149 279 cv
cp
f
150 251 mo
148.346 251 147 252.346 147 254 cv
147 255.654 148.346 257 150 257 cv
151.654 257 153 255.654 153 254 cv
153 252.346 151.654 251 150 251 cv
cp
150 259 mo
147.243 259 145 256.757 145 254 cv
145 251.243 147.243 249 150 249 cv
152.757 249 155 251.243 155 254 cv
155 256.757 152.757 259 150 259 cv
cp
f
182 234 mo
180.346 234 179 235.346 179 237 cv
179 238.654 180.346 240 182 240 cv
183.654 240 185 238.654 185 237 cv
185 235.346 183.654 234 182 234 cv
cp
182 242 mo
179.243 242 177 239.757 177 237 cv
177 234.243 179.243 232 182 232 cv
184.757 232 187 234.243 187 237 cv
187 239.757 184.757 242 182 242 cv
cp
f
192 275 mo
190.346 275 189 276.346 189 278 cv
189 279.654 190.346 281 192 281 cv
193.654 281 195 279.654 195 278 cv
195 276.346 193.654 275 192 275 cv
cp
192 283 mo
189.243 283 187 280.757 187 278 cv
187 275.243 189.243 273 192 273 cv
194.757 273 197 275.243 197 278 cv
197 280.757 194.757 283 192 283 cv
cp
f
192 255 mo
190.346 255 189 256.346 189 258 cv
189 259.654 190.346 261 192 261 cv
193.654 261 195 259.654 195 258 cv
195 256.346 193.654 255 192 255 cv
cp
192 263 mo
189.243 263 187 260.757 187 258 cv
187 255.243 189.243 253 192 253 cv
194.757 253 197 255.243 197 258 cv
197 260.757 194.757 263 192 263 cv
cp
f
165 280 mo
160 280 li
158.897 280 158 279.103 158 278 cv
158 275 li
153 275 li
153 273 li
158 273 li
159.103 273 160 273.897 160 275 cv
160 278 li
165 278 li
165 280 li
cp
f
151 250 mo
149 250 li
149 244 li
149 242.897 149.897 242 151 242 cv
155 242 li
156.103 242 157 242.897 157 244 cv
157 246 li
160.762 246 li
160.762 248 li
157 248 li
155.897 248 155 247.103 155 246 cv
155 244 li
151 244 li
151 250 li
cp
f
171 242 mo
169 242 li
169 238 li
169 236.897 169.897 236 171 236 cv
178 236 li
178 238 li
171 238 li
171 242 li
cp
f
188 259 mo
186 259 li
184.897 259 184 258.103 184 257 cv
184 253 li
180.955 253 li
180.955 251 li
184 251 li
185.103 251 186 251.897 186 253 cv
186 257 li
188 257 li
188 259 li
cp
f
188 279 mo
184 279 li
182.897 279 182 278.103 182 277 cv
182 271 li
175 271 li
175 269 li
182 269 li
183.103 269 184 269.897 184 271 cv
184 277 li
188 277 li
188 279 li
cp
f
163 233 mo
161 233 li
161 235 li
163 235 li
163 233 li
cp
f
163 237 mo
161 237 li
161 239 li
163 239 li
163 237 li
cp
f
193 238 mo
191 238 li
191 240 li
193 240 li
193 238 li
cp
f
193 242 mo
191 242 li
191 244 li
193 244 li
193 242 li
cp
f
156 261 mo
154 261 li
154 263 li
156 263 li
156 261 li
cp
f
156 265 mo
154 265 li
154 267 li
156 267 li
156 265 li
cp
f
190 264 mo
188 264 li
188 266 li
190 266 li
190 264 li
cp
f
190 268 mo
188 268 li
188 270 li
190 270 li
190 268 li
cp
f
181 282 mo
179 282 li
179 284 li
181 284 li
181 282 li
cp
f
181 286 mo
179 286 li
179 288 li
181 288 li
181 286 li
cp
f
63 281.414 mo
58.6992 277.113 li
60.1133 275.699 li
63 278.586 li
68.8457 272.74 li
70.2598 274.154 li
63 281.414 li
cp
f
70 269 mo
68 269 li
68 266 li
68 263.794 66.2061 262 64 262 cv
61.7939 262 60 263.794 60 266 cv
60 269 li
58 269 li
58 266 li
58 262.691 60.6914 260 64 260 cv
67.3086 260 70 262.691 70 266 cv
70 269 li
cp
f
55 270 mo
54.4482 270 54 270.448 54 271 cv
54 284 li
54 284.552 54.4482 285 55 285 cv
73 285 li
73.5518 285 74 284.552 74 284 cv
74 271 li
74 270.448 73.5518 270 73 270 cv
55 270 li
cp
73 287 mo
55 287 li
53.3457 287 52 285.654 52 284 cv
52 271 li
52 269.346 53.3457 268 55 268 cv
73 268 li
74.6543 268 76 269.346 76 271 cv
76 284 li
76 285.654 74.6543 287 73 287 cv
cp
f
104 280 mo
102 280 li
102 276 li
104 276 li
104 280 li
cp
f
104 288 mo
102 288 li
102 284 li
104 284 li
104 288 li
cp
f
108 283 mo
105 283 li
105 281 li
108 281 li
108 283 li
cp
f
101 283 mo
98 283 li
98 281 li
101 281 li
101 283 li
cp
f
58 236 mo
56 236 li
56 232 li
58 232 li
58 236 li
cp
f
58 244 mo
56 244 li
56 240 li
58 240 li
58 244 li
cp
f
62 239 mo
59 239 li
59 237 li
62 237 li
62 239 li
cp
f
55 239 mo
52 239 li
52 237 li
55 237 li
55 239 li
cp
f
108 254 mo
65 254 li
65 252 li
108 252 li
108 254 li
cp
f
94 276 mo
92 276 li
92 272.587 94.1045 269.479 96.332 266.187 cv
98.4082 263.118 100.556 259.945 101.509 256.051 cv
103.452 256.525 li
102.413 260.77 100.063 264.243 97.9883 267.308 cv
95.8477 270.47 94 273.2 94 276 cv
cp
f
103.972 253.054 mo
101.974 252.946 li
101.99 252.635 102 252.32 102 252 cv
102 243.729 95.2715 237 87 237 cv
85.1104 237 83.2686 237.347 81.5264 238.029 cv
80.7959 236.168 li
82.7725 235.393 84.8594 235 87 235 cv
96.374 235 104 242.626 104 252 cv
104 252.355 103.99 252.707 103.972 253.054 cv
cp
f
78.7617 239.463 mo
77.6602 237.793 li
78.1709 237.457 78.709 237.143 79.2607 236.859 cv
80.1748 238.639 li
79.6865 238.889 79.2109 239.166 78.7617 239.463 cv
cp
f
70.0303 253.057 mo
70.0107 252.709 70 252.356 70 252 cv
70 246.943 72.2285 242.184 76.1143 238.942 cv
77.3955 240.478 li
73.9668 243.339 72 247.538 72 252 cv
72 252.319 72.0088 252.633 72.0264 252.943 cv
70.0303 253.057 li
cp
f
75.7393 266.252 mo
73.7412 263.664 71.5635 260.487 70.5654 256.55 cv
72.5049 256.058 li
73.4131 259.641 75.4502 262.604 77.3232 265.029 cv
75.7393 266.252 li
cp
f
83.5264 270.02 mo
82.3906 265.743 80.6602 263.697 78.9863 261.72 cv
77.6963 260.194 76.4775 258.754 75.7402 256.512 cv
77.6406 255.887 li
78.2559 257.76 79.3018 258.996 80.5137 260.428 cv
82.2451 262.475 84.208 264.795 85.46 269.506 cv
83.5264 270.02 li
cp
f
75.042 253.082 mo
75.0146 252.727 75 252.367 75 252 cv
75 245.383 80.3828 240 87 240 cv
93.6172 240 99 245.383 99 252 cv
99 252.365 98.9854 252.724 98.958 253.077 cv
96.9639 252.923 li
96.9873 252.62 97 252.313 97 252 cv
97 246.486 92.5137 242 87 242 cv
81.4863 242 77 246.486 77 252 cv
77 252.314 77.0127 252.623 77.0361 252.928 cv
75.042 253.082 li
cp
f
89.3848 273.001 mo
87.4473 272.507 li
88.3125 269.116 90.2832 266.203 92.1895 263.387 cv
93.8916 260.871 95.4971 258.499 96.3545 255.901 cv
98.2529 256.528 li
97.3096 259.39 95.6289 261.873 93.8486 264.503 cv
92.0352 267.183 90.1641 269.948 89.3848 273.001 cv
cp
f
88.3857 263.246 mo
86.5537 262.441 li
87.6328 259.985 88.8594 258.316 89.8457 256.976 cv
90.9502 255.475 91.748 254.39 91.9434 252.872 cv
91.9805 252.585 92 252.294 92 252 cv
92 249.243 89.7568 247 87 247 cv
84.2432 247 82 249.243 82 252 cv
82 254.23 83.1729 255.661 85.4824 257.674 cv
84.168 259.182 li
81.5283 256.881 80 254.968 80 252 cv
80 248.141 83.1406 245 87 245 cv
90.8594 245 94 248.141 94 252 cv
94 252.369 93.9756 252.748 93.9277 253.126 cv
93.665 255.158 92.6416 256.55 91.457 258.161 cv
90.4805 259.487 89.375 260.991 88.3857 263.246 cv
cp
f
465.764 146.458 mo
464.238 144.873 462.191 144 460 144 cv
455.005 144 li
455.005 142 li
460 142 li
462.74 142 465.3 143.091 467.205 145.071 cv
465.764 146.458 li
cp
f
452.997 144 mo
451.001 144 li
451.001 142 li
452.997 142 li
452.997 144 li
cp
f
420 148 mo
417.794 148 416 149.794 416 152 cv
416 181 li
416 183.206 417.794 185 420 185 cv
460 185 li
462.206 185 464 183.206 464 181 cv
464 152 li
464 149.794 462.206 148 460 148 cv
420 148 li
cp
460 187 mo
420 187 li
416.691 187 414 184.309 414 181 cv
414 152 li
414 148.691 416.691 146 420 146 cv
460 146 li
463.309 146 466 148.691 466 152 cv
466 181 li
466 184.309 463.309 187 460 187 cv
cp
f
465 179 mo
415 179 li
415 177 li
465 177 li
465 179 li
cp
f
450.143 196.515 mo
444.143 186.515 li
445.857 185.485 li
451.857 195.485 li
450.143 196.515 li
cp
f
429.857 196.515 mo
428.143 195.485 li
434.143 185.485 li
435.857 186.515 li
429.857 196.515 li
cp
f
465 197 mo
463 197 li
463 195 li
465 195 li
465 197 li
cp
f
461 197 mo
416 197 li
416 195 li
461 195 li
461 197 li
cp
f
440 153 mo
434.486 153 430 157.486 430 163 cv
430 168.514 434.486 173 440 173 cv
445.514 173 450 168.514 450 163 cv
450 157.486 445.514 153 440 153 cv
cp
440 175 mo
433.383 175 428 169.617 428 163 cv
428 156.383 433.383 151 440 151 cv
446.617 151 452 156.383 452 163 cv
452 169.617 446.617 175 440 175 cv
cp
f
440 153 mo
438.111 153 436 157.276 436 163 cv
436 168.724 438.111 173 440 173 cv
441.889 173 444 168.724 444 163 cv
444 157.276 441.889 153 440 153 cv
cp
440 175 mo
436.579 175 434 169.841 434 163 cv
434 156.159 436.579 151 440 151 cv
443.421 151 446 156.159 446 163 cv
446 169.841 443.421 175 440 175 cv
cp
f
440 159 mo
434.276 159 430 161.111 430 163 cv
430 164.889 434.276 167 440 167 cv
445.724 167 450 164.889 450 163 cv
450 161.111 445.724 159 440 159 cv
cp
440 169 mo
433.159 169 428 166.421 428 163 cv
428 159.579 433.159 157 440 157 cv
446.841 157 452 159.579 452 163 cv
452 166.421 446.841 169 440 169 cv
cp
f
425 165 mo
421 165 li
421 163 li
425 163 li
425 165 li
cp
f
425.918 158.332 mo
422.723 155.137 li
424.137 153.723 li
427.332 156.918 li
425.918 158.332 li
cp
f
424.137 174.277 mo
422.723 172.863 li
425.871 169.715 li
427.285 171.129 li
424.137 174.277 li
cp
f
459 165 mo
455 165 li
455 163 li
459 163 li
459 165 li
cp
f
454.154 158.26 mo
452.74 156.846 li
455.809 153.777 li
457.223 155.191 li
454.154 158.26 li
cp
f
455.879 174.293 mo
452.789 171.203 li
454.203 169.789 li
457.293 172.879 li
455.879 174.293 li
cp
f
351 167 mo
349.346 167 348 168.346 348 170 cv
348 171.654 349.346 173 351 173 cv
352.654 173 354 171.654 354 170 cv
354 168.346 352.654 167 351 167 cv
cp
351 175 mo
348.243 175 346 172.757 346 170 cv
346 167.243 348.243 165 351 165 cv
353.757 165 356 167.243 356 170 cv
356 172.757 353.757 175 351 175 cv
cp
f
351 162 mo
346.589 162 343 165.589 343 170 cv
343 174.411 346.589 178 351 178 cv
355.411 178 359 174.411 359 170 cv
359 165.589 355.411 162 351 162 cv
cp
351 180 mo
345.486 180 341 175.514 341 170 cv
341 164.486 345.486 160 351 160 cv
356.514 160 361 164.486 361 170 cv
361 175.514 356.514 180 351 180 cv
cp
f
351 162 mo
344.388 162 336 165.767 336 170 cv
336 174.233 344.388 178 351 178 cv
357.612 178 366 174.233 366 170 cv
366 165.767 357.612 162 351 162 cv
cp
351 180 mo
343.3 180 334 175.539 334 170 cv
334 164.461 343.3 160 351 160 cv
358.7 160 368 164.461 368 170 cv
368 175.539 358.7 180 351 180 cv
cp
f
352 157 mo
350 157 li
350 153 li
352 153 li
352 157 li
cp
f
358.139 160.275 mo
356.725 158.861 li
359.84 155.746 li
361.254 157.16 li
358.139 160.275 li
cp
f
343.889 160.303 mo
340.674 157.088 li
342.088 155.674 li
345.303 158.889 li
343.889 160.303 li
cp
f
352 187 mo
350 187 li
350 183 li
352 183 li
352 187 li
cp
f
359.857 184.271 mo
356.793 181.207 li
358.207 179.793 li
361.271 182.857 li
359.857 184.271 li
cp
f
342.148 184.266 mo
340.734 182.852 li
343.822 179.764 li
345.236 181.178 li
342.148 184.266 li
cp
f
351 151 mo
340.523 151 332 159.523 332 170 cv
332 180.477 340.523 189 351 189 cv
361.477 189 370 180.477 370 170 cv
370 159.523 361.477 151 351 151 cv
cp
351 191 mo
339.421 191 330 181.579 330 170 cv
330 158.421 339.421 149 351 149 cv
362.579 149 372 158.421 372 170 cv
372 181.579 362.579 191 351 191 cv
cp
f
367.64 197.338 mo
366.599 195.631 li
369.303 193.981 371.722 191.924 373.787 189.515 cv
375.305 190.815 li
373.103 193.385 370.523 195.58 367.64 197.338 cv
cp
f
377.208 188.367 mo
375.569 187.219 li
375.924 186.713 376.265 186.196 376.588 185.669 cv
378.293 186.714 li
377.948 187.276 377.586 187.828 377.208 188.367 cv
cp
f
324.332 156.245 mo
322.555 155.327 li
325.591 149.454 330.499 144.555 336.374 141.531 cv
337.29 143.309 li
331.78 146.145 327.179 150.738 324.332 156.245 cv
cp
f
322.646 160.172 mo
320.758 159.516 li
320.962 158.926 321.183 158.344 321.421 157.769 cv
323.269 158.534 li
323.046 159.072 322.839 159.619 322.646 160.172 cv
cp
f
351 145 mo
337.215 145 326 156.215 326 170 cv
326 183.785 337.215 195 351 195 cv
364.785 195 376 183.785 376 170 cv
376 156.215 364.785 145 351 145 cv
cp
351 197 mo
336.112 197 324 184.888 324 170 cv
324 155.112 336.112 143 351 143 cv
365.888 143 378 155.112 378 170 cv
378 184.888 365.888 197 351 197 cv
cp
f
271 193 mo
249 193 li
249 191 li
271 191 li
271 193 li
cp
f
286 193 mo
281 193 li
281 191 li
286 191 li
286 188 li
286 183.867 283.605 180.394 279.9 179.15 cv
277.189 178.24 li
275.327 177.614 273.684 176.303 272.563 174.546 cv
271.123 172.291 li
269.356 169.524 266.826 168 264 168 cv
253 168 li
249.815 168 246.805 169.848 245.144 172.821 cv
243.78 175.263 li
242.58 177.41 240.729 179.036 238.569 179.842 cv
236.301 180.688 235 182.567 235 185 cv
235 191 li
239 191 li
239 193 li
235 193 li
233.748 193 233 192.252 233 191 cv
233 185 li
233 181.733 234.82 179.104 237.87 177.968 cv
239.587 177.327 241.065 176.021 242.034 174.287 cv
243.397 171.847 li
245.412 168.24 249.091 166 253 166 cv
264 166 li
267.533 166 270.661 167.852 272.809 171.215 cv
274.248 173.47 li
275.124 174.843 276.395 175.863 277.826 176.344 cv
280.537 177.254 li
285.07 178.775 288 182.993 288 188 cv
288 191 li
288 192.252 287.252 193 286 193 cv
cp
f
246.745 178 mo
270.129 178 li
267.764 174.461 li
267.04 173.329 265.811 172 264 172 cv
253 172 li
251.264 172 249.591 173.063 248.636 174.772 cv
246.745 178 li
cp
273.871 180 mo
243.255 180 li
246.899 173.778 li
248.198 171.455 250.54 170 253 170 cv
264 170 li
266.15 170 268.03 171.164 269.438 173.367 cv
273.871 180 li
cp
f
260 192 mo
258 192 li
258 171 li
260 171 li
260 192 li
cp
f
244 188 mo
241.794 188 240 189.794 240 192 cv
240 194.206 241.794 196 244 196 cv
246.206 196 248 194.206 248 192 cv
248 189.794 246.206 188 244 188 cv
cp
244 198 mo
240.691 198 238 195.309 238 192 cv
238 188.691 240.691 186 244 186 cv
247.309 186 250 188.691 250 192 cv
250 195.309 247.309 198 244 198 cv
cp
f
244 192 mo
244 192.002 li
244 192 li
cp
244 194 mo
242.897 194 242 193.103 242 192 cv
242 190.897 242.897 190 244 190 cv
245.103 190 246 190.897 246 192 cv
246 193.103 245.103 194 244 194 cv
cp
f
276 188 mo
273.794 188 272 189.794 272 192 cv
272 194.206 273.794 196 276 196 cv
278.206 196 280 194.206 280 192 cv
280 189.794 278.206 188 276 188 cv
cp
276 198 mo
272.691 198 270 195.309 270 192 cv
270 188.691 272.691 186 276 186 cv
279.309 186 282 188.691 282 192 cv
282 195.309 279.309 198 276 198 cv
cp
f
276 192 mo
276 192.002 li
276 192 li
cp
276 194 mo
274.897 194 274 193.103 274 192 cv
274 190.897 274.897 190 276 190 cv
277.103 190 278 190.897 278 192 cv
278 193.103 277.103 194 276 194 cv
cp
f
286.611 186 mo
282.729 186 li
280.673 186 279 184.345 279 182.31 cv
279 178.129 li
281 178.129 li
281 182.31 li
281 183.241 281.775 184 282.729 184 cv
286.611 184 li
286.611 186 li
cp
f
266 184 mo
262 184 li
262 182 li
266 182 li
266 184 li
cp
f
256 184 mo
252 184 li
252 182 li
256 182 li
256 184 li
cp
f
235 198 mo
233 198 li
233 196 li
235 196 li
235 198 li
cp
f
288 198 mo
237 198 li
237 196 li
288 196 li
288 198 li
cp
f
278 156.008 mo
276 156.008 li
276 158 li
278 158 li
278 156.008 li
cp
f
279.12 154.887 mo
277.989 153.752 276.011 153.752 274.88 154.887 cv
273.464 153.473 li
274.408 152.528 275.663 152.008 277 152.008 cv
278.337 152.008 279.592 152.528 280.536 153.473 cv
279.12 154.887 li
cp
f
281.95 152.058 mo
280.627 150.736 278.869 150.008 277 150.008 cv
275.131 150.008 273.373 150.736 272.05 152.058 cv
270.636 150.644 li
272.337 148.943 274.597 148.008 277 148.008 cv
279.403 148.008 281.663 148.943 283.364 150.644 cv
281.95 152.058 li
cp
f
270.097 158.794 mo
270.513 159.227 li
272.229 161.015 274.534 162 277 162 cv
281.963 162 286 157.963 286 153 cv
286 148.037 281.963 144 277 144 cv
272.037 144 268 148.037 268 153 cv
268 153.681 268.087 154.388 268.258 155.101 cv
268.342 155.453 li
266.131 159.922 li
270.097 158.794 li
cp
277 164 mo
274.188 164 271.548 162.953 269.503 161.039 cv
266.43 161.907 li
266.306 161.96 266.084 162 265.857 162 cv
264.833 162 264 161.167 264 160.143 cv
264 159.924 264.041 159.699 264.117 159.493 cv
264.158 159.398 li
266.232 155.207 li
266.078 154.462 266 153.722 266 153 cv
266 146.935 270.935 142 277 142 cv
283.065 142 288 146.935 288 153 cv
288 159.065 283.065 164 277 164 cv
cp
f
241.893 153.307 mo
238.782 150.196 li
240.196 148.782 li
243.307 151.893 li
241.893 153.307 li
cp
f
254 151 mo
252 151 li
252 147 li
254 147 li
254 151 li
cp
f
241 164 mo
237 164 li
237 162 li
241 162 li
241 164 li
cp
f
237 187 mo
234 187 li
234 185 li
237 185 li
237 183 li
234.678 183 li
234.678 181 li
237 181 li
238.103 181 239 181.897 239 183 cv
239 185 li
239 186.103 238.103 187 237 187 cv
cp
f
153.36 186.099 mo
153.101 185.253 153 184.524 153 183.5 cv
153 178.262 157.262 174 162.5 174 cv
167.738 174 172 178.262 172 183.5 cv
172 185 li
170 185 li
170 183.5 li
170 179.364 166.636 176 162.5 176 cv
158.364 176 155 179.364 155 183.5 cv
155 184.33 155.071 184.856 155.272 185.511 cv
153.36 186.099 li
cp
f
167 190 mo
165 190 li
165 189.166 165.135 188.516 165.467 187.758 cv
167.299 188.559 li
167.078 189.064 167 189.441 167 190 cv
cp
f
155.999 200 mo
154.324 200 li
149.858 200 145.723 197.61 143.531 193.765 cv
145.27 192.774 li
147.105 195.998 150.575 198 154.324 198 cv
155.999 198 li
155.999 200 li
cp
f
160 200 mo
158 200 li
158 198 li
160 198 li
160 200 li
cp
f
171 196 mo
154.324 196 li
149.734 196 146 192.411 146 187.999 cv
146 183.588 149.589 180 154 180 cv
154.374 180 li
154.374 182 li
154 182 li
150.691 182 148 184.691 148 187.999 cv
148 191.308 150.837 194 154.324 194 cv
171 194 li
173.206 194 175 192.206 175 190 cv
175 187.799 173.362 186.354 171.744 186.066 cv
170.745 185.887 169.773 186.064 168.933 186.575 cv
167.896 184.864 li
169.141 184.109 170.631 183.836 172.095 184.098 cv
174.938 184.604 177 187.086 177 190 cv
177 193.309 174.309 196 171 196 cv
cp
f
187 151 mo
185 151 li
185 153 li
187 153 li
187 151 li
cp
f
183 151 mo
181 151 li
181 153 li
183 153 li
183 151 li
cp
f
190 192 mo
188 192 li
188 194 li
190 194 li
190 192 li
cp
f
190 176 mo
188 176 li
188 178 li
190 178 li
190 176 li
cp
f
190 180 mo
188 180 li
188 182 li
190 182 li
190 180 li
cp
f
191 151 mo
189 151 li
189 153 li
191 153 li
191 151 li
cp
f
178 147 mo
177.448 147 177 147.448 177 148 cv
177 160 li
177 160.552 177.448 161 178 161 cv
194 161 li
194.552 161 195 160.552 195 160 cv
195 148 li
195 147.448 194.552 147 194 147 cv
178 147 li
cp
194 163 mo
178 163 li
176.346 163 175 161.654 175 160 cv
175 148 li
175 146.346 176.346 145 178 145 cv
194 145 li
195.654 145 197 146.346 197 148 cv
197 160 li
197 161.654 195.654 163 194 163 cv
cp
f
196 158 mo
176 158 li
176 156 li
196 156 li
196 158 li
cp
f
182.46 167.371 mo
180.603 166.629 li
182.603 161.629 li
184.46 162.371 li
182.46 167.371 li
cp
f
189.622 167.381 mo
187.56 162.381 li
189.409 161.619 li
191.472 166.619 li
189.622 167.381 li
cp
f
194 168 mo
178 168 li
178 166 li
194 166 li
194 168 li
cp
f
183 174 mo
182.448 174 182 174.448 182 175 cv
182 195 li
182 195.552 182.448 196 183 196 cv
195 196 li
195.552 196 196 195.552 196 195 cv
196 175 li
196 174.448 195.552 174 195 174 cv
183 174 li
cp
195 198 mo
183 198 li
181.346 198 180 196.654 180 195 cv
180 175 li
180 173.346 181.346 172 183 172 cv
195 172 li
196.654 172 198 173.346 198 175 cv
198 195 li
198 196.654 196.654 198 195 198 cv
cp
f
197 190 mo
181 190 li
181 188 li
197 188 li
197 190 li
cp
f
173.989 181 mo
170.248 181 li
170.248 179 li
173.989 179 li
174 177.011 li
174 175.902 174.902 175 176.011 175 cv
181 175 li
181 177 li
176.011 177 li
176 178.989 li
176 180.098 175.098 181 173.989 181 cv
cp
f
170 177 mo
166.502 177 li
166.502 175 li
170 175 li
170 155 li
170 153.897 170.897 153 172 153 cv
176 153 li
176 155 li
172 155 li
172 175 li
172 176.103 171.103 177 170 177 cv
cp
f
156.02 179 mo
149 179 li
147.897 179 147 178.103 147 177 cv
147 173 li
147 171.897 147.897 171 149 171 cv
154.002 171 li
154 166 li
156 166 li
156 171.002 li
156 172.104 155.104 173 154.002 173 cv
149 173 li
149 177 li
156.02 177 li
156.02 179 li
cp
f
155 147 mo
153.897 147 153 147.897 153 149 cv
153 151 li
153 152.103 153.897 153 155 153 cv
156.103 153 157 152.103 157 151 cv
157 149 li
157 147.897 156.103 147 155 147 cv
cp
155 155 mo
152.794 155 151 153.206 151 151 cv
151 149 li
151 146.794 152.794 145 155 145 cv
157.206 145 159 146.794 159 149 cv
159 151 li
159 153.206 157.206 155 155 155 cv
cp
f
161 164.912 mo
159 164.912 li
159 163 li
159 160.794 157.206 159 155 159 cv
152.794 159 151 160.794 151 163 cv
151 164.912 li
149 164.912 li
149 163 li
149 159.691 151.691 157 155 157 cv
158.309 157 161 159.691 161 163 cv
161 164.912 li
cp
f
155 143 mo
148.935 143 144 147.935 144 154 cv
144 160.065 148.935 165 155 165 cv
161.065 165 166 160.065 166 154 cv
166 147.935 161.065 143 155 143 cv
cp
155 167 mo
147.832 167 142 161.168 142 154 cv
142 146.832 147.832 141 155 141 cv
162.168 141 168 146.832 168 154 cv
168 161.168 162.168 167 155 167 cv
cp
f
65 197 mo
61 197 li
57.1406 197 54 193.859 54 190 cv
54 152 li
56 152 li
56 190 li
56 192.757 58.2432 195 61 195 cv
63 195 li
63 169 li
65 169 li
65 197 li
cp
f
96.999 172 mo
94.999 172 li
94.999 157 li
98.999 157 li
101.756 157 103.999 154.757 103.999 152 cv
103.999 149.243 101.756 147 98.999 147 cv
61 147 li
58.2432 147 56 149.243 56 152 cv
56 154.757 58.2432 157 61 157 cv
65 157 li
65 170 li
63 170 li
63 159 li
61 159 li
57.1406 159 54 155.859 54 152 cv
54 148.141 57.1406 145 61 145 cv
98.999 145 li
102.858 145 105.999 148.141 105.999 152 cv
105.999 155.859 102.858 159 98.999 159 cv
96.999 159 li
96.999 172 li
cp
f
98.999 197 mo
94.999 197 li
94.999 171 li
96.999 171 li
96.999 195 li
98.999 195 li
101.756 195 103.999 192.757 103.999 190 cv
103.999 152 li
105.999 152 li
105.999 190 li
105.999 193.859 102.858 197 98.999 197 cv
cp
f
101.999 166 mo
99.999 166 li
99.999 164 li
101.999 164 li
101.999 166 li
cp
f
101.999 190 mo
99.999 190 li
99.999 168 li
101.999 168 li
101.999 190 li
cp
f
60 191 mo
58 191 li
58 189 li
60 189 li
60 191 li
cp
f
60 187 mo
58 187 li
58 162 li
60 162 li
60 187 li
cp
f
105.902 146.225 mo
104.187 144.176 101.67 143 98.999 143 cv
97 143 li
97 141 li
98.999 141 li
102.264 141 105.339 142.437 107.436 144.941 cv
105.902 146.225 li
cp
f
94.999 143 mo
93 143 li
93 141 li
94.999 141 li
94.999 143 li
cp
f
80 156 mo
74.4863 156 70 160.486 70 166 cv
70 171.514 74.4863 176 80 176 cv
85.5137 176 90 171.514 90 166 cv
90 160.486 85.5137 156 80 156 cv
cp
80 178 mo
73.3828 178 68 172.617 68 166 cv
68 159.383 73.3828 154 80 154 cv
86.6172 154 92 159.383 92 166 cv
92 172.617 86.6172 178 80 178 cv
cp
f
80 156 mo
78.1113 156 76 160.276 76 166 cv
76 171.724 78.1113 176 80 176 cv
81.8887 176 84 171.724 84 166 cv
84 160.276 81.8887 156 80 156 cv
cp
80 178 mo
76.5791 178 74 172.841 74 166 cv
74 159.159 76.5791 154 80 154 cv
83.4209 154 86 159.159 86 166 cv
86 172.841 83.4209 178 80 178 cv
cp
f
80 162 mo
74.2764 162 70 164.111 70 166 cv
70 167.889 74.2764 170 80 170 cv
85.7236 170 90 167.889 90 166 cv
90 164.111 85.7236 162 80 162 cv
cp
80 172 mo
73.1592 172 68 169.421 68 166 cv
68 162.579 73.1592 160 80 160 cv
86.8408 160 92 162.579 92 166 cv
92 169.421 86.8408 172 80 172 cv
cp
f
74 179 mo
72 179 li
72 174.485 li
74 174.485 li
74 179 li
cp
f
74 183 mo
72 183 li
72 181 li
74 181 li
74 183 li
cp
f
88 179 mo
86 179 li
86 174.485 li
88 174.485 li
88 179 li
cp
f
88 183 mo
86 183 li
86 181 li
88 181 li
88 183 li
cp
f
80 187 mo
64 187 li
64 185 li
80 185 li
80 187 li
cp
f
81 189 mo
79 189 li
79 182 li
81 182 li
81 189 li
cp
f
81 193 mo
79 193 li
79 191 li
81 191 li
81 193 li
cp
f
96 187 mo
83 187 li
83 185 li
96 185 li
96 187 li
cp
f
431 69 mo
430.998 69 li
431 81 li
443 81 li
443 69 li
431 69 li
cp
443 83 mo
431 83 li
429.897 83 429 82.1025 429 81 cv
429 69 li
429 67.8975 429.897 67 431 67 cv
443 67 li
444.103 67 445 67.8975 445 69 cv
445 81 li
445 82.1025 444.103 83 443 83 cv
cp
f
426 71 mo
424 71 li
424 65 li
424 63.3457 425.346 62 427 62 cv
429 62 li
429 64 li
427 64 li
426.448 64 426 64.4482 426 65 cv
426 71 li
cp
f
426 75 mo
424 75 li
424 73 li
426 73 li
426 75 li
cp
f
423 59 mo
421.897 59 421 59.8975 421 61 cv
421 89 li
421 90.1025 421.897 91 423 91 cv
451 91 li
452.103 91 453 90.1025 453 89 cv
453 61 li
453 59.8975 452.103 59 451 59 cv
423 59 li
cp
451 93 mo
423 93 li
420.794 93 419 91.2061 419 89 cv
419 61 li
419 58.7939 420.794 57 423 57 cv
451 57 li
453.206 57 455 58.7939 455 61 cv
455 89 li
455 91.2061 453.206 93 451 93 cv
cp
f
426 58 mo
424 58 li
424 53 li
426 53 li
426 58 li
cp
f
450 58 mo
448 58 li
448 53 li
450 53 li
450 58 li
cp
f
438 58 mo
436 58 li
436 55 li
438 55 li
438 58 li
cp
f
420 64 mo
412 64 li
412 62 li
420 62 li
420 64 li
cp
f
420 74 mo
415 74 li
415 72 li
420 72 li
420 74 li
cp
f
420 85 mo
413 85 li
413 83 li
420 83 li
420 85 li
cp
f
418 106 mo
416 106 li
416 100 li
416 98.8975 416.897 98 418 98 cv
427 98 li
427 92 li
429 92 li
429 98 li
429 99.1025 428.103 100 427 100 cv
418 100 li
418 106 li
cp
f
441 107 mo
439 107 li
439 103 li
436 103 li
434.897 103 434 102.103 434 101 cv
434 92 li
436 92 li
436 101 li
439 101 li
440.103 101 441 101.897 441 103 cv
441 107 li
cp
f
461 107 mo
453 107 li
451.897 107 451 106.103 451 105 cv
451 102 li
445 102 li
443.897 102 443 101.103 443 100 cv
443 92 li
445 92 li
445 100 li
451 100 li
452.103 100 453 100.897 453 102 cv
453 105 li
461 105 li
461 95 li
461 93.8975 461.897 93 463 93 cv
467 93 li
467 95 li
463 95 li
463 105 li
463 106.103 462.103 107 461 107 cv
cp
f
467 88 mo
462 88 li
460.897 88 460 87.1025 460 86 cv
460 81 li
454 81 li
454 79 li
460 79 li
461.103 79 462 79.8975 462 81 cv
462 86 li
467 86 li
467 88 li
cp
f
465 75 mo
454 75 li
454 73 li
465 73 li
465 75 li
cp
f
458 68 mo
454 68 li
454 66 li
458 66 li
458 60 li
458 58.8975 458.897 58 460 58 cv
463 58 li
464.103 58 465 58.8975 465 60 cv
465 64 li
468 64 li
468 66 li
465 66 li
463.897 66 463 65.1025 463 64 cv
463 60 li
460 60 li
460 66 li
460 67.1025 459.103 68 458 68 cv
cp
f
326 91 mo
324 91 li
324 93 li
326 93 li
326 91 li
cp
f
326 95 mo
324 95 li
324 97 li
326 97 li
326 95 li
cp
f
326 99 mo
324 99 li
324 101 li
326 101 li
326 99 li
cp
f
377 94 mo
375 94 li
375 96 li
377 96 li
377 94 li
cp
f
377 98 mo
375 98 li
375 100 li
377 100 li
377 98 li
cp
f
377 102 mo
375 102 li
375 104 li
377 104 li
377 102 li
cp
f
371 51 mo
369 51 li
369 53 li
371 53 li
371 51 li
cp
f
371 55 mo
369 55 li
369 57 li
371 57 li
371 55 li
cp
f
371 59 mo
369 59 li
369 61 li
371 61 li
371 59 li
cp
f
329.003 76 mo
330.003 76 li
330 105 li
370 105 li
370 76 li
374 76 li
349.98 55 li
326.004 76.0107 li
329.003 76 li
cp
370 107 mo
330 107 li
328.897 107 328 106.103 328 105 cv
328.003 78 li
326 78 li
324.897 78 324 77.1025 324 76 cv
324 75.4336 324.25 74.8887 324.686 74.5059 cv
348.703 53.4941 li
349.473 52.8418 350.539 52.8516 351.285 53.4844 cv
375.313 74.5049 li
375.75 74.8887 376 75.4336 376 76 cv
376 77.1025 375.103 78 374 78 cv
372 78 li
372 105 li
372 106.103 371.103 107 370 107 cv
cp
f
336.025 61.3271 mo
334.709 59.8213 li
335.981 58.709 li
337.298 60.2148 li
336.025 61.3271 li
cp
f
323.775 72.0449 mo
322.459 70.5391 li
332.176 62.0381 li
333.492 63.5439 li
323.775 72.0449 li
cp
f
350 101 mo
341.178 101 334 93.8223 334 85 cv
334 80.1475 336.18 75.7646 340.137 72.6602 cv
340.671 72.2305 341.318 72 342 72 cv
343.654 72 345 73.3457 345 75 cv
345 75.9023 344.593 76.75 343.882 77.3262 cv
341.256 79.2295 340 81.7295 340 85 cv
340 87.915 341.268 90.6777 343.479 92.5811 cv
342.174 94.0967 li
339.521 91.8135 338 88.498 338 85 cv
338 81.0967 339.569 77.9814 342.665 75.7393 cv
342.862 75.5771 343 75.2959 343 75 cv
343 74.4482 342.552 74 342 74 cv
341.721 74 341.509 74.123 341.38 74.2266 cv
337.907 76.9512 336 80.7744 336 85 cv
336 92.7197 342.28 99 350 99 cv
357.72 99 364 92.7197 364 85 cv
364 80.7744 362.093 76.9512 358.629 74.2344 cv
358.491 74.123 358.279 74 358 74 cv
357.448 74 357 74.4482 357 75 cv
357 75.2959 357.138 75.5771 357.379 75.7715 cv
360.431 77.9814 362 81.0977 362 85 cv
362 91.6172 356.617 97 350 97 cv
349.336 97 348.668 96.9453 348.015 96.8359 cv
348.343 94.8633 li
348.889 94.9541 349.446 95 350 95 cv
355.514 95 360 90.5137 360 85 cv
360 81.7295 358.745 79.2295 356.162 77.3584 cv
355.408 76.749 355 75.9014 355 75 cv
355 73.3457 356.346 72 358 72 cv
358.682 72 359.329 72.2305 359.872 72.668 cv
363.82 75.7646 366 80.1475 366 85 cv
366 93.8223 358.822 101 350 101 cv
cp
f
345.438 96.1016 mo
344.87 95.8691 344.313 95.5869 343.779 95.2646 cv
344.816 93.5537 li
345.261 93.8232 345.725 94.0576 346.197 94.252 cv
345.438 96.1016 li
cp
f
349 68 mo
348.998 68 li
349 78 li
351 78 li
351 68 li
349 68 li
cp
351 80 mo
349 80 li
347.897 80 347 79.1025 347 78 cv
347 68 li
347 66.8975 347.897 66 349 66 cv
351 66 li
352.103 66 353 66.8975 353 68 cv
353 78 li
353 79.1025 352.103 80 351 80 cv
cp
f
359.682 102.505 mo
358.713 100.755 li
359.219 100.475 359.718 100.165 360.197 99.835 cv
361.332 101.481 li
360.8 101.849 360.244 102.192 359.682 102.505 cv
cp
f
363.618 99.6475 mo
362.257 98.1826 li
364.149 96.4219 365.668 94.2334 366.648 91.8555 cv
368.498 92.6172 li
367.408 95.2607 365.721 97.6914 363.618 99.6475 cv
cp
f
234.319 100.119 mo
234.112 98.3975 233.76 96.3252 233.387 94.1309 cv
232.705 90.125 232 85.9834 232 83 cv
232 79.8447 233.162 78.0537 237.487 71.3867 cv
238.354 70.0498 239.353 68.5098 240.501 66.7148 cv
241.242 65.4365 242.76 64.7646 244.247 65.0791 cv
245.407 65.3242 246.38 66.1777 246.786 67.3066 cv
247.109 68.2002 247.066 69.127 246.66 69.9873 cv
243.154 77.4414 li
241.344 76.5898 li
244.851 69.1348 li
245.03 68.7549 245.048 68.3799 244.905 67.9854 cv
244.733 67.5098 244.313 67.1377 243.834 67.0361 cv
243.04 66.8691 242.462 67.3193 242.209 67.7559 cv
241.035 69.5918 240.034 71.1357 239.165 72.4746 cv
234.991 78.9082 234 80.4365 234 83 cv
234 85.8145 234.69 89.8711 235.358 93.7949 cv
235.735 96.0146 236.093 98.1104 236.306 99.8809 cv
234.319 100.119 li
cp
f
285.734 100.119 mo
283.748 99.8809 li
283.957 98.1455 284.298 96.0957 284.658 93.9258 cv
285.317 89.9541 286 85.8477 286 83 cv
286 80.4365 285.008 78.9082 280.834 72.4736 cv
279.965 71.1348 278.964 69.5918 277.813 67.793 cv
277.536 67.3184 276.966 66.8701 276.165 67.0361 cv
275.687 67.1377 275.267 67.5098 275.095 67.9844 cv
274.952 68.3799 274.97 68.7549 275.148 69.1338 cv
278.656 76.5898 li
276.846 77.4414 li
273.339 69.9863 li
272.934 69.127 272.891 68.2002 273.214 67.3057 cv
273.62 66.1777 274.593 65.3242 275.752 65.0791 cv
277.24 64.7656 278.759 65.4375 279.521 66.7529 cv
280.646 68.5098 281.645 70.0488 282.512 71.3848 cv
286.837 78.0527 288 79.8447 288 83 cv
288 86.0127 287.304 90.2021 286.631 94.2529 cv
286.274 96.4004 285.938 98.4287 285.734 100.119 cv
cp
f
243.344 100.422 mo
241.531 99.5781 li
244.412 93.3945 li
244.684 92.7139 245 91.1904 245 90 cv
245 89.376 244.941 88.8076 244.812 88.1572 cv
242.968 78.7441 li
242.889 78.4004 242.588 78 242 78 cv
241.374 78 241 78.5635 241 79.1074 cv
241 86 li
239 86 li
239 79.1074 li
239 77.3652 240.317 76 242 76 cv
243.431 76 244.605 76.9355 244.924 78.3291 cv
246.773 87.7686 li
246.928 88.5381 247 89.249 247 90 cv
247 91.3193 246.676 93.1201 246.246 94.1895 cv
243.344 100.422 li
cp
f
247 108 mo
245 108 li
245 101 li
233 101 li
233 108 li
231 108 li
231 101 li
231 99.8975 231.897 99 233 99 cv
245 99 li
246.103 99 247 99.8975 247 101 cv
247 108 li
cp
f
276.671 100.424 mo
273.776 94.2402 li
273.374 93.1553 273 91.4023 273 90 cv
273 89.249 273.072 88.5381 273.228 87.7646 cv
275.069 78.3594 li
275.385 76.9795 276.614 76 278 76 cv
279.878 76 281 77.5801 281 79.1074 cv
281 86 li
279 86 li
279 79.1074 li
279 78.6475 278.689 78 278 78 cv
277.538 78 277.128 78.3262 277.025 78.7744 cv
275.189 88.1533 li
275.059 88.8076 275 89.376 275 90 cv
275 91.1572 275.319 92.6523 275.62 93.4717 cv
278.481 99.5762 li
276.671 100.424 li
cp
f
289 108 mo
287 108 li
287 101 li
275 101 li
275 108 li
273 108 li
273 101 li
273 99.8975 273.897 99 275 99 cv
287 99 li
288.103 99 289 99.8975 289 101 cv
289 108 li
cp
f
261 108 mo
259 108 li
259 104 li
261 104 li
261 108 li
cp
f
269.875 106.289 mo
266.711 103.125 li
268.125 101.711 li
271.289 104.875 li
269.875 106.289 li
cp
f
250.172 106.242 mo
248.758 104.828 li
251.852 101.734 li
253.266 103.148 li
250.172 106.242 li
cp
f
260 99 mo
254.186 99 248.769 96.3945 245.138 91.8525 cv
246.7 90.6045 li
249.949 94.6689 254.797 97 260 97 cv
265.22 97 270.07 94.6768 273.307 90.627 cv
274.869 91.875 li
271.251 96.4033 265.831 99 260 99 cv
cp
f
260 99 mo
257.023 99 254.338 96.7061 252.438 92.54 cv
254.258 91.71 li
255.791 95.0723 257.884 97 260 97 cv
264.337 97 268 89.2148 268 80 cv
268 70.7852 264.337 63 260 63 cv
255.663 63 252 70.7852 252 80 cv
252 82.75 252.31 85.3779 252.919 87.8105 cv
250.979 88.2969 li
250.329 85.7051 250 82.9141 250 80 cv
250 69.3457 254.393 61 260 61 cv
265.607 61 270 69.3457 270 80 cv
270 90.6543 265.607 99 260 99 cv
cp
f
276.278 77.752 mo
274.067 74.3652 267.374 72 260 72 cv
258.769 72 257.541 72.0645 256.353 72.1904 cv
256.142 70.2021 li
257.399 70.0684 258.698 70 260 70 cv
268.139 70 275.353 72.6758 277.952 76.6582 cv
276.278 77.752 li
cp
f
243.722 77.7529 mo
242.046 76.6611 li
243.687 74.1455 247.118 72.127 251.708 70.9785 cv
252.194 72.918 li
248.153 73.9297 245.065 75.6924 243.722 77.7529 cv
cp
f
260 90 mo
253.929 90 248.195 88.4932 244.662 85.9678 cv
245.824 84.3408 li
249.031 86.6318 254.331 88 260 88 cv
265.67 88 270.969 86.6318 274.176 84.3408 cv
275.338 85.9678 li
271.805 88.4932 266.071 90 260 90 cv
cp
f
246.769 69.3252 mo
245.212 68.0693 li
248.841 63.5762 254.231 61 260 61 cv
265.768 61 271.157 63.5762 274.786 68.0674 cv
273.231 69.3252 li
269.983 65.3057 265.161 63 260 63 cv
254.838 63 250.016 65.3057 246.769 69.3252 cv
cp
f
261 56 mo
259 56 li
259 52 li
261 52 li
261 56 li
cp
f
268.172 58.2422 mo
266.758 56.8281 li
269.846 53.7402 li
271.26 55.1543 li
268.172 58.2422 li
cp
f
251.846 58.2598 mo
248.781 55.1953 li
250.195 53.7813 li
253.26 56.8457 li
251.846 58.2598 li
cp
f
199 72 mo
197 72 li
197 70 li
199 70 li
199 72 li
cp
f
199 68 mo
197 68 li
197 65.1436 195.455 62.4824 192.968 61.0547 cv
193.964 59.3203 li
197.07 61.1035 199 64.4287 199 68 cv
cp
f
143 68 mo
141 68 li
141 62.4863 145.486 58 151 58 cv
151 60 li
146.589 60 143 63.5889 143 68 cv
cp
f
143 86 mo
141 86 li
141 84 li
143 84 li
143 86 li
cp
f
145.26 96.1855 mo
142.593 94.3096 141 91.249 141 88 cv
143 88 li
143 90.5986 144.274 93.0469 146.41 94.5488 cv
145.26 96.1855 li
cp
f
151 64 mo
148.794 64 147 65.7939 147 68 cv
147 88 li
147 90.2061 148.794 92 151 92 cv
189 92 li
191.206 92 193 90.2061 193 88 cv
193 68 li
193 65.7939 191.206 64 189 64 cv
151 64 li
cp
189 94 mo
151 94 li
147.691 94 145 91.3086 145 88 cv
145 68 li
145 64.6914 147.691 62 151 62 cv
189 62 li
192.309 62 195 64.6914 195 68 cv
195 88 li
195 91.3086 192.309 94 189 94 cv
cp
f
191 107 mo
186 107 li
186 105 li
191 105 li
191 100 li
188 100 li
186.897 100 186 99.1025 186 98 cv
186 93 li
188 93 li
188 98 li
191 98 li
192.103 98 193 98.8975 193 100 cv
193 105 li
193 106.103 192.103 107 191 107 cv
cp
f
181 107 mo
178 107 li
176.897 107 176 106.103 176 105 cv
176 102 li
171 102 li
169.897 102 169 101.103 169 100 cv
169 93 li
171 93 li
171 100 li
176 100 li
177.103 100 178 100.897 178 102 cv
178 105 li
181 105 li
181 107 li
cp
f
152 107 mo
147 107 li
147 105 li
152 105 li
152 102 li
152 100.897 152.897 100 154 100 cv
160 100 li
160 93 li
162 93 li
162 100 li
162 101.103 161.103 102 160 102 cv
154 102 li
154 105 li
154 106.103 153.103 107 152 107 cv
cp
f
162 63 mo
160 63 li
160 58 li
155 58 li
153.897 58 153 57.1025 153 56 cv
153 54 li
147 54 li
147 52 li
153 52 li
154.103 52 155 52.8975 155 54 cv
155 56 li
160 56 li
161.103 56 162 56.8975 162 58 cv
162 63 li
cp
f
172 63 mo
170 63 li
170 57.9961 li
170 56.8955 170.896 56 171.996 56 cv
175.004 56 li
175 52 li
177 52 li
177 56.0039 li
177 57.1045 176.104 58 175.004 58 cv
171.996 58 li
172 63 li
cp
f
188 63 mo
186 63 li
186 60 li
184 60 li
182.897 60 182 59.1025 182 58 cv
182 56 li
182 54.8975 182.897 54 184 54 cv
191 54 li
191 51 li
193 51 li
193 54 li
193 55.1025 192.103 56 191 56 cv
184 56 li
184 58 li
186 58 li
187.103 58 188 58.8975 188 60 cv
188 63 li
cp
f
160.755 93.6367 mo
159.214 92.3613 li
161.08 90.1074 161.693 87.957 161.893 86.875 cv
162.064 85.9414 162.418 85.0352 162.942 84.1797 cv
164.069 82.3447 165.49 80.041 165.867 79.4912 cv
165.948 79.3604 166 79.1846 166 79 cv
166 78.4482 165.552 78 165 78 cv
163.681 78 160.508 81.2324 158.325 84.2266 cv
156.708 83.0488 li
157.566 81.8721 161.996 76 165 76 cv
166.654 76 168 77.3457 168 79 cv
168 79.5576 167.841 80.1064 167.539 80.5869 cv
167.246 81.0176 166.199 82.6963 164.647 85.2266 cv
164.252 85.8701 163.986 86.5469 163.859 87.2383 cv
163.573 88.792 162.802 91.165 160.755 93.6367 cv
cp
f
153 93 mo
151 93 li
151 83 li
151 73.2705 158.127 66 164.5 66 cv
165.879 66 167 67.1211 167 68.5 cv
167 69.2998 166.683 70.0469 166.106 70.6025 cv
165.988 70.7168 165.841 70.8516 165.67 71.0088 cv
163.974 72.5684 160 76.2217 160 81.7588 cv
158 81.7588 li
158 75.3438 162.589 71.125 164.316 69.5361 cv
164.474 69.3916 164.609 69.2676 164.718 69.1631 cv
164.905 68.9824 165 68.7598 165 68.5 cv
165 68.2246 164.775 68 164.5 68 cv
159.812 68 153 73.8438 153 83 cv
153 93 li
cp
f
179.245 93.6367 mo
177.198 91.165 176.427 88.792 176.141 87.2383 cv
176.014 86.5469 175.748 85.8701 175.353 85.2266 cv
173.801 82.6963 172.754 81.0176 172.482 80.6201 cv
172.159 80.1045 172 79.5566 172 79 cv
172 77.3457 173.346 76 175 76 cv
178.004 76 182.434 81.8721 183.292 83.0488 cv
181.675 84.2266 li
179.492 81.2324 176.319 78 175 78 cv
174.448 78 174 78.4482 174 79 cv
174 79.1836 174.053 79.3604 174.155 79.5254 cv
174.51 80.041 175.931 82.3447 177.058 84.1797 cv
177.582 85.0352 177.936 85.9414 178.107 86.875 cv
178.307 87.957 178.92 90.1074 180.786 92.3613 cv
179.245 93.6367 li
cp
f
189 93 mo
187 93 li
187 83 li
187 73.8438 180.188 68 175.5 68 cv
175.225 68 175 68.2246 175 68.5 cv
175 68.7598 175.095 68.9824 175.282 69.1631 cv
175.391 69.2676 175.526 69.3916 175.684 69.5361 cv
177.411 71.125 182 75.3438 182 81.7588 cv
180 81.7588 li
180 76.2217 176.026 72.5684 174.33 71.0088 cv
174.159 70.8516 174.012 70.7168 173.894 70.6025 cv
173.317 70.0469 173 69.2998 173 68.5 cv
173 67.1211 174.121 66 175.5 66 cv
181.873 66 189 73.2705 189 83 cv
189 93 li
cp
f
75 88 mo
73 88 li
73 66 li
73 63.7939 74.7939 62 77 62 cv
79.2061 62 81 63.7939 81 66 cv
81 80 li
79 80 li
79 66 li
79 64.8975 78.1025 64 77 64 cv
75.8975 64 75 64.8975 75 66 cv
75 88 li
cp
f
75.0303 109.242 mo
73.6484 103.714 li
73.3398 102.482 72.6563 101.402 71.7236 100.674 cv
68.0859 97.833 66 93.5557 66 88.9375 cv
66 85.7031 li
66 82.4443 67.7578 79.415 70.5879 77.7979 cv
73.5039 76.1318 li
74.4961 77.8682 li
71.5801 79.5342 li
69.3721 80.7959 68 83.1602 68 85.7031 cv
68 88.9375 li
68 92.9355 69.8057 96.6387 72.9541 99.0977 cv
74.2373 100.1 75.1729 101.566 75.5879 103.229 cv
76.9697 108.758 li
75.0303 109.242 li
cp
f
62.3467 96.166 mo
62.1309 95.6123 61.9375 95.0391 61.7725 94.4629 cv
63.6943 93.9121 li
63.8428 94.4287 64.0166 94.9434 64.21 95.4414 cv
62.3467 96.166 li
cp
f
68.6465 104.614 mo
66.5801 103 64.8818 101.042 63.5986 98.7949 cv
65.335 97.8027 li
66.4893 99.8232 68.0176 101.585 69.877 103.038 cv
68.6465 104.614 li
cp
f
92 108 mo
90 108 li
90 105.749 li
90 104.435 90.3369 103.133 90.9756 101.984 cv
93.4004 97.6211 li
94.4473 95.7373 95 93.6025 95 91.4463 cv
95 87.0078 li
95 83.8281 93 80.9424 90.0244 79.8271 cv
79.6484 75.9365 li
80.3516 74.0635 li
90.7266 77.9541 li
94.4785 79.3613 97 82.999 97 87.0078 cv
97 91.4463 li
97 93.9414 96.3594 96.4121 95.1484 98.5918 cv
92.7236 102.956 li
92.25 103.808 92 104.773 92 105.749 cv
92 108 li
cp
f
99.3613 101.306 mo
97.6133 100.333 li
97.7715 100.049 li
97.9912 99.6533 98.1963 99.248 98.3848 98.8359 cv
100.203 99.6699 li
99.9932 100.127 99.7646 100.577 99.5205 101.02 cv
99.3613 101.306 li
cp
f
101.19 97.0322 mo
99.2725 96.4658 li
99.7549 94.8301 100 93.1416 100 91.4463 cv
100 87.0078 li
102 87.0078 li
102 91.4463 li
102 93.333 101.728 95.2129 101.19 97.0322 cv
cp
f
59 72 mo
57.8975 72 57 72.8975 57 74 cv
57 75.1025 57.8975 76 59 76 cv
60.1025 76 61 75.1025 61 74 cv
61 72.8975 60.1025 72 59 72 cv
cp
59 78 mo
56.7939 78 55 76.2061 55 74 cv
55 71.7939 56.7939 70 59 70 cv
61.2061 70 63 71.7939 63 74 cv
63 76.2061 61.2061 78 59 78 cv
cp
f
67 54 mo
65.8975 54 65 54.8975 65 56 cv
65 57.1025 65.8975 58 67 58 cv
68.1025 58 69 57.1025 69 56 cv
69 54.8975 68.1025 54 67 54 cv
cp
67 60 mo
64.7939 60 63 58.2061 63 56 cv
63 53.7939 64.7939 52 67 52 cv
69.2061 52 71 53.7939 71 56 cv
71 58.2061 69.2061 60 67 60 cv
cp
f
90 56 mo
88.8975 56 88 56.8975 88 58 cv
88 59.1025 88.8975 60 90 60 cv
91.1025 60 92 59.1025 92 58 cv
92 56.8975 91.1025 56 90 56 cv
cp
90 62 mo
87.7939 62 86 60.2061 86 58 cv
86 55.7939 87.7939 54 90 54 cv
92.2061 54 94 55.7939 94 58 cv
94 60.2061 92.2061 62 90 62 cv
cp
f
102 62 mo
100.897 62 100 62.8975 100 64 cv
100 65.1025 100.897 66 102 66 cv
103.103 66 104 65.1025 104 64 cv
104 62.8975 103.103 62 102 62 cv
cp
102 68 mo
99.7939 68 98 66.2061 98 64 cv
98 61.7939 99.7939 60 102 60 cv
104.206 60 106 61.7939 106 64 cv
106 66.2061 104.206 68 102 68 cv
cp
f
66 75 mo
62 75 li
62 73 li
66 73 li
66 71 li
66 69.8975 66.8975 69 68 69 cv
74 69 li
74 71 li
68 71 li
68 73 li
68 74.1025 67.1025 75 66 75 cv
cp
f
74 67 mo
68 67 li
66.8975 67 66 66.1025 66 65 cv
66 59 li
68 59 li
68 65 li
74 65 li
74 67 li
cp
f
78 63 mo
76 63 li
76 59 li
76 57.8975 76.8975 57 78 57 cv
87 57 li
87 59 li
78 59 li
78 63 li
cp
f
101 75 mo
91 75 li
89.8975 75 89 74.1025 89 73 cv
89 71 li
80 71 li
80 69 li
89 69 li
90.1025 69 91 69.8975 91 71 cv
91 73 li
101 73 li
101 67 li
103 67 li
103 73 li
103 74.1025 102.103 75 101 75 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (ASUS) ()
%%Title: (518 Digital reality 30x30@2x outlined-01.eps)
%%CreationDate: 2/21/2019 4:02 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D3#aYPpQ32JGqoE!!DZBF`k].7YGuj!3=3+nZ:P)XR><oZj-Z%@_4WPM#p+gYP6Z;4m1T>R9?>%b*%;V<d[<?Sm**.&p`NO
%h\/6Makc9$^AR?JQbU:^rVufnVO!WgI[9[aDX'pj0ob_n7mHgkIsL_AQX>6pThf%1pu[L$?bZK`S(B<"If8s<ld&qQq>085pO@Ge
%jit!#s5&4rr8tc/r;?0<s)E,Sq=>F&An.G1U4)n-lLU>QYMX`tr9_aX]9-2Zjl!oRg.'a%n2'>-dpIK2Ueb=2I;=%:kJlIF\c:30
%s1cn32"L$-WMa8koWaH?gCJY"Xl+ufCE<B9VuQD$T%!.SgOIgj[XY@VgO@b$d_?6@2uNS<rX)_Pnr$dtouYC\T"fRMp=8I^m65uJ
%PO.m>qrQ)OQiHXSS'U!WG&ND9m)QSbFb<WjD`>H1$C%_SC;8G>15BfI8c"B7LsOB[r]:U:pF#m/Dotf)FaiqOVmo4I!W.%=S,GDF
%JFq+j5kujIP*>q.oiGK_J+IScJ,@F/@=S%BMm#<orq<1u@W2(Ng$e6-m,.-\(gq8c#No9.[u(i[EbhkVD7dJ2Sj)=[r4u2_s8CKk
%s7lE7IsLkfZ^5U#Dk=UeqoPo=fD)+PHbQdGq7#7/rpn=kJ,/B3h>L+&e9h)Cld&mdDR4?lJ,&q%RHQIVr4a?DGL,1EroI?os4<lm
%K@fhgS$Bs$rq;g7IeimP0>ZPf0CnG4?@M]oYQ#P[[&,kR0\t$!>K0CC#JSl.rbNWqM%3Fp3BhFhS-5aGPBX[ch\a]>qTZ(u^\[Na
%_jI-Wbu_g?]Qs2'Yo$5K1H)^HfXLD-+8RmNc2Kdhpk.5+]RB\JbBU=W5J@*IBut5$^\S(Wp$BlJmU(Hpp[^8VhS$;nZXrq-lehSX
%O"^F%S`6-Br%Ue<oP\*kJ6-+;`#jL$\,+qUoJ`ClA&%r22m:!ll5*h,bNk3RqWX3IhgY1jjX1SRq>7r&X.,`1o%!=J05jO!Hu<<X
%c$oZ7GiFo'DdND6bM23`^A=mK5L!iEs7td$040/'nj^C,iG\*7^FO$q?"l`Wqu445-i9D#YL0ELh2Q$pT_-MCfU-#np@A#&\j#2t
%TD[He[kIaRHX0jRpp7.&S*+_ie`?/A00f?&=5E3M-KC!*]$`P9N2s=-A,iV'f.L:ph`YkZhWRZ5a_nY)+E%kl[Q+7Nfu\a>lJGt6
%8fr.b`opdCI.>bl4eA--H,/ZG+7od:nARW,rqt<u?QA[oY4KnnXa2Dp0)I`_f'MU"p1)-!h]2*a-;=Q^2#JQRkj0:GZXt5/l)[Wq
%)kQ*cS%#S-I/`]#5CEG'jVK$0.0%P`qXkekJ"PQpqOdecIGlF41Y\_cik56GDh*mjUL2O=^IY9cfT523hq>QlofhI!m[r76r;E,J
%?iB;k(H6PV^A7V4DuT1tld(%\^@TqgbCu!R:=!2DH%S=[4>3%^^9m9PkFE$.^0f_Lme-`!e_?F/^ARYj>$XANPNHnuS3<HW3uIOL
%4H4&5h9c1/+(^H.@<p1c8^G+5ZL3r)r:)MUoeF[\GS>\`:;X4)mfs0d(Z`f\PE:Bk:=>Wh]:PjcR#hlj2.X/AR*3Ag!]k+[?t/>_
%hrulqf=t$`;?-,)=],4gl8)qO:Yn;8iiDkJiAQqDMOS7N]eZGR/R&%4*qRL'4?#XiQ`pDaK1lDhXj#'NGj,#UJS/?hqod;mItd^I
%Bg:g45C`[oo/A%dm<^G$/a9r52Y=NOC-S]-mB!Uu"E>Y>hu;XX^Lo+FIsL^`RDh+WI.QXj9:6"Kb(qq#m7\pdV4Me/ld];W_]:-(
%jLBj9WS.,\>Q/8"qr:`V]Xdq1I)OpTH2cJIF!H-_o@(JSo#p3'Qq?mr-f$&[`qu_,SaSc>pnN?8pnRl\j,Z+r8R'm5#$5h]F1^2p
%[qFG_g628rWMGu/)JQ&rkq:eiVg6JJC?C[pDRnqmB7BFA8,q3:Ct[.d[a$ZmYn,.Ve3;4V]K1*i#?b]kq0@[43SWubd[@7^W:TY(
%QZe\e/3Vot05(1=J)Y8T%hHu-Sj(pogc[cFQk/5N5O8pJTg"]rr/_u.B+N=[5.c;fp[$#.q.r1Zch;#==aa>Bj_*i2p@R>.Z_pTk
%hZ#6Y[X.P/:[d/%=gm&cs1"J,^25"1Qi6PK]ebGp^E/.]!e,LjoO.W*h[a>`rdLFs.m%%(g6cn>k,cRu)4[!O@to>?N$lUfh,pKk
%b7shaA"_(Kl)Cr;SMA_M-3N"'A%?]1h0+MX43(:s`-K@LcLennl"jc(Ba\>CoArJT`1:c2]_?m35rObpAj>IbFj@M;pRLc/@IWk+
%N=d5uilN%4(kYdtPMOl&(u%/-p:3+?H=kCnn6g%Z=K<9s2.O%3/2rR]SeqRd)^F&;l\p$`mu=l\kC)f%^ZD!ST(0o-SFaYEG[^Bs
%>0>sHI`QA9#W.h%&GEA#g(>SNI;8qITjdu^arfp(&2?#-T=-`5Co>8C6_+f^ko0KDn#Xb-s8)UF_Yi7JQlkXZ]5]dso>Eh:GPCg9
%[rhA'+3aLlr1<:Slr3<#m'GSns,?hhT-s?K;#^:cU\gt``Z+WSYemUWZ[L!FC7iMlDP,5#GWPY'HE!<D@@tQS^$T[hs+a>0CesEd
%*A29.^u#CWSB^iHhM-G6s44mQDqfL5g\:[,O7ohSq`M-uGPf)PI;8e3[Qj9M6f33uF_n3IYMCh]D,B]6Rk=WGgTm`q/3U8aSARPH
%5!/1I<r8+q\eU[](;2Hg0QnL5LX",Kfc<jB@,MP?ou8WOj,ZYM`BGUK7iE^(]!6O1``^.%hXr8i_.?*V+5Boo%Vk%WT26N)2XERk
%Z)Jg@m;_NI1j_C)?;rZ\p0b)mWP-J:Ha2$@UY@;;p@=+r68J*)@*J054_gn&4KrG_DR37doR:"SJb5C/hqtaA^ACa0X4qM]`A[,8
%B&rTKf<?8#[ocAf$[q5pn%JS;qj62bX9'ikdj*'#Yj7sf_Y/#^0'jl_9\%Xj>B]hfQJ&T\_U4,!;Tur4c*/4"Q7'+cT:2k;C-l*u
%<a0$[m<'975,ib7XJ%Ek9V5p$Ioq96YIZ+KmZEKQ[e&di)taMq:KAR0i*uSSm7:`uPI5^_1=HWcZ<Y:n`D`A#'S$(,n[E>rZ#\BR
%(;Io(mdZ>&q/hBG#<:&@7k"#444N*>IEL9_?f%F$rq-cU\kCg'ro-[mTD&nH\kDu"iJi@A"odR+l-Ukc5%T-l5!P^EH$0fZJ#9G)
%ol=[`C779PGPb[XX*;Nb+Pj_HkF_58I';_F4l>`(N_fCCU[#@-$;/))o=^dbrd=aD-dXYSmPAH3mPJNUpZaR3k\_L"YKuaZ+6fBK
%9ZK:h\AqmqN*l&NnX\FJ^E_=e[8-_"kn9`$QnF)\PfDK?ruJL6n8>5u%_HGI>FIWbHeTmRG2:*bq^eNbjD<^TUmLgJo^^Y-MT*<J
%E*IqhmNdV;HNiq<(W:$E@ak0+Na3dVpj).Z:SttWB^kXJFZr@7V"OcS@f?'NSS6aj($;1<Q]XL2>\*&r8mr*mY^8>1WpFOm_#lYM
%U-E;d5?e!Y3]D+dSf+`hS,N3%bd1_ie,H.+WDACChdgWW_gH'spR]sj>`2F:$d7kh>%75AR6BM,dpg48_h-XpU8omr+=sbhlskrM
%$h/_*:s0CX&PMY3/]YDfUh1r:18(:h&q,]IgFu;7\/*WIWP@&3peITk2U0aN@pc[jn-(UZA%fotqS3-hGD3^pCs`3`:g!VD_(\s9
%-CWP44g3EaZ!PZeI;CrQ]q/9kC!FM70d5g4p/nNE\72jXA(C!_eJcob4aBM`A2=T=Ro<5LPaFhda2]9i-NJYSM>7AMoFmgaA%\6(
%O@H*#;/nmJ(j;j')q-p1-hK[l_0!]>E26nG-!2PWeJ*<_n7!M"]"'9b"#&i_<XdUqb5fi^Anq_H9Yk5nqV#eWiUl^JrkNlnIpt(f
%f_h-tl5Mt0enD=r>&D74_qE`Q=7_GiVE:1n(UL\o3TsR/TelM':*^fM30(o-dJ_O,[bA$h_Z"A!Q[n5XO$=9*FS!c\eqmaAe/]Mr
%SdDapOd$[F"Rh.nS:>@W?[4'\Idk``RGj'jZ9,screD/7\"$iqDfF7K"b)fAK!W6s:FX4':)nH>Z/Dq.4Efkmls(kY)pVsQYkrW(
%N8.uLf#V'dIe.(;3d@]e\%l/)XmWhj^03W&Nj:I(T*Dh4]O[O#*Wl@lHffM\9E3,LFDuj%6oZD-q*?t#d.h7E+*'c4,\2b-M=H2f
%7!3t2rrbP+(',`*GN+H8=*us@0[;AD^`NmukDjc^6Q?_$Elau(ifb[H55pAN6>ef'N-OJjR3\aWc?[8d%/<=7=/s8O:EP"V>sEf^
%[gP+A[l[S;GD\-^$@n>QEQXU%/1Cb:1sWHaOuk>p#n@]2^/&@36NZ@T*d*tEfsb_,6cWIiS3d;i(ha>u0aK-Zo8m0$:H`-"9`_Y2
%HioB0T0+ELAE/K:HuN`erkWIoms2Bdqo%?caT9j2aWs,bQ7'-/T@oGoK/D$sPO&-tX1Vl#1ZWfLg&\dY,E)oanFV::AQu9KX`[fd
%/%3[CZJs#M>CRe4f?X9,XPEP2\_kZWAV>):FL!SU\M5T0PS$L*,OHNiNGOP@1'["58&ZMaGMMRK<X)'X)>"3&5%P!7_:4&*WkEb4
%>7l7jHULDj_:^mSCBjsO#iui^T4H6`K5o@=j/G-#X_H4d)lGRR\72`TA[DufLJLWBhAKD?@eXOu\f7hRPH!4pG@S/GWC^BKJ.Q>W
%Qi,6nUNnfi_n;&4XbTD,RR_Xq+*lj9T(nEqIcQ=rie`TbrhoWJj?C?!KE'4a^EorU!J.fMi1BtoFLdi1>1(*3r`u_^mlIInm$6<9
%7DJ1(T)3^N?oM'2@5F>)qGV(I<5(-d^TA@Mmf-?XT[Pb;m[u#kcB"Mn=TX$>Qg:Mn]F5uCh;*IF4."#TH%"6c@l'MG0V2<egl8=Q
%!F\kH"r3)Er./i@e,C?F4#/BAiF0HiXSDQ8%hZT^=("9?q?'I`im-7[`YH_d#QZc+b9kL#B/H^75c%TmK=W^%7^%E9rR%Ni\p\m5
%_!thoG^V^*`E;g97H4pTkBt9\]%<,p/Rpicl,0;<(XkF(CRNdl@!h=^k#uA?(u$mWof<"^s-/]Z*bMo%`h(u[8`k9G/8%F&mWsQp
%,?X_YTJ469:KEk0K7qI58+[ip_UO5fNQeJM@f;0.q%:fbVs9(ora[-?RJM>C,q=!3Kcq9-\L,It=J/i`S+PYhkJJ!oVpIXniI%T8
%0t26RS-Up+4LPLA$b:YVpuh);\bFG!oZTN1nSoq:Da1+Q)GU'eg<<TZo[orLK*Hu-K'n6QlI9"7ZV4jl26gQ#b4HCT<.]j.bONkV
%61K65pp;$+c?fD&V[o*d&l#9WhBfH$Xe0e5]^o?%na/T_GGlj?nXC9,3MM,W\4o?lgPPtPn\9nYQ2>L3lhi?,a/R;CF89n)dQ`]b
%O)%_W3HjIB4K3_k6KE-Sj74pAFrH]9AYcAGH"<544YT4me144Qg(IDO`"I@8,r0moQnmY&_=DinV1F?J\0Nu=^[@.6ci[k76[JBu
%cL]AU%RMI4%?*f)83U>WHN2h4O8+X2\??L2Lq8h7V>fD0<[CtBY1.El[-<G!Z.;pVTL]ir,>2QV4E<i6SfKjI6d,nVPrjW68+_a[
%eaB]KLn*9oEI26h**59IpPR\ZPs^[\7('-f]uNu7E43N0`I(<EJ=Z6#Wd?!ehR.q+f'Fe@>MD"+k(Xc.%0\<G]W;uCH.FZ^k;:&s
%-YrL(SA`l\AK-gZHR%X0FR_2/W\?l-lI]4P7mVkc_W(!'U9WV0dN.N#fCqLtmV9)[`rpNB4-&@aBNspf;<"h?7&F.2,i%l>e0XX4
%XkfFiEk8_%m$-p6h!VS>Xj,(]R@mjA_RD_l(boru=^G0"j#`4rc5oMkC/qIoZG%])>MjpBKQ;;VHdP.WT&bn/\V&5m7W;elo2HY*
%(>=19s,tW[8NYHHA*`agF0"o[WmDWN3RrBRW6mOYpr:@gcTh=`:E[CK1Br?TC]>:@3HosAg\DQf:-im?dGO8F*rKO%prBc3O(mVr
%e&FVLNIOV@s-P_D0l?hugA&^1d#TWm+*lj9T(nEqIS:^\:hetY#`V+%4!CR05!t`M5SNQX(,pL/fb;NsdVim8D)UeT7.YRTF2(;K
%h9Kl<2`],eA%&+%H(offnNZO32u4/sJH,BLIK-MEoD^Z4J(WFlIWb6Xs'r\:lsl(P/ImS0`JJNI@%[AWleVL06=)VEbO[aN:VE>$
%TFmgqooh=QT>#UP4MKusrc%IM[H@M^h<W[b",>4$m8K^=I!YPb`P:*e&p`uqh\%7$J&dBF"92S$rh$sQ=e=o`J*lY&\(qIrN]ro%
%gR&Gt6*p#(a:lgb<ADFAI*Q/sh/:#Al1K5Riq#/2eXV>_DZAFr])fa6D$C$!P6=&u$+\j(i4(gce*%7j4?>_P2a@8N-,s?HD2)5c
%#cAlrFO+BBZ<PWQAu&Y#=?ClcDbJgN4O_Ti(V<qemCDUC"#u6LpuRHLe"0.%A*780pMGSRlnB&g!pk7_q`GDD82WU]l0O5n)PNEK
%_C.=-,hO#?:Y3r;J[<sCLUDSHX#;alCj3RZgL8+rc-/)f_k4'u\$h5/Lm'XAls]4iRJf%5nZD7,)i^]bXU2I][PPI_.,]ZQ:/Mqe
%MG`YVpJ$N:l=4MFR>oAR!MOEsF2W(#G#=^RD*g8&jkBeR1oK.b%bg^uF4dPIq(>CMijUhbe]7%,k/:Ss8L0dX*H/IZYd>.W6j(83
%FTJH%[bl7L@UeD9/-SklD;:R^!41201qO2kLt(0!JMHk\G#DML2uFlp7?7I)?eCrtOqJtkUH/SA8892-L=Ud/4L\L=TQr1K,,O$'
%;/T]_,$=q=[WUt)o53C4JRdc*rI&/kq7Yf[D7OU@0[QW)&+"In/aMQaAdi-BFDLkYjcl-!)Pg%j^m8k.9u0!$,4+1YL2ABoWCO;P
%n!J&uZ+/Oso3JiAH0";B76qu>MjW@+Fro9oT5Q@-JT\20;>,.E7cnJ1\a_@p2N'370JB)dV*IX'p4Ekq[i',lI.b(&4_IQEgsNS?
%GbQ&e$Pi$CgN1;Cg;n$pb]p10A^,O:9"'@+_"65SO:o(LQCPLT\g"(Xk=49>mlW.FA"dVc$#rH:\BkLnL#g]BF-8iV2IejrZ)'B&
%Pm5!A`r>g@j8#Ro\meTV<3p[_7]3q%jD=1#briejflIRk!WF9LU<SO,$!2`j1\9Y8@%l8c/9<U6g*I1$o6c^9c8qn7&eHsked)F2
%>fN7F*,M1!4d?l91hiW:>i9t<e+,WZI1e6Y\D.]93Rq=V\3O)]X^Eo>$!Y$bC@;XAdUq0SaM;X[+S`jB0EghE(jBbTUNi#oAqq/E
%)tJ:J6cUIM\/M;(MkG+@JPbij9LIGq<>$E&nU4bc@`4MO,dmEOD/8`"Cmak#gPll]Lj)*YdNNc"U%!s6B(*rC9^\#!p(G!j^`ZI2
%qr8u.YFE&))6@:@0PtrSkc>6"A@cM7-8K;N`P&F0#T0Ke)N##W8i$N+.IRNi!oZ7X1V3q2N=XL6Q>o_=SHP2-n@Wm,>W+TB.NWl"
%KK!HM&H$B@]2e?sh-7jB44)h^a<b&K)0aqS`h4B3+.rh_o[u<ZP5Tu62>cM]c9SdYR?$E_j#aFS_?QuUP+AJ6&`?e3o"K>.EDQmn
%a0*C9@9<rd'?7IMQo!nml;DQS^Uq#p-7Lkk$cZOca](H/L4G%i1`7KoK(j'c44mH*M@?i_osP>JCmW=ih517cM)j2=h3l=5"E^!0
%`*=6_MH":I/tJl%0`P7[DAa;!khQ<%!oL=e145(0,SE$!<#bon[LA$RS0oH/8:XUTfc*2C5tG+WB#*'#*LGO-3c4`5N1n,;&+cBs
%#l:FQT(n"&`btLA5FbHLfYj_5Xl`++Gd0\i.YO(B-#:NY%b:Jd)2!0i%QQ4f'X_1iH1?n(a^P2nj7MTA&i'pW><$Y@AK'*be-*0Z
%l2Q^=@UJXY^I+W$<1Wih38hK$8pN_>Q66XmU&om=/4j1F3"pUJKD)Tp75YSrK*S]3F-\-1k,/J<_@_mlNPfRQ3ISG0)Q.1J,$K&G
%4b!g(`^L#913GB\/K..tRKtroht0:U"/VCPI1li(29_6n1A^Y!3.C%hZrA\0B^!,L-Bo)L(1Y?i%p;Gk*V:*.(9s1M`1mMdG_@F4
%MajSK7cRdppRsOUN7sD7];`#&1FuE#21#%U4fp;Bg.'V_Ia!YRfeV??N]67S?mln$a718d/lPuXRnYBPR3Xo7c-;O`W2Mp-Tpgcl
%!i7Bei@U<E?0RD_[q2!G,%Y9UZk91W\f:OuKhdpJ_#fBHG6f3A9UJFSp)o`\#Juj1WB4qX6(L(2jcG"M]=2qHO-?CC6"i*L1FcgT
%`-,8L>s)^S8Rf^]Wu-m:Mg!/u/oXpHG2GB+jZX*$c?=:/a]pW+WlF(<81EULA?8AKC.lW1^_g^q&!KYIU.EKbo4/t?$HdKblFUSW
%+ku&M'c@].G!)=D2gM-m)HMG%&s_`/Ve6In:g4%pe4R=b!OC@Z_??VMj.LCNYTHNSDOO4LMSeMY\foMG58iqtNVth2=HTp@0k[T7
%AsEj[Gd:b,QXbZ7BM5!Uj,+uCC::jU"kR0p85uNBMPVHuS%R1p[Nm$teX5F;?4g6Ij9.;hD6=roFGDTSh0rL]%&c=Y.'3EJ6(la4
%!a.<Fp=gi2Tu+lTj!GP-;>#f45Z%c!#?i)pl;IgfiBGQS1jeu0h39\`Q]_I!2T*kJo0?>D:2)K.jP3J>A'Tpd`r#2Np?j`+Fef9C
%o_9ReNQTFqap"5h1`-K#3[u@"clZtK&Fmp1lj9$/;43*-_#u`YBcIc*RS=Hq'R*qq32_#A4'Y<dEEYI0_73u^)L,,74-Fc5/lXgB
%OJ?B.ZVB>JU#!@b#JnZiAJ=TaK90r$QB5QA7<F0BHq?AEKnDA*_3lWu47p;&3\sB9m+"i,)t#$#D%OH<\I1QnatP8h.F+>KNgrtk
%mZp41Ig#tB$Y8eT.5*Z/CL$+m@CQdEDVC7,"h$)kn3LJ!*^VD()8]tqP`;lhb__c_#InusTFk3KU,"&;S].nXZiYkc*1!pNBQf:T
%.uZ1e#'8AWYjSe'%n(I]i]pnu#m?^#n.k)_bMf_X\.'&fe;UjA_JU?)KJKT;H[LgLl\+ToqClF5?5b+Sm^%!P,0cl:)*oaa:LhD^
%'>Rh=#LLAc9*ucoCfJ>2.Vqf-/bUi9bbZ.U#p-[2.#7FOh3gFG"YQlY3G.EtHKIqC[V0Cbnn-9RZ1#A8H8,g4FbUX@c!qSB1E'WY
%0jGNYQ6Tc=V?_$N7PdA!b=ouGZ6RnsHa,#e)2c!L[*WIkCkksrC5,68n-8M!AhNn[iuI#qm:"1qBc**DA^n<?c;$-m;g0Al!a\<^
%F1-fp4^r]Rnu>:ZCBS?_W5fp[hIUO!37r9X\]?-k`pONV#qgm8ofFbO/0AnH=05*,Qehr,B^kL@U2i(Q1ZCjhqf7bUM]E&=V(cb.
%Me)imhb@ia5l)TN,2>dHV#r'!G:6dECj7&!GrG?:aAOKs].ZR[(HPrUUn-J@ggGengFJM+VDNj[j^bp:"fe'nR,r;eF7g(Q`5&$[
%g,tCWa!lTGndbUa3Ipo,`Jb%!=:,ECC*,jsipf=[E%iq4F(hDY%h0g8:m7tl_J:jHBiDFW;9WEZ`/pW/WUd?so\Ma`:[OfF/[uW.
%FFU+gYR5.t6SE6mBagHG^:5nf9,E;8JJG*'0GX[8Vs4spFJLJ4a!d_oFYu`G,4MCIM;_=J"f/q0P1&,](T$!j*=8^+j(.lRIM:"<
%:JtRt@0)D!mPg\Q'@R5qM!X54iBTkB5_ec\@;.?^Z.o\q:a#8<Z</oPC84bKD(ojj]5%S6o1,$&_jm).5at+=jrp0]_l>AZXPmF"
%Um_(C%\hkJk$_JU+](I%`"ijbPE6L6<_;lYf19)$+?):24;V;aJdHu`_DMo-+iP9[DR[4#?a::`a8pEB>S()b==-jfR-aq7H:?Sq
%Y+TSJK1)(8;8q&'4:&(:1/#6B/h\F,-5d-\^@SQu'8PP_ej\Q2,!Lf?\45&SM9M&"%g3G]@RMp9RQGZ);7J5Z>Y;3QUkNN:`7o/,
%aq^;-.jHSPT"r6Vh3Wj:DIUg:'\3-f&g6g0a@e>"!5K"Z.mJP$C3;#M&J,X,8#26(H7">/WVU8"a%//AND,O\\tMPuO,,G<]K2#J
%\b$cF1'dq:1P,jDI'N._Sa]^:_Ucg_2hc<D5g032Vp-@%$@JOPTFkI!S;mVURfg[\Np*#Om%e5]$54`SKFaLKq_7H.KAhM#&XT".
%!HOACPg_T"K?OlGO:OfOaFm5'(s[;oK!DZ(XN7X/X-,SI4BTsP;#,QJ39]UIQE%j?0]iMPVT1e2+5&>$RoI2IEq@ic4$mAK->F`8
%BP]\)GM5SQ8Ce%UH?P;&&a)D7%B^sP"Dc3eAZpdj7bpX,Vfak#ijaqd%j$hf1-HujfgKK%DL@b+f3m:Kadej@H1Rop3&V(gb_oc7
%qs*e'hrNK/'`n^!;,PC&8=b;cW\$dRYVarc\XGrc@@iJ<'-0(hn/.0>?PA)knCrW@0G=h>;S)[cTt%Yl;&9LSWgd/Pchk=17`=C"
%+GF<m.H\3.W23'm2-k!o83k$L5_V(f_p67b:4?c#&&6HP1l;JCW,8_#N"Jc/X@j^Mf$,8[9,f*l";/F/27O3`'q),L-ckf'+OOe`
%<NKVbL/bk?!M9o+MD6>0Ce@#]IV()T*M_h'c)Lml:BTq!#W1Rd22%kO$g$F<CL^K,RgcV'2ou%@1C&UL%s&-:ZlZJ-F51S`N3+K"
%*Wg\-$Mfj>>>!/ML0:UWr3BZ>iTs%=cl1=eX@O1%OtfO^"3B+n!VKq>Q6VR&e06mLn/ND_&L]_.P"]p;c^-c'^Ca:&o79_;6W(5L
%P&NBTcmf,5ffRi8ap&X55HX/'&?\\HQrj@RVgLKoeo]"s7kb#=L;f#ER$?:$pa.GPlt)?!%9:-qaG^5mA5$Ju`c6`P<<bZR3Ne5N
%#]GbV*>X!EK>JnF=<bVCF!tG\Q='6Jp?)>a#1fBXqoH-']8&:Qrf8A/O]tmDaHd><).9blA8nP@+6VI.0Nt,*'HtP7cjIrg=_1&s
%R4-Ce7;0o_q?!KH?AO19:mmLl-2DC3D>&u/E:ORgVSu5)g%\\k!Xo18M=L8IF_)3o!bT[d4*torllG&FIED(+.h9BXM>a5MK"TIu
%j/B2*kINNgK8BYEE]!q)"J/p0lK1+4rT*!H*1[MVH_?@[(F2Au.Pm#$5\+/.cgNAclN,l-![fK*Cm%im#+'?AA2B1'%]XOheuL-.
%hrrK3cc3b-6P=c876red"B=q5&lHY*%+'RGOHb<L,e*3^+DQkDH'$AY%*/0@biqE.i2fH56:WfJ$k@@b17eoV<YYjP"Dbf:1>1UC
%h&%Us@,dgcM8Z@_h"Kbi*5XQN5t`[19%0'4q&HbR:cgp[%t`,9Ok"IlQ5(UPQc%%u,#j5]k:uWR6KpkMfQ1k]D\)(=jQ#LVf6QFZ
%5t#u,B[)b7qegJ3Ug<.o5cpF=YO`aS!>T=pl!Yg,"sk]p<T#A=N"&07K%Qiu,QLg+p]`WpBaUN=^o&CoJp;en72/0U`RM7r<Q!'+
%_5%iU-VST(gn#B*W9&TanlO*(f`p`7f45$(UJ1eEPb5NO-O@oP!gU=Rm/B\N9'T8X-/I]Ociq=qo`gLNgaY*G]-8th;\*N)@G\7<
%;Zln(X8>'tZ@X[P(>EuB9lVPj;:JW;"dm`sXK2a;&eg,OZlFh5PnET4LYEOB!b%[T;6_@QcHl_e&PrpeURJn@0SIoH&r&JaO,4.4
%JlG:%%np\;Y)-)83Q<Re/+\PU*p>@kU_mZ`0+0*<r>+0!m^APn5?;la2eD?1oP3'El)'GNLNuVC<3chc^19+#:hOBoaQip/VJ@Jf
%f(4_:'q\jZ1PeRU_E#Wr0Zg[BnmI@WSP>,a]@BeQNL<l"b[W-I*!@&]<Nb=Bba^1EE!%CHaKWHVJkK)l_s/Cg(rIdX!VtRDK2&'a
%;q!N?eA3X_5#L<p3A,>!V\f(B6pI?*@1u!O'RC-[`Z^T&3[Ypf+lCsHB1N8290kgLV_=YoLstZ.ks*PupR%*-$L'&WU97f\jgJUT
%it]C%m,g^q0[Em'Pn"s>$);Tf2,&QMjG'k>XC)#A=^EAW<*=B:RmJp3U+OTX'_Ru%H@UZ8*G(a'f!qde2.A:t9pfpNBNiM!,@c:g
%9j9p+]X?ea7V<33M/=f.Wh]@S;"u;_Yc--mh3t--3iLDd+NRQ(B8ZplE%Q&t?3Vp3RW.2jpkOW=diM_>XK0KM+Go/>?D`e<A>b_f
%Oul0sbNq<ra?,^6rA'90oAB0>QO6u-J_%3SM3`$Cmm;'K;oh(EG]tXNjc1aU$>)a0@2gE,#Qs(E7:k1opOXlL#SR_Ip_eWIR(#@`
%hBM&CauBukj(mc@[8cp%_&ek61I<uR\;I@&3`jL/`=D,hn*U'/**P#3=JJd1<Q#j7T,1;TeeOgY$Co[?Gd8gq@mgN<G]o;aJA?P"
%V"@4qV[+M_fPl#bO!S>+TSX3]L2Dt3((A/;<<@CeCP'PD$k(i)=]33Xe0Nr^7C_LI+Y:r=kS8P:O<<R)$B8q4C"@XlF:;[0;YGnW
%#kW%#J-f!Q,RL38n?ZIi1dZ=&aj5hE*C?0j-s2/S6s%TuA6OZpLpu'`N/PR'7#`T)b$Dj]XXQ5bdZl'<MP;n1d`!ea\8;cjL^%XG
%CiVgD@T-(-Ue\g50l4!27_W+Un,Po_2s%-%@B>:Vda$on>Ke4d%^*f_\1*s9G<&fcN#C_%^uL#m,lr`]nnT/MmLWs-NQbi!-]FGG
%jBL^-Sfsh0]]Z9g.<RT>]Rql$aYOX:,$CI\<Dp]6Rk.hpVaql-UGFl=du2:!8gjAU"OUb;E+"fi>nkalj''Q-0-Kj7FLps'`@V@l
%ndTT=f<DB"B$hrXm3p2K->?(m+*>:dCoj,"r4ZOui7F25lCl\(0$-b\]8$m$2RdiZ(W:7&?t'%YO%WrQ;rr/2$mGYk18@+RA=uP2
%PFo`DEcJ&\!lO[VXF+.=Zm1\gAe9>48ncA`A0#e">_^p/@BaI^l.Jnp"V$$Hd7eJJF9.QmaSR2$a"08dll[Zt3Da.JT[8]J%j^NR
%mUB=3eMsXX)uuIH%:aYbW&/];N5)O,:T!2<JD&2YcXk2+Xt$MR<8,>q2cr'G+#'bs-dq<,\D[>UL=/>+E9L"a@:4_Bc<ck@T-$Mg
%VlI&(aPi`'^`%kTJnf=&/H\!=_H8A/MT.bDAO%iP1(iWVVf@r*4S)FX\P!'m_qB#'ne4hi&eUbmV4*msZ28JfGeI/6^-Zfg_N;i3
%1=`oo3Tql/DTa[;[Bg?H&X;*o(+Phg9u34[H,_l1NSB-Ug_Bn+G<-#1g_5@D]'Numd!TK62Ln\eS*`RD*<US/H4][($`Hc'45AEZ
%9ZHKd9Sd?$>Yq;UKJJID&I,A;06&/d,\%s&R(qCEXq)ZYjoL#FE"H'3GscSM/PcoqX4f\AO7P&5:Mlc*_$"%QQ8qPOW%gRLM$6;O
%_Ps+X)JOMF(R[?Zdu%=oU3m(W..A;j#,@IbK=,tsQGZ*)qa?g"PF&ifT!LAPi"\LA^PHt7^#Ij`7plgCW13lS-=^J-%,Y.b+c,bC
%6)B;k!ooGO*5pT'W&jGUC92LDC<=<B.j?)t,[sd!O.kN\;eXeCmebuWRF+\V:U3ETDpUA`m9Fj#q[TS9:jMn(e^chqn;`o]K^@RI
%D>)GNTt35:X8f5i^]*<]Ro`trroU,&G>DPXpu[Ll^4,r!#=!)^o=A4r'.h$lhH059OB&(VZ>?Wqc]f-p^hd=J`VAf"/RfES,oe$p
%cB,@/2-<=@b2uto9X#Nt8/;m^e&LT8YKA+?4NltD7(Rk6EKam61!FXm,jQ\s[EIt.1t\tNYPT.`QP4dGoMFIj0jeilQf/ZK44P^7
%lB&Xu[cBkRR)2SkRL2&?85<$%pnNt@e1/NjoHApZ4?`O+P1ii"TtFRsT),pNp^[$oUBV$%Q2p`)<6R_D/;olV#[&GL(We1UOH=8W
%/fCQPe'<!)6)Dad]*]'7@'CW(jKFkl3Z&+NI#VVkIWjiM87:>F4Wir>8a-(I?0k>lB@%uEG`FA^U<u@tO5Moa(F$IfAOh0jjuo+\
%iFVc,k*@o)+P&^_2usr1<]Gj-->jl(n[NcQTVe'Qqkcai%To0\4te`^o31jj,U7UZG]h)fUbiuIh>MAF0m/;Y0^5(5\jHZOT#%\U
%b8Lc69s3t(7qZU^8qV!nA)g6hAe])Jip>D[VI$o;HJ_t0(=1"Z0YU0A575RTC!nYANNsO]O"I]>a)3^E&>\?3T^I#*j$%;N$#f7D
%6j['f*?ttp=PoJl"<Cp)q83Z\?`BTojIej!;\B%7I4YW=F"L\NrcK%l0(bnV'?VW=BE>$(Kjbi\RIB$L$j?3b9^K,8O>WlgD+,%1
%G1NdNCYgj.@WB8\j!*f\(PfU37qZouiYk;h&b0i*7hFSYO"O/HEGW,<jZKX2,qZopUiLLFno=Ng'n"O;376S#2q)"UkJt_]Ha^U9
%8&m_US,l$.14l.^IXo+.Q?uqr?`pF&)$DgJ<='TW@$&9b3!t29ViB[)Y[!$?9bR42H"Mr)Wpk\&CQrrgU!0!?I)Cc"_tn#saM45;
%8?:SP3RIqaGSL"h4io\/X<^kapX)H_68"^Dl`eg%GO&QMHk<0fFs#nsdDVZF3=.c1M[-HrJhN8bR!#6;;<j--O5sk]]=P7c?nSaQ
%%F,/g%NWD4M3%]g1@MTMOoL'W@g#9gR)FVO7E9D>`mG=7fm!p,"5ZT"U-L^F?J?X:Yhieo,Jb<L9L7Yi@KE]9n,atIkP+MTBk?6O
%Gde,U"`#.7XB[ki>>6R@2'3CFG\j2=q%O]C#Ag<&3R%2rbY&sNk*_g*ZLpnei]Hg0Pq>K-b6"\KN:glV4O?t5r^1.V#njQF<2,,1
%H?O/@So.&Ob)<3ko3(hj4,ue1bu-j5%2+[.)1cao'/%$H1O4':$:iL3dc0K=_<_qU]L?"O*(CQM;f$:P=e$@X-V9DlU9KppM=Tcl
%nVh:tKd!<s`$&_9L!No7=bi5?Xe.Aig[GIbHm+eCH_2+4qXFD^poCp#6oC3qO0C%0GiuKkA+;`t<_T[mFHFIG8]_k`R-7'^o&E8A
%,9\UEN\V9/;6nmaN/'>GBei^"-D@;t7:>B8bf0uZL(@rm:pF%.&*1fq4GOp<&`23G<3<1o&[CA+T`C-BJgb3c'`_1i\eC+nR]?8`
%Yg'3s&rR"\R0#lfN`0;_PBZKN"UcZRq8J6[=Qhu^1VgF"G#&QAN4Sa];Ul1L@MVD*:7>$-\'+8cPW3miI6!24JB#/0]Yj(Z*Yto_
%5A-=.+<;$PVi9R-7/gds4UZj]i:+URJd;ImRkQ&/0ojYdA":/2EI&4a.6>[B?B._g&j\)GABJmQO.u9!abHmaS=U4%oD!0(&g*MP
%6rF7*!"2T94KWjS8Jbn"i5@3aN#o7#&n.HMeZKrdAuc<QWmstp+r-F)&>8cL=g5""42*M0#0esLQU>;r;1/_p"1I<2QU=1X=M]??
%#Wsgn"&tJg[_E1L+F4:?g/H'!WWi&m6UBYp>nX(T_+JSZ6CBt=$j^GL4k;:t=TZ1/YtHmR'Q/OHNQ]nK'hmPBUN`nfi<MCWjLq7u
%T/b;2Xptjq1t0;HIK@O:CeP=O^I#s7D-+tsocVk@[+j"%LM.ZZ8jD'l*^uY',!,K*4d<U^>_.-D/X?du8WiFPjGp@2?Ci29qP^o,
%7HB;"qZs/iBFR[nXE&FsNs+5aEX"[t`ej`MOj9h"O?u,c2MR+U>s*Uif(`9mi-AkPMj!gLiCTia'XIC&AJOCkm%sd<1d!pY(_p!,
%"N-Do3Kc<Z'afT9>Wq?u$J6THD.H'9b(TA_'`q@!HK;.C.M<Xe3aStM'@GK0-H0J?<Q6m?rL3Yg4K#Yt2K)T8=a_AF:EdC02.s:-
%(jTaVMCEao1*rPtAu>?s@mFUj2(J\7ZT)5B.PA_6<ZpCX324?pAG&s*-MS3^hsU7VV9!ZJGF'!P0"\d;UK+kgp=(5-"=[&64^E1d
%V?@)4_Qe(1Mo)/U;1T-/6]U*9)Q1;;BE%<W@r\u<7j+LVHI"ePBcIh%RGO%=Haa=f/@7Z$1SW.5dpbfY*VNI#?A-qc"=]p^A>;9<
%LrhU,I/1tW6mfl<&fM6]?Lt=Le3,#)fXu4S=8=KKY76QRe6Op^D5aNT"=,mpGJUFjnjZ,k+74`!BZeHe/(A-OF:B>BeZI94%%>F3
%XSmrqaQ`a@BYq`'pK*^3DctV4_kWm5(qkV_/KX:rr>auj;?nf`DMjU[GSpPgm-FcSaW1pn?k(VcUL]r3\%t@db>FY7Y-Q(aTdAr=
%etHV*g-ikeK7GMSP/K^&LSiEPfPKE38,\^92`d0<OS$,CiZY6XNlj6u#YBP]5bF)%:CEq>pjTeZ(Q(P9^a%mRW_udN&TujhkFq`M
%[r@5ar$WpX#7E(P.IRnO]fV.o;=(Za1,SP50h4^"4nMPRjSJ521(_Oa8LD\#a$9_F'<='Hn8;X^=++^a5k,UT2fOrT&RL<qdH5"4
%g$tH8]#u9$\'-ctcEIgnW*PVHS'=@O97/Z6kb$B9$=-VOiYa-U(i)aHF\(`]00FH(.[IU@25V31=_BcVRo_[_%u@<b)p7s@G%n_=
%hN.LOp8V1c9X)7cDnFXArQ@SX_5%N$-Z6B0>\3Usd6N0de$FtMduLE;[d)(3+.u9uCf)@/3cp_CFKd)XHVG7KOMI*bQJib%ap,4a
%m>f'eAAjrO:g/oSp:l,Z!$RooL*N#N@!XoW?<G:P)[Z;Gh?"a7o,?=0-jNfSS"9a+6C**G`!G[TYMT#^H`JMK[e^::N%5058&o!c
%)/!kR?q.>jg`r>[?6U$>%,M(A"DJ1\g1]Ii?\t9^)A#qd%$R6o!9a.(85EhgdleVK&;WdNAIpuqLB>+lO2GT(Bi-Z<;M,BITX1C^
%]JZsKIh3BV$3s(PW=f"p:)oQ!=E5W8Yd?kslONC%ADWHB5!Ou/8/e"2'j)T2#M5faYF27(N-7uO-O(c-?Ndi4"tcHi'ZM@l`G.a/
%F:^pT%!*mj/]dIl]2mT\eCh&dOS?*q"MsIfj6R8SYW-I9VGaih(&!QiSVkW,FmQ92&9pW<oSAO:iQreoT2W]'21^E#\:Xo`]T+Or
%',!'pEE>61#gI%-d8f1hBKSt:O18NB#JnFuB:q$m<)iFnm1#?]l5b\,JO2goM((U,Qb[ql#Zj:^9J8a91*V-&2J#TP165<Q;R%)/
%XsgEL>eBE_L%"XFNNaM*FaC5VpFI441@^=uc46$%4`EC,JPtS6$h?t"(';[=Se'gte;MeB07u![Xq7,&@KU-F]g[rA+>>Qn#,7<n
%K'j&[qA#3ihf-9TE=bbKf&O##TZ&n'UO8']<.bNHc<`Qe%O(JM^>hLL5=+]\d)-W$i2!?cZH@WL"t&O:k>sq[07WHrFG)Q6jW)Na
%c9OZ4:2PRKJ_j2qhRYSW3eg"V')!m),)*%TXc"5CR7A=Dq)'nG(TfI?Q?tYe=16i?I3`c/4h6KW<!(5K@Qq^u&H!-(a&CLNcLn^7
%C-@imK69[D_P"E3kjF,*"-L!b*+S>TG\O`60HAn;/7E1]';-E=`-\H5eRdOVd8t`G(`u7d[6,!k\]sY7A1i#nR,ftl78R&f?*An;
%[87RDGEp5CFRGS'>%[D]"llm,r-;CoN@$@Q).CL!;NX5>*noDc+hj$?I1Vhs^bHBbmGh/pjPB:TIh,mYE1'^/?"+FD-8<GCgG+r]
%Dq-9=oL-qpN`3h_..U3id10g=903\6<cdptobPpM8o;fs06PL1Rg"sI"X"$-rQ4S.0.Q6B"K@j?^U4DVLlN`gOJ,Ei:hV.kmai&N
%Tf<SjMq!,"64R3\bs,BU"9m/#,raF.bi^W`*7Z[RnfSS9Oa!:$C%U%o])TSU1K>k':hT[VPJ%4>p_R:eqV.?D]mThQj_(4>#X?l:
%&,auL='pE&s8&c\I/<\HLjo7\DdIqbe`3^VS"K]1bs210IXDt-ps4UUIZ,5*5k!LO'`f2Q2^)_p"nRhG3T,o0ZNAVXn?L:.`s!7)
%fGFC(97CIX5DDmj\s5)F1&UT>`e$C/CMR!XaN*edR):uf+/9+0Lkh";N:4:2J3CnrRMohk@h+Yn^p"^%g]QTHX58+cJilM>V;"Po
%Mlhip.)=kt$8X6j'AbID^Jc]lmMHt>Ru0U9PJRf-LFbX9NmC\apf?$!O<oI#>`3+Y?D*<o+>F,NEJ8t8bCOb?Mn82V:rh)oDB7sY
%n_8ef'[guB9m]/e7Qm\HKcK<DM>3MLTOWY+,SA<]a,#E0Oq3pi2!?\`&D88Y#NYC\j;?tYWJq#?\-XO)+WU+NrWqDK`&S?QA"8:X
%)hDmcX0oW)!]P!f\5E/3gDG(&"o__6)oJoolGORo3/UlUZLR>_i!\2)"a]8BX>,*VicS7#YJ$uO2F*7qVnITTYck"NpN[l"pN])e
%`e',o[O\"jFD3b,0cK+$df[n*#IN.fbnqe4Ej-$cgkYcSJS!W;pS=FTN4T<Z!m0)b(kuc,aEW$;h?Cq:IAK;R;@Fr+GK.)n`>IL]
%\7-:b%(j7X@6D5#^_)N6D8BPn!#Uc&.FGpa`i=db)Xt_UGBb#BoO8Mu_9iPX@Q"Q\5Ql<dPpCA?/n!%q>I"999KhVg_uq`"AT&CS
%@TL/SMU7hf2sL1($c.&<?B,C1fIdt!Y_t77#g!9oZ2#A5H(UdgV\coIEj8Y'+CQ;$Qs(J\ZO:fYW3\+,@1[*7ljL%6;b,[J\sRkt
%&;MJHe&^4_AJCo/(Z=<;J^hIe#1s)0Qb81kN<u^o6&VXe^]Ul%]Ve"GSfXZ<!#C3C`>*X:#Z)Y@*cT*.O6."_CJ:(OlX7\6#Okij
%F;OUu/BL%@'i0)'XY$>X16HR]!u41o_FVE!'E]ZthH7Q-[jal*J15@GJT=%*DI0Uc.)iuH^`j5L@R*%`bD$BoEV$\D5SU!`)-70$
%@XR&9-[K/9+u_8RT^2Zt/>+Y+i=j,3J>IaM-RMSi)@N*\=,&K7M%O5&s'2dbfk7t\J0mb]Pck1'54A<W!#&H&=peYH@*!Ju/$Ld]
%3.q+<_@e)):^(i4&I!-,^"!9YN:1&&f1.qN&.8T'R(3s]r!ALq<cs4)!/ZUAcG1Yoi#@*r%S$qs$TlU>d"ppebn=F&g!ru.&O/29
%Nju!R1dd7`]O-eWdJSOs,iK::B7l&Y[&Wt&fQ)]i%TJEQ+_I0>#^2_e%*JGFd8Jc4^bm6jE@$5941&ro1I"jf)1\(p+nL45AnNo^
%g!hm9oJmnQ1\re/o&1_spb5n+2-[/76inp7`:8dKgt_jOTOHX!!CI8O[0f\(5TL'O1h*!V3fNMh;:lRU^j!5fSfrlOrWcJ?+:`JC
%U@CZCK'V_?D\rq9:fm`Wgc",?"kmo_Uem&K#M:`9m][<*CD]U^]-)aVcd7@(EBtLth#h^SJ;,4WQo]5W@Jh0"irV$lK_#`t_arIs
%F:X>hL+]L]Xq8Jn\mD/%_KQ:c!#UGiWE41MfOtD$F`:cR'4Q@m[P72bcsD$L(.JKB2seW&.'K-i04<c(>>ndGKir,peHII^WX$QV
%V0E%M0SK0(<#@$L^a'@_@CcrY>DEms#UgM`),V5nF/A#Q-qq_.eeXo4^16Jc$_D=/K$"H\iN+/3J-f^ZBic_A;T.=M,`FRgM3J/h
%>`*.TJg66@>o#C]R<TOP^k)gJZ.\i`Jd<UuOisJmE.mXf5R;;hKJFW8#TNLNF$p;N:ka3qDAS[0Y4WBSn>>#)(4%Z>LTMZV_41"p
%=6s=Fg@]n[#B)r9#iOX#ipQpf%,HWA=.fbmIM7TLTa"T0$Q%#p+TFcH/BHaDc&2raGRCS;$5e^QhUWKL0`$=b!Xm:[8U++FaK"6r
%#$*Dg.f"T%Sgl,$+pE24W!*loY!+g`JJ0$\0/14.%$]\Lk^_^n!e;"Lq\^Uq%Aj+-M*p2`.)4&RY4_`%&0/X(#=amjcF`"cS`MKf
%^lt2Q]"ijt2ZSIWY^n_oe69OUmH(@%$>a,"Ts.``Y^na!\Wq0R#0(s(R'hPKrsY5/I''.GDepUmjbaP,N`[(."?8+%YgO=G0LO<k
%?(lh#.1(AK7g:lcTkmuL_">^k,@"V\X]Q/9<sJF3ju<DX(fH![Pm],sVNcg.oGDCtk>k:W:"5/rO%6.a_CJ7a..HAlI=V]`n4ad%
%874ib!JqGF^o6O,Q`^=>+cSD?OUE3a'Fr9T!Y-&<$uD5e-6WMd9"BNSBA^_PZ%1O#9m?cj!T6$jf*`41p8hHu!@-DPGU>(0D$h5Q
%@=VdrTf4o<J2,TSkZ/N@V32,Q>X3gl(`:&e@i6LC$t.?fd7[6Bn0j1rgB7R3C)%j2!rs1Q-PkAQ!4[94/b"7JpULP,0.Hs(6Zm.\
%,??bo+V+JZ&:mFF&^c.Y9RH4:r<rK*&h&ik+n5OM*MC+UT`bcf,QH3E0*dW-mh>81I(pg(/tsTj2Q2Ws(\$m'1\\,+&Wq8/ZSV*S
%FugKKpGZ)j-<n:#.%$AOQ8o!GVW,_Z"oO;=QnJa'?gOYeSN8C=^Eg/$4OAF@;-##oIhNbHp\Y<l(KDB$)99hSf3dJ8P/>tai;TSd
%.,9CN/)XH`:/cn%V&lSG]&<Q#$=6.j_YqGEAOlmsQVb+RY`+Vu4HK^IlaX_)@<d6X[L@XnQKnVL/%"2;%bP,P+D[>Gp6WNd%[VPc
%L#q91KE:tn/D/P9!W1%V6pZ-MrC*_Y3AH<f`EXjC'!T,[!N+f#YeNlZZ)#oIIu-#*+H`GuEr,h@8M@$W\:SJ#"8*J>Uf:Wmrplin
%p0M-V;\!KWJGj&I(;X_fp6QKaquuh]6WLSW\A+iD">OkF6"0N-(&+&F\]t;1rC'tUD-m\GQgmLV%*uGubg^?43Ue]>7nUesb+-]a
%CG3K<5cQ5="U<9k0U+++%G5$(:SuD-cD\La7Dl6[rpm;M%a8:MLqOL8`*^H8pjrV;QXMQ?OZ;JV*^seT$g-oJ53W+D4-N`$"QD)_
%'$5^u&&;O?,7+l%JA8upD\h1_#fNUT_#9;[`HZt-$\C&M*UG_*-WdBV['@)h+T4&Z=+&mn&*/'\k8!6JccmZkJGS@X*$3SX7WLrF
%cO81iA8e?_r#ucn^m`1=i]F7(1Wh@a7Gth;E8^qY`B)!lEDO&eL%nB3,IRco08&lWX2nC13ss%!N:BQO7_%g#puT^UC@)kQS1OU#
%K(7#<IP2)gQeu4,#/i/$%LmeNr$hm"qL\KBNb7DWn]NHn:`D"u^US(54ot2s7O'>PJG@*I#Wq\fn]M@k&=3Z]?V#RI*67j9]Wc>D
%%.[%@<4mk]ZABRkmK!%dJ_>qha=jKC%D6HWFt'Hlq'CT=d[`[Q=hTY!SH/KI"tr\*Ct1`M`;mL/K(>sg::ji*r:2O"L-!Iq$>?.A
%cnD?ACBW"&P^No%2\?7.>[`(IA<g]@r/q')*\b>SE6k.4c7`_=!/qr]=$&.\4`Gk4<Mp8;i;A1!V]g#.5p.RKi;AbR:A6QmYGa>o
%Jb7,!YliI;IR.A^b6@-s]3*u?!pNdW+inb+QhnGN_$0()gSsRO+oPjt+tE7NqF+D.EH'b:l'Jg7!rQ)Y7s4$,#Q!P+ZM,7#QW,9"
%KXK!\nY/-tXGn.>rth24Q&')74'5.mI@XaN"O?J9rk@=gdK%cXFeE)8PXc?+kSKckqV_MJ$aON]!pCF7='lI09+'\](SKZm2P>#Z
%?_30PPC`=`])Oe($1>V)`Il;O$_1R=CZUHp&J$3"1PHX<?WLg5[O#mA0i4EhJb+fA&/)nbk8._+NaM-4^L/c23!RZHC;,bm($Cp#
%66VXo>)eW?8oPd5Qc;*1B?iKOUsdg%S6o.k2IuHnA+lO"!f5N(jmWN%YJ;H)><orb]<%iPTO4t?goiuXUr%'YTO44["kj"L$Nel0
%"mD:%r#tD.J`pn[3?LN$,4p0bqSi,pi=;MfXqH;2dd2SRE58rXi!u_MFJK&`0Ctu"/IYtlW3M[>dP$9C-TXg%a:J^7*9VO$m+KMr
%jqkt\nT]hL@>78p^F20uQ$LCEjgKgL,;YRn48,!_K<MVZ/&3h4>ZO1B\;oAgH6'O4RgZ\-m8rG2UMW"#V2d8$!o,`KT>>plc,"g`
%CZb]b"ct=JPg7Xih0Z-Q6,K*$>[RMW7eI4RA,=p(ZYmW7IE0?WcA93Pg[50kGANj"nT'0=#W*>[hr3D<J`hs_,(18H^1.fq?dO24
%Df6=t^>3RT"3VJt%"p)m6hqAH[?cO-bO;D_+C>8`+WrBs^*&$l"3)/7_(gN#Mhj?$Ia9.NLko\02)3pB(c\g0J`4e>GYV<GhqbDk
%5k)bh"(6*kq"EA9i=+WP=K[(<L#7e?NKD9jpte07[,?o"9:Bg[REEMd<+H5W0@5rPG.(V?R(s^mHX"S)8?Sgr*OloQ@m.:ODD+X(
%dE_'^]grrTP='nm0XjmT'ss;hhm*8aR(_]*(r-?"aBmXl`_O$V`*V:/0[1TAGB]Z6n9PDWL)R!H>VDT&+J'RTQS!481C*5/:3+5:
%?$ho!<,_+O^9+7!5eV^B@/S(>F.fORr7qsSTU\l*;2_<K;*Sa:kmEAULD7?CoFh!&#_!E=p^6UM!."`4jFY]>*"4grGu<AC<\B0j
%"lM)1p][44.[I`_H/Z>Tk72F%NpgUohF2Kr?JsoVN:s3+B0cG)b<$_\-W#*IcT1uT@oKY>>8r59W4\e'BNbEk<hZl&Q'[Mg_sO$R
%1BlnTgH!+T6+pA9]!'K6E<JpLc`"KQF;2uNapV^d#f`!$Q,E4b(JJ.[>Y#V7-84h%do!j,=&oj["d>;H"WfWWH"C.bce&WAI#m4o
%-L\5m!g=E'VSE7sQNXaDT.tV*U@I@dPF!s;gc3S6H/C>Sm[*nCQc.rrU^gkoK#pY8e,GBLX8#ub$\F^B3?n-g0mOXXJ]SRm]L:$&
%l%R5@*@g"LabrZeh]IrmbI<F*<eT)g)dXY4[4A,U*02:i"(>K?_d/!a]n?k9q'.#-,Bt#\]PMr5h-CS;)860%"sP^q$ZOi%OdFH-
%B%,(^]Z[Bu6s_VoelX'c*rB96&UD]%Ks*VI&;\!;aCtMZaNG4nWm%cQ3s^_6qZ>hAE'V^!]I\D_7LqajJ[)Vf!.")]kqcTFH-r8d
%^GHLId:5Tf3Aph3m@83Jj$ct5,D&kh_4JnDiqU[;^.$EeN0h?p2OufGY=`N:]67(t>GcMRJFSLfW*n.'niT6-Ma#DPgMrh4GSLZu
%.u\[JD6[B9i-6-Zb3=f(Ma.fcQ[n*:0&H_iQ^o@H?GUk,NQ[H/qZq!\aeu;=[0mHtBLOMBXNTqd=;r[$h3Z(aKGOf87$pjtU-!m>
%5k+L">O@BbgO8+R!9!8#)g7cT&AfUOr#'r"HZ;=-#5[`t"*7*CI@'/jF2*=q!oSnP,n@Ws"K:&._VQR_<50XGm]i[EJ9Q4WErpK.
%pE\c&FI0rp6K2R"+'Xt?[JakWX!Y3E$fir7Y"$.N&U2p$T#LieX^:+3_:rNQ_!DGH(Y_HSUa4<1!@-=h,IC`9U.DHkfIf:<IE[DQ
%MsmTF^Hh1\!/<QO379GR7nR7lm/e-5?;Ymn*K"*:JF#0NQS*qsPi8;#r;s22@W2.\f1#L1COO%[U:^_+blqC^0q'p8\8KcEUSfhi
%j5Z#uM`uI<W&sh\X`o#FNiS)()V/\r@<I.R_;/B:<O_eD^]CHnFs$cV?SHUg6msW@F^\?!Q$<NhJ51,Se4$c,ML-@?[s9c>'Ia)[
%TkFP!"8rGM4(hi<]'tcr[t1E7Q<NM;$^g@(s!Y*nVf0fo:qA&V-G81Q8f*bsLt;lp0']Lrcj,XblE:f^46,NoTm"68:61qNMCuW`
%KbfOu'*<Eo5gbS4I=UMk0B0`Skb<?bI]R&C:.J4k#i4_Gj9pPlZ4X/MgEVOANUBYu]:cJ_#eHg@i<OsP,.)'U$UL+FoIL2++EY.g
%3l6gVTaS9SLgNF2VV$%N%&&$<Cl`HtQ\g9ebDl`/>q[&+`*cus`A)J&SE2*aNhNLYENN:N>oID3f:sENJCH%8Zu,*IYWLiQ5;7u_
%oWZ4J7!HXonID7N?uPQp-Og^PrT''O7fgnWTX]]J4(mpMjm]eta"5L>4dU#T<<5C;k>(L%%7j_mjkR@.TQAWtdIQNeCu!"jDLgmk
%$)TM)/hM<,7+<XkGDZ3*ej/("oU6-h/d$i*leai<3/S8e=(kF/BC?8Y*_QO)X1k6pDAICJ.>.f7@-;P5(.hoso!r1(3d0rfI_j<@
%*1;$VNh*4OjtRZq/ot`,@(%F*TZt0u^s3)aAQ0%!QaX1REDOiG0X>(7#';JLs4eML$B&mh&Q8&uS]dKPFWoqFfG5ZmF4mbt&UQgh
%-'_,O]oUE,N?dUab[GX"OE5+T$7E=+lutfSJ9+$7h-H+`l'^Pf*BKP;(N:Z&3gV%#j=>7'*E>d<+Qn?mWBLDE=4tkSYK46WkeQKp
%jBQ9RF'@5,8.BN90A*g'8RY\QA*8G/(GN(7Pu;;m'g%bi('m82FtO(i=LhZ/9LQK:k9?h%$#brcTCTJn3>Y1BDoFr&F&A4=OCB?q
%1A-El$qOWfm?A9IXsYlW1?[sO=;fmE_1?ZiHQf.hJ9+"f3_uV6:mYjF#BDHF7#X66OE69U#+mc7F$X1b1QZZLJA#thc6X*$<QJA:
%%YR<'U#=#&*62rh1NIAB?$7e-3>_(ueI<#U)Sg4J&^<E]k:2CuQ%baOqei\X[!,DfS@&`F/uZ@O,NkrP]EcQ@F%Ln;G<sLXQ%aC4
%SBJf0$]^b#1FL4q4^`e:FN;2)".8$^ZgK]TEu3d:SpO9S4Vt#/Ca3>-'<A$(\YA72Qcl&T3\7o;'Blt3iJaA?W.CP0![95CF+ZD)
%i45iT$TFDXf'n7m2jYC>m::1#$BdA[c"THgSHa9b?uq_L.uI^USK28;WYa%3^l@!;_rgO!0JG/i\V([7ndF5XV?aNpC:NZa]?3mY
%\V+VNW$R7h$eA407c<ELBmF1b]R<>In_h3npdth.!6tb!2UM[f(K?^?#')=&^4ECYW'FabrJ[8il%T6&aLTOk7XS.#5hUR\m0dqe
%?FAcmJXf@IKWYbp<Qp]@;=T7.b?BWO,^V-5lq"o"3Z%/'c+gF.\KJB.*i]JsT'BP,\YLoFIY#f+)$rhOd(-7Q@tHh9F$WY@gOYkf
%Mj-5)8'[sU8n=;Sc=L9$;#jA4\VmtZF/c.9mqJg=M>8@ngBBSRA9!q\kCUL6l9`eX+bF8g,Nk662\jEEJmKCVV(4fh/2;C'c=I_5
%o=tBtMc(:@A4=]n7?c.74-rfQ:46O5Z9=GK;\"].'u4HHA*;;#8I'5>kX;'u0#@cOpRjR5&N;*-/T_/)r7E@r$X!FFb9D2O#rYj*
%q.ZPb_T8XA(8/2D(F.^`_9C^M_cW#2]*cUq@d[(mrtR6>LgBM[iY</Q0J2=(\KeP^4JV#T)r/bL3ZG1&.bEufY>DdnP!iB)QWmi*
%'g]M-/lGjJc3mH$b/s`^i'=gYX.d-b&82(FN/El.9J2."<tCO#_uR9O0QPQ-J7bJ_6nV*Y$[7XG68#uJD@7nH>^T%Wf``Lb:rB_"
%!Zr4Ip8GE%GDFm\qACY72l:"cE3)bFGOM4!4uY_0:',L/^i<4+KT4"uD$pCbBXVtmgp2"!oeS-O9T9HF_bkEa(#N%--nZ&8lS]em
%ig-<jKa!<kMK]%AX>UV$&>-NXie!%mA,tWK4K)n"J@MFh$ed*PDSZM[=_P<9c(YXu3!MrnZUD!!\<X+&/gstZfOe8W\8_G(C2aBo
%7D,B:0Xtf'Ob-V;!-%BGJQbesKHL?),;='kBG-TL6Pc0"4hVurU2,s2c2hm@PlSS=nS_9l!>[c7hkELcF/pE@bG/eSJZo-hKe^\4
%jNj3%#e)S.k0UU$K3b^jh0U4sW40jmMaj>73snGBhI6ne4jK.uW6<<J%98`A2X0"D!8aH//.3'`^q7Q1&mX&IDD;<"732P"Lb`[#
%_SaJa>YjRKbRcI^?H7Z/ASQ_%/(-#*Y\XC)2O^TIkE[!8loB9E\`Hj-V(S"eeIh*i\&I+30-Ia&4NrDl<;?VSCMG^LD@u8iaLr_O
%&sFQb"`VXJ4AZ%<c544(0s:#S+JN@+ctrg2JHhSD\&FVqKAA/\*)UKN#m@Ue9WgM#6FK;j=FGj<bF/^d;`Lj1TMMeL*7Yh2J@a)8
%W%Efr2?]m/5VWkP%nKn)JbPb=OLB^;'8X*l%ZD2o[)H+r8mD@50dX&("4+FB?5qi_/a0%(n33W#U?RLDE,$Z70tHD"AW*E8/Aqp\
%/__9WVXLecM[K(Ya;12l]jG2aOjA].%iAMu#7sP$f]#!(CG$a<\Z/eZ@G"Un+@4X<MP!BE[`GLo&"*O(-ed=+?OOkb'uV!(eqeDN
%UWj7:PPJ)]Y=6A9-J\j<<]`(7"1u"I(\N<]KeOJ+&TV_%T$RPA9s.>6[h_Y7dhT<7E!Q*D:hp<Hq#IONcK$4B0l$eJ6+hQ"X@7(`
%!,B&/o^8^0'3qY3I26"'pAu??X3KK4FTng'-3J/+_Q*8ifEG8J@"ZKj[G6,8*^I-].gr6*^9V#'!`P"JpH5/!JoA1EKS.d[`htr9
%W%G;p!hqTbmLFnR2F"Zs"fOl[a5.Up/UWVV*KPnLMa"'k4[u=aqIkE.2K&P_!h0rdOWBT$Ct]>k6j1tYCg(:aC"mNj[qtC7QMGfV
%dis)kYjW0KrFqI&jT%j?(reeQm1#J@"apEL7C<2!.'RCfW[aZUO[:"h?BJs\fYbK3?s9pn_jCm<g?&j#(KaiHW2Thq#>^`2(j`q*
%^3BPPn3'qj/lP$`,#=%Ncp4BQ0[!e+J@*Q_3[6$^9I`TO^mP@dMJ($@1tn(F_%K/GhQRn<M\bM@?7pCdd=MY#&Q#j`G>N6(>2XQj
%E*e'.&NPU[&NI/]"(L%:X_j.:e@_I$NhIf&5bT4dCBhFfpMAjnK,+L#WP/fSG6fK7lk$PorIR9R_uQIt%[@sJZJCXO0(?3G)J*<q
%M'L,e$1QX@rJWlY`.4HH*juF:g$VBF(Z8HGbuUOc._seLVZc@&pJTlVl>64NN!"11HV$stb_"B'"s$QQTXJlj;+I,s%aH,GZRF?3
%Ct/\LMs+Hop/)6<n@LBNZkH>;Q.?+WFuYX\^s*AHE%0^WLMn>b6(8n_.6H2KLb_`GRZ4uH)/;&pOof?@%,VF@J7aR<IU$l)LF5Up
%Ap+qIq?4ql:i3Pudg*rFM7G0r=Ul?q6-Q&p#>=-00KY>tj;<CmIW+*G?^?*m\R"0*J]NKu;kV</Dr4dWZCFYHi9%h@*KHC&aKim=
%W9;W\AT9BYchW/C)Z[__<YkGJ?HGHt7IL\t'JHDj#XK)J4EJ6dQ4]Lia#VG,Z6N89N[QuRjpCh8=Rd1e=]BAJY#]MI,OuuY'&0HS
%_-OieJYti)_4W"*1Cka6(.e2q#Y5`P,28\!**GUfZuNn&G-;anTZD<67!sR,6;4)G@q!Fs6!/LN#h^41k+3%g=a7'e0FSBC76#q@
%*^l^CmZ)e'5YQNbb-3[V/1YO]R/7M0YM#+La:hrp$L[#5+cG@V[`AANYiM_B&NYFn>aXk$aWlLr'N6K117ims*25fcJAC%*$[OA.
%1f<#6^giL4,@%`ga7]Ke^0nu*TufIM*'0C7<S()]U*Vp5&^9#[q*9R3nJP_/>Ks1^>/7E4=qm&[j2P+&(K3M0*/'LJ$FiJiBY2-R
%93Pb:7)mOS1mXLKZRj>Qa4AK5%rO'!L`-*G0OqXX(NY';\gEHN/@[[t7O%9YXrO&`a?c4d(1r8$^&#q$>616#I?k2"]Yu1O>W9GE
%X4M`F!M__:%atPOmG>2ZN=,W`pE7c>:M,B5B2.;5A]RDZe5MS[S=#<;7ETQpG^,^UOcK(:cu`FS5"/IrCm*:k"!1]P:WhNa?31s5
%.6qkc)'6p-<F+9:*sX]%\>R'/6maB7VM*%:K:@e"l*Ydr#C@^<`LSAs<o>A`mlUc-BECj4F"\e88idDugho*`^dF`S2D0R($dIA3
%lQlVj@r9-1I,f88)[rng[pQ&A74oNhrFe^O7`'Ec$33_U:+EPJKHOZHQSpu"BI3R[D?RWp%:.c5*d/IqZ7_B7]*#BJ]5(loE^qI&
%Y5h@%^6a"\!k_`\^gFrX".B]6YT1DfVXqgYa>H_c0^q$SqLCBh-m(o!E/RG`\0E4HHh>9k(U9]-$Ma`V*RdO\@bgUTEqb\H:D_8/
%gag)SD)ouHCpVko6!l;!@X.bU[uZ(3_B'@A_rRkM>DGp"'`E]N!iKH/#.`\`TX9u)@o3;IEJ>s*'9+kDGNF^Y\[H90EN8"UP(f&Z
%1,,@TY/3gcklhD]PR2Bg]\*I6'<g8rZ)`9Ygd1r?Yk_7kfF%1Kha0g?qsA?HCFlgUETYQtP8e]BVI<Rj"K#%($aiMVCYg%IOd+^F
%+<\QmBIkLfPsm`'(B/cL<KR@pJJ:KjoB(CrMR(stV`2SHX@b^ocuMPI7XI62>LQ\O'Q992^j>IogDdY(V`'ciSBfjb>]j?N4M`;L
%]`iQ?i#K$6F,+_Q\\BBI1l,q.A%%27E49sjb]ecRGbB5"^brX.*?d>@:4J'6mLdaWn;&25/WHQM"Eq`?(b3c3oE']"5AJT#O5+cN
%,.,)o5B&S3+($[F#D,UUU.ln72AJrg9QC@/c7%&dG8BQ(CKaZD:%dft![mk)ob>G+#:N\eIM&c;<>o+PGgU:3&DSccSJ1nbOi/,9
%#mPn%jHkP?9_^/(DTq1R!AYY8G7?H]hd0BA&7k3HfE!G8M*n*K;=0,:?$KjA=bdEC7Ukf7MXi!TRCkh"/ZUls6(f<aU&?)h_8p)!
%G%;4bP7`-ErY*\RJN1j^4u!R=8P5_g1]q2%T;-c4OM-I&iiaL(#PkPC0m\Zd3=%B]=Ti6T=5<u.$it$b05i26/DZ9i:Oos5%*%--
%)U1&m,"VqoV6[%6QHU\SH_RbS,:<+-jL.01kO:/?pm.;<P"',_+PII`@kK+F+RaXLRE7[X#*Tk/!!-?fG@rNPjE('N*3!EacmUl;
%@)ZZn$ueiANf.4+A&f^jAf)6CX11G<)lQ#9ojj%rhZpl?GSQljmg*/"e`rqAHNFVC&'t@G2b:_>B%!sh[Ln&2Rm-pXk7Y[FnYGA7
%&/-A125spXc7)%_L?9cI9S[hK^K>ZWd)rA,;I!IN-5MHWQEh<joa&0UTe]=QmaKCNRJ5@uGE7D)a?UJ5HQZ]>*/Fn)61uqro$=a<
%6>m7RKREiSrGd>hTu@3C/`\+/]bhY>YB7aIp?3.CN]HF\lB?RHD%=?MMHaE32f2\&,&4/.MsA)eYn8;`)d6Sa-8;9?JXB;:E2s\I
%c?!X.loUT>Q*M*4rq[(BcDW.Xj3--Y($J=_'F#Pge3),8]?\L2::Y50@NrcMe%maMpilqQYV3j=((*,]88-gF,KKr2&Q_bm+e68X
%9a_1/$]<Z9`Q$j*_(0`h/AB4@TM3?TGM?V[)Jo=8\^+ILD.BU7QUPtU1Ph`?A[1\0%QD&W1c:H8/>061LElWo\-MNW6k+>Ff$^->
%/5I99k2;i@&mX+J/\C1n&&G+84I"YKKq<N2C3/>DY1g[-aL>;>ob^)NhfK>#Hu]IbU!6rP2]*t1n/Qaj*jg^d$FnY.q^k&md#?^B
%lZF:ELTl6KCfUAW#S%-PlVLo.lW3b*2V?eKFAp"")%u`RH!F1Th!>g<<6Y2Ml)VM"b/`M/qq-OfAT#T/1/W5EO9QsGlE05HFr*7*
%$kL=86M\>EN5M>?&jm6/=>r*koru&4<#r>1Yr*"4ABd;VH_s>XJQ[BP1+I)m/$F;Q#\@<NKjqb:YZ!Y/<gAq5%`B-?<0f]BEEh2M
%So*7_fp:@aon>XGD%9U,'!R3m&-BaPWuUpg<2pV7#&.r6lY0d.Qe!V&@g'>&&pV;E$Ajn_dRDKmOeoF3a9WTlb#e)+@55'D`bXN-
%`.3plZ;1*g;=FfR:/*B7d>Honh#;h"TZUuun.#US=^Xj+ifLq]KCY`Z2b1hcPq["_@#k\tYWk$#o%I&hf62F#/rMLY+i(u>(aq'*
%ntE\=9GT:[85P#]/C!?`/4pL\VN4tmmiZ/:QZ3RQ`fR4mQ(*n2EQ/MNml58&.LPPoUtAHW<Q+[RTJjjO-<q]IJ^mQRH#YLQ?sn-P
%47+Mod72C7gnjI,QGqQ*9_F[<[<>p`Gip0HDYG!O)g[]::07b&ncbj2kWEVBip!?/R&0blnY3V`V]t"%DtK-C5[C.YcFWtJ"ps0R
%DE<(oJmquo!"lALhnL/EBrI!>;B*?@9qgmh*YC"Ei"7%c)luo&j>)sg"@o:^4=NIYD2'$6f;?<%DCE\D=*H)B44juoUFbZI:^4!,
%l#J>_,e-plKe`3_=IUJGD=aie2YmV!c>m,k5V6NO4j;+1eaR6aBG?BXnLY>j.]`R[d;%6o@l#AZ#)("$`/(>6<(^$8+b;8d;8Q[n
%Bhkt$f/GZ809.=4ASpnVo_BE*SdCd7K[;9q8[KKU3@l3`"9i_ijh63D[0LeRd6!72\0?*JM?atJNJSsC(7>^F/<XQrS$/=tZPG!f
%^4J://0`,c]O`7t#t0^UTTDO634JuPbV`9.%NE\:,RIV_M^%i?[LnfYSi;*B^U*(5HaX3Nct\Mi+6)^Dclu:,Z]P*h/"N>$2kf&8
%7;;4gWj4tT60Sb)/C,sBk4?InjeikBRbpk*?/jY+r>F,MkqVU%;O"-n420_n*8X'>"k]&:AdH-C*RltJN9'?NA9K6-%&LcI`9Jq!
%3.qWDmXKA$]j/3h-!/t0.C0fpYnggfg'G6J,BaFZ0!GpY-\NX?3(H7%+oqlLq]AD.0a/[U&pG58ML/YQl$I$1NY`2,JV;t&XJa"E
%_;KhPaOqS649q(LLr3-*kW+2bep/BGLA4`;3oi%HY&MqNHee3FC=IZ`//SaY"n>X)Z?rAi+9[R@n[W#Eg'4]>L-EpCnZR/TAf>>F
%`NFZ'5&-"U(1*5$=IPHX%eQe,W_QQ.(`o*m-m.[_IsCYA(+,da#aJ<_@1Z3Sm<1g1Qid9<:h#=RVNR<&kN[R3W.(g8-W?+h(iO2^
%LrdkR(02Y$Q[LBg9^m%n<OcifN#EuITIOO_o&/;>*j3LH4*VALDupB0R>uhT5XB"pOf*fs$&[jFQUJ`u-rE<s=`B;\;13(17dZ]:
%)\L]6R`[A>%*l%i@Os$Ik+_o!K!3+BB>gh^[h=?8einoV?j(Vfn-4T+>!.i6',9:R\f>cS7^@OP<(74?*,:<q&`EWM`@[meD'&8V
%YW.LuUL8D$CINTl,ZdunbrmNi&_u4fQ,1aKDIUlC.A3_<)p9gF\b_.a]f)0Ig._i@A5Tn21;TMHTfu!B&i$+g<L8DlN<1GkNF^c-
%%*#l4#)['*]]'HdrR`?R^b0aZdD1,8_2+L!E(De?2g\DB87t(7-D5&u\!Z7BbW\r^QaepA<YYICOQ;3aP#8af*TRP$$s(A^7hra]
%2Qhqj[UWm$gmK&tl?VL%'N6+'%Euc@TojWj&GPkuIr%j!#A9o[OpaU34>K'&e[?l!ak:+aR-$`*%+E"X"e9Agp-`V970&R@\V)&J
%4A61N3cK'#SqpM#S,>Vdcn<A<8cdR5ngHP:KD3N0NNN@$eBZi0EFc!.djcSI*9Tp:2FF^u30:[Kn?ej@[\f#ar/FJ/.=$4r)`]`u
%,`_,@+-TY=5,BF_,,)OlM5Y1_'s/8>iC0GF]\I+i21TK*#=+^!_=aCZS:,`.?@u8'3/34uf^n\?pnLNS5QET`e3UVTpRCo]&7k=6
%/Q[h<Sa^ha<Ip+e0<Kq%@.isXiSLEXR]^n2NJ[hp.RoH/O52lg.7>QTmL)on+Yh'D</)lI15jP..b>E'cp>4u^@X;jd[P/]c9OgQ
%0fFEgDgEA53BAPl?4D_m1(.8V-?p.'<=$\L3=+CV;KTjk3WVY8&rnO2jJ`.D!=B6#?F"-6e9SW9<T,WP@13_*DAe-2V94&P/HTql
%4N=M&Tfq8#]3qYFjk)8"\:)m/a9\B^M?e]+(i>G8&)jR(ED00ki>A\KWGKF+<'0hJ_#`Z*A(ihp>m/;&%&p4,BclV_U*0>^@U9=/
%3CY11%:a$]$R=mBb>DElm.q*`(7J#1/kDPo4n,SX.eBpISE&doX;ubr.mp7DmXVTiY6$-8L4cQ51%We#C7Yk"JE_/mK]:NRU`<HQ
%%R,DrV0#UXHR/=*ag!uHjY!:7DEBo9%FbR;.%2uWiS<FK`\g&\E6/3n4#a?BKs3$4Vh!kUH6GR_i]Zbugd+JtB]fD]28HS7WE'l.
%`AI0GVl1.jHg/utWd5.s.Zrb7#H+@=W*L4QGS);."+$UmTA2D1*X5i^2MIp9Wurgj8Dh<A7/ig0MnZ5^d\V6[4^n6U$6qR\GP@YS
%5bZ'T+hc33jHdKtJ;kmT(s9>U$7(_-]]"<[Q8$h_S17ELGc(rH>3-O$?@tIJ]ed^R+5[i/+admI)cMJB"bd\c$N?^>$:,O`o(U1U
%]uC1`&#H"bRJ2r?TO7qF6,kjF<CR7q>LjT'TP"p,J-79#>/g]d!kdF(h*MFX;NCpJ7:ZAl^?LXRd,n>W.'I9:MqG`bi`CME[-5mV
%k<RgE5gSK+fn:8rP*F*M,UWR*-nPS77<S*)W'/9_G2r=ul3nh[#K<Um!S1!NAe04>kk86qL?068_Ek=S5U@Ckj1Q&^$OTfuKf2[t
%lBQ"A9i"'J?t1r;0kig6=OuUp_uqjE`REjN/9`-rNa"WNKOC+=X9ed'._?gkfhc5<)/hfZjMhgaTj/FdgWTpPP_"4?p*kmO%Om)-
%pO4sM'egqeC8-ET"_qK=PJ+\.<Mc?B4"?,\UsducRJhmKQBh>6lT"!S!KP%H-_]%IDHC[O3*0B6<S3.m0e&p:\46Y-\4tpCL98MY
%klKd=`a^nAI3Y\UFidA!.84Y6H.nei3("poeZsH+#l*L#;ph)$TgO*B;iuCFks-]\TtZEc11u6[WT"!B;F5b0M]O;0jQ\AH('-<^
%d^X9U,@oY.SCY.%fE!<PjRhl^&<QiUp\dWKIl;4=e_!mSL?j;"Ee2F;*eNO=+J>t+I@gbs:Ko(<f]3%3(31fO-%HTK]]X@4e,9'&
%V;*F]GB&75DDXc0=el0hO3/0gY)R^i%a:MT-/L+e>L[>1:gBqYh!oCB%$[72eJuL?*YuL%P,fUDb]c?$b$^B!bR+3*8XPXg$/N?c
%(.[01/e55+5!mroi+PTQ#3%@1OC<VGq@J$/h<ijZ@_\cr!O07QPPPr<HBB[9R@,+;Ah"1m/ZcNk'6!O*6.6.>"#2qQp=$e4PIBOM
%V+t3=&%a$Zb88XQ8ffkn_8.@Ds'JT9eF8iOWnGgdh)W\0:^GIm^$8]<(j-H/cuCdZm6/uEaAR[ua07[k/F1ir.gA=-Z#(>LPJros
%HJ'K)8^95(bH,q^^1df6XMh:2,YsK;;]05"]+1_a``nU`rY2nM2DjblU8&Fm((&I-mYqs$fumZ(SP\(PkSAMlCpEM;j8fhnARXY0
%F6n@DC4Af'Aqi:%>Jn^%"&X\]V2KQ$J7IXrm9W[i4N>JEJ=nGp=!_4PS_[C6Rc><bGA[bFM.ZggP@HOhg4@61-5@gZQQ&3a&Im9>
%U$WJ.0&Ga/7-,]j7:a'c$GfbuWGC)sCfQ:LAPq5M'%^O9#+Ce\Kc:RWT^:D^OK)JPp2VN`bJFAb"@0#.#ZWnkVf<d()J4,.`%6rA
%nek'<S:.I.`+Jd$%X)m`OQn$DfaX1ucs+]M/>o53dZ:)RR403=@[/Z,=!:Q8ONSsG_j:5*/F=<T0hDb1Q'ao,b!OH_*0-T.LpsNb
%&Hj#/`3d(]**@J;H"S%*CCYWKQZ5E_;*Lo]=E\TcmPSP`0a9O)S*32<qC,`#1t/?$-gmkM"f>Sh>a"Rf$97%?O&PgJ=i8K7HBST:
%RBBT$o&_,<PeK7Uec>"CN3Y3Fa4=fu+C-]8fg1^[5iF'i%TI:13??KeZ_:!ffjYIThp=pJF@J>kM-YkUXpT^=>:ZcK_7//ZigP^S
%BjKejj^nX"XZk@\X0QjZ090ubq_=8N:@G!W0nYT.?@lX5Gl34uV]DEgeQio-B"E=8k@?+Ak!`(E>2>X)RFX9Y(eF+s-Ehqi-#llG
%:dss2A#WQn/F$E!'-gT6!!CR%4^&5NFD:It-+-<Np)M0'V7$/@iY#eM>/T]`oJ%aaQEgn+K\8suK+'E^7rhUp!,)N&;tZ>ZT6a=5
%kV4rPMpeAN$cQ]/*&)q.cjYZHf9WB;14-sODfNu0-NehR417E%:9I$Q_/#jH6!/8t<KYY8Rqq`a--KE.b<.8uiN&nI^8OM`<Jr]9
%#icG.UXpnmEM+>%eDWJu_EFY![!Si.q\WEtLI*^^?hJMaT([\7"\p-)n3NI;;6:OMLsd!>%=,5:mQd*a\#,TTD;9=VWr80-qP-s?
%iQDnH!2hI3eNDONJ@`4HVV%'m5("JY'nr&lC.)Vf_m<XNq[0M\*5Nip"YL""mp?#(ULXn#aSPY*=t2bg30t<FhWi+l4bPtsbZS;Y
%WdK"J]C>11?D4Qr_L;d%U/T.;6if12+Fk-HEogRA_/Aqk#Ru'$(U@AT+$`Fm$nhriOELBBqui/4Uso'I@ePF560,:F)$!H2<H\>C
%U"ZIR)a,lk[s<:Q#;YU2rM#GHMjM4[^BZl<Am-BIP8J1J*$8b8h*DDB<@:</1GNfXO2K]B&d:jpfptYDm,KK^J>MP#Fg!pH-CBF\
%,!L@C'44DubHf8#ZeS&eP[#3!'<bNHCLI`#%p?<:TW19fA1Bf3.LAn,95nfa6=orFO&4,A_Bs5K7Np1Z:@949K"1s_go'G\4ED,%
%+X#7JB?m)R1fR25\JK8Z_QKZ%"3)['H;QNFCD85Ch*W7Pg9!kYo*:#=VY.g.]`BU7B[@P]-K5"Mf<Y%[r+o:)l7FF</:=#r^DN]H
%DRX?SE)7C[7kD8tpBp;)2N+u<)p#9so]k*0dM6pk7VPd?;tB<aK&VO0XrY]Hj4+%RN]4M'O_;UEE-#0^],.$BLQ<i9<DYaK-)!gG
%'&M93K8i%[Eq,<[*FtK#oA4e^:<BdZ[JRn;Tpo[pP8@JddM.W6[\Dhg:VcB[nrYMM"M9OMq.oAeYphrM..!:Z.US,KW![QcFF'+:
%>;9&<rJ_GT=dIi`JiEGNfe?I5Ej`b""/YfT-<^G*N]eCM#t@C)C7aQfV^C?RFj]3>@ascDTZ)I%@3"Pu"7U7t8cTJVDr,?;8pXUL
%QUGCf[Sfo58#3%\9\NedKY3pH$H<^`m,f`HD-%#NrJ/Y,fHg)m=g+Y/kS3^<'RNDjFU[L"-FfiC<61Ctq>99ZZS6iG_S*j<C,Q.g
%!L/ZYifN4dmm_*4)QHMXYj3#[AsrN"-Z3XKf8,#>MBp+BO,QJ`Ed<`q=Gq+/8daH0ZUdN)8Tl7/G>\mZ:nCc.+ES,?1.]N.&UG@g
%#7&G=/RCbdIk!tS0M8>W[U^NlB+9:1>Ca>[:.<g)<!5bodh<$dXXUdbdX+eQH.?C4ZT&MA,jJO=7$Q)S779$X"Nc2sR=-#oj@Tt&
%`Q;eqTMp\N]K%H3i][q>;:-j[07LoM#2l#;AG8\"Cu<0'DJUba=4';)SOl)4U'66I,hR)Lh?8V6dr1R+ZZ=#?3K]?;,dlm>(Nq9=
%Rjh_YH*4k3gSO^_/\:;QUJ+T%<;SZXl_>-KYBo@?XH($S+_\^=7B;lK;.?_uMlpSeWje05Rs1&iIK2n>?9XF>+u%oiP=oFd"^?@b
%dluOuDh(-h]AL;mSZ00pNdf`gb_/EEp/cK5Rl?5P!R'g\n07n-6OWQdZ4GQ<!7Y%n@9*'UM1X=FjY\^^CeCg?DHt;HLT,1b`O\b)
%Q*q=b<N&Ed+&Qb0^A3L$F*M1@nq**.R%[Nnb/A(8>>gW7g\k[UMf'G(kSAVSm8mO4o]^?Z"L'\OD445=I:Gf>H;,anLpduJLqk^'
%(!/Er1SkLl^`LX),fURA+.PT(@HCUTl95N.8'T5BL;hfX$t@Hmr$!%.W)dF.-"Cmo0f[kH]Al/'7GBpG1jMo`/HR1kO'BpZ3K[:I
%;3d;Oc`+99$d!B;VG=G.Gu\cb*MnQHjlPj5#a3aJndV[26b-sshD\'6cf2X`i!u2-/chm=`78-C!7ahU$:S6_@+,(9]f0`Pj1*Nj
%miA,%J/_!\?Sp`sQe%Em0B!d>G$+Hs,/t9'#_XIFA'oh&AbE8,niUR,.P,+-/K-;#2nEQ%#?b2tQ'j#GqAf4J;]Wb)NCBg.8*%m@
%=$4A?\.C[K(&eXP>R5I9b)oFEnSrAZj';eE01`#lN/;4XA`t9F1V@!n,G(-UUWFao&94.pAqO&kbfIk3,(:*Q'U&q9Mi'2q(ocO>
%=!9tgXQ8kQgdU4cLYW`9)!Qd;K0gs*"NX\#$6j9lG'2I"7,Y:+19D_00.\n.&XSqc`Sg&C*O>\(g#n3JKd&911hjS:),PnnBUID5
%gn6$Xobf'h&F1)X_A8AM3cod97L0Oa>B&bl[%L5=Rq,RU8M60I:@UT@j!].VhU2^ZIe<eg,RjS"Gb]?B-u'?*:;pZ*$GmoR>ng0J
%iS:6%F0Hp)j%X4s8ZXdG3QXf*"PT!nEKWXf7-*iXGHbNepgttEc"XltbXXuh&8sQhJ=o4)'d=!1JP_\Q5,nd>oGpU;YF:lLnP].X
%]O2UUN*JrE^f3<E6Td&om>O/'o#F:1#Y.lkaB[+:O"eL@#sI@Dhj1@1,T.OW#b4>9P%Ir;0sYSSZh:\U\3-51JJc<I*jbVO%JD)h
%nScXW>"C3X'Fk2*RV:30J_"\>9u:E(FLt\h_20R2!C-oOT^pC8+bJjYVBR0,"TCV!_C4Z$1%>E5Q7.d")PfnW.WW>W8^LO]Oak1g
%3j0D?PU]VM(X2A+aX`UhJ??nf)Q?)7R$GdU5f+='LdoYZ_2bEA28;[oA4`)7RBYYu)[$_E&V6+0F+^fEHAi.1#V]m*CBnK.j`7U:
%<]1jG`95:8HV//A,*F_sOP(.K,iI(UjFC-N0)3s3Gl:#>Rm>:()0S?H!N9RG&EO'&###X*4t[mfN-Nc`1kpNd!Q<t8qkXU4.`JN9
%$UlLIQb"Z@9b>o0-/QK$T&g$lfqjlYQImI\,79YCN4^hYOsc4e$G*g51,,hoPgtX9:#sOc385@J(ceZ$R0OkYoGAdiI1D3?8Xo+O
%\1)5KqPrmMJ4i.dPDK[o^cfYNgl(GKOqX?CX%?Fl$XH_,l_5'3\.DOA.uAZl&J)+?Vm+P:fh)YHCgc-1a('qs$Vk.@*C29<^ughp
%9LV5P!1Y?a#Nn;h#$Mbg(f1u0ac#ta^m]n/S4JNc@.fR:Q5d"A3A5WS8P4J_8KaCVb+$0u999Ec''K'KTNpWdJh9=*+,Pk)>&5LA
%`ec#J5YbbjSkiD+FT<lr]n)(AFb'ak*.0"aK/-*584F)O]h]8X"!!ROhHN+i,[_%#IBo_RXqr7aOccF6TGBu*TNG:*p^:X?:<$1"
%2l5"T,ep3#&Oo=BU9u2#%D:P_A&IY)d@%%IYSG0'.H8_XJW!<'[`-=O<=iXg1b`SM-b)]Jkc:M@/sN_3qLblKeg&;"Y_@g#r$4j3
%[;k2!?2?\)V[<lkaG>q9)?W=D7;s"P3e@Se4"fmI,jdRd5AF=?.UU/u7(*^.[E?,k"n.\L7U2%<.#Ab)_i;aI"s0-7V1g!;ZPFp?
%<XF3FOt_NL#M9Be+YlWJC\B.mU!_(a%\Lm;O\G/`p$X;nGOa*2kTLZ09j8E7DC=\1:';f>],oqN,#^r#GbF[EK%QS!#UsKmHJqO#
%nqror$&)@:0d&65+ik5<Vo+FFd0od`XunWj>-s`bB7+94f#0oo#t0PIc$^1]A^QSbJESj_\uKr*A<+60N3aY;MsA&6l&d]iOQ=tQ
%G9&ZR#aD$r:A6[%X\cau>,-E_G+tr73o&MRT+.PK;tqR,H'rcuV>Hq31qrSW'Ti"hpb&IQCQY_[2GY+XW3?R*9i:!b,h*_$6=RCX
%1uj0R8MVOg+Vc%HWF4[!D8e3')>R][m*@a1GuTpr<S2Xk!G?p]TQC^cZ;+@gLp0gF,6MtM)WqC4L\T1m</kH-:`SZ`QPlN0nKl6Y
%FI]6=ZulREX\;lu&g'AE6):L4$`YJR_?l1W7Y,XuMW,).5>\$JS-E.EL+e\T`6J'l7N*E=%7pApL)/Io`qLfW-KYNk\j0pQZ@^#6
%%41;@$`KZl6IS8RUN^[]#?f%X`KVXmRECIi`4:2n#XT7^/U.S.j!):"9fQY`2l>Sl,^p>c#JtD5+>-S?8FkJn5`,:E8WGar?jI_=
%Nn"b`[^+04an8*iYij-BM>2u].+"V\R=kp4H3nWTQ]pHqc'cuk'X/tMhL]#%)%[c3\hQpGh3UhiRlj:Gp,XWH#W7pUX;u&3,E\ru
%<.n+p>!6"F>L*U$'&fBoEV4@/)VRsU@k'q.bf6\A)o@LU5+S40^Ulq-TTLs;>^[<kN^.oJ'nm(K'TT)HV;o6<>RurGm/du,Z^l'F
%)Q/Z?;he=\.8NGG+3:0_U`j5kF=G[j\(7dVaJ2WL)IuaK.45e'#$ImWJ;.\&0/tY1gNH.bJaF>J<X)Js^nspQBh*f6!S6*[H!$Et
%N3nVT@c$pnSl*j*3S&ojo4.s\'HmLJ%AropnE(@[F#Yem4406"9K8;rH=Q.aRLDP'H3NKsEmt2K9iqZ5GmcC5;X-s:7,B"@YriGf
%?;85pS<UL/&Z30r'mLF45P4ffIBg<9"Ur5="Pc)/)RXW-)$c:s#.C=%+uKbAkH](!#1s0[MD"&o-cQ64ZP7pj(f7YVE2MVN,CD$e
%Vn%]YejYKbl?a;R8)u+^H-?m(G]`#)7)bbC!>.R/6+_q]"=,T(/]M?t651Ot_S&6$H5;e$Z4pO1X4c\/?+o4=$!:%@7j,+J+Y,$8
%0oF3)_a&mVFgRoBMjRF8\:dOE"T[K6;2VTB.c@_cODZ."'1d;+!^[2f':G%mU'l.Q?6O_0:J1-e,Ygt=N5,JD<Gk*lTE)&'&PIe,
%*&W9m5_HE(@p=\$<V@j1\l;GSJMB:2<1_5B_aPK(&j;$+,-(]-BeL,d3.?mVi0N,V<rrF6>iJ#X.]Aiu2<6/Y/h)aq^+[@>"LoT]
%7LX!SN,b=(!g[hdH4i;[nak.i,t2*H_*GUu@%5Lg!9bO\7[[Q8lltps3XXe;!%B%!$b&8#n2PH0-CB&'I:93UM+$C+gGsPOTo]AS
%3mNO+W1$0(X!.'J>Sn+57DT,`#V"A=;OtYf3A)+/=!0TDZ)D]CZ\7`j7)F0jeAK/sDS?A*-]'*JK_=.4_-['+6J`d4r;A=o20E@;
%Bhm5<8t.Y*F#'6j__4O175gg?nB>BTO0l`k'7N1?/njAm+9OfK"_LN_W@bCu7p+nWC<W?p8_mmCk0e-C\QFeO.R<,]fW"8RE6O0S
%U<+%g*7&oU`IYjd]!$ikhRG%AfA@%B?W"*D_OShE0YAle3E6i4OmeD=@'16"%)4o]'?'C`PJj].iQETK1:NsZ,G8;Wb6e+ZO?+oY
%E^GGROFP/#:Jm$QM>`0D`-KZ\-?aZtY\A_B-Sn*/3!HlUl]o,9/uKOm^`TL0*AItZSU[m8,2j\bR$1qnAG(O(DE6g=_kjQ@jbU&F
%m07;cWq#1/6-H75?AJqkNo.ttYT1%,-XJh+!A#+B/#QGl!c!EiScu:E^rjd#'oS\ljeP">_021_^$nZB5G?5X_#,-L3EaELgN__B
%;]VV];/Eai#oa]r:DK^rY&VLSCs$1rm#)ubTZUf;M"#ote:bq$6Fg_))*g3DSd"6ZW(9>?o"KsP9o3uYN#$MU7/7$^?pLr29a[Pt
%`$VZsGqj"'Tb#!*B#s&[(,Fp+:LJ4k1R^Qi,Bf^O&OmjN=E=7D!1kRL6ru>g`?_A,YmD/.]Lr_!2'R;riZM8eE^J1s*SKr'Bca5<
%[XoamNGDrA)EEuJU?"q^OGj5a$oYYJHZrA_a3_n)-\NY^"c]$#lr$u[OaBXU?6`oN:N9;-8&<84i*b3G_TFC'9e.&@l/BEG="nYm
%RG\-P@?Gc5G&L4<<)\M*.24clR_Z)8Jg+h_J3*ogS1'oC:^,Is8]'WtMk%k=n51TS'RM9Gq&%jr=%MCXauC:N\^lO6*-+Y>aeIN/
%$9;B<oIe**=/F+`aEuAa]-RM=;;m1.!-0iW<69`I##<(XMG%fSh,G;_m6H7e::79Vj/Sg(]o':/Kfr0<1E9!o4l.s3dMVO7V(a.f
%DZr70U_]<UNp!R.RGa*0MYRU&4A/MM^lB(Y$*70b3_fZ%>af./3hFmkVjQLIn9GIaS-TI(3UoAV'>u?=JiKn:@5SW<+e#V\/Fga=
%'(M+d9;^DemTTi6-W<8'f*Z>a4Aj1(:onXD=gK=t[8ko1\j@<2RcL>:j%7Hk"uK((TihFk-dF^I7$?/8qSD;"rIaE;#g,+=WhS:<
%OU8]Ej[ClCiJ]C:c4IUH4<R`l('rrr)Iff_@%@._S/!@Fi[!:[TmR"s*m.0AiXcp:ljR.sQL$SJ[M#!'Z2sO>=4#rk#LqC'Mn]n;
%%/X$.=I_b[nB_oQ\3e:SX>kU+5uQoCjAqh5.o:66R=OM%R,[a%W/QTJNcL.4h`ql'rsQ8r;N[['fol_)E@j2`L(bqq%k?KcRWr:U
%afr_*+c&[T'pNqY1P"G=e#8SRiZoft5mO#9i`RDR$q6ZlUaI+;3"[")@#6%%nJ#,V\e0fcdtMdJ&]?&*#p?CmTS=P[e`*RtiAkrb
%dMb82CLJt%%jubq+pd*\7V4**\:P2\:(-PX"Z`)p8p2*ZE&cdB4"nIh%B!(b0N#^oL]\b+$6#M"Gg09ViC)5n'1(_Jn,d_5,:i:2
%^;;7&3,i,SJ;@\b8ML/Z/=_fl(g1=)'i#6K$sfRDPC`id;L%a>5JI=.:E$F338rqX@t7p;$'0BKY>E(b1]W'B$5/pU?JR<PUS>f4
%+Msn.^F2K0'rgS@r;[u\<GNm)@KM2fb-pj<*(/V&\OJpkVoRk=S]Pr[hf02A)OsJn"c6fB$r/mr9?spGK+jnCd-;(U#I">07Je]B
%aErmR?GuZ:6jHFDn-tGG4,9@N`@;Xji6_#bKENrs_oRAd:Afi^4E/EhST*L^Ht%g7m_fRJ"p9&XS2ddhSH-8M&ib_VrWWil?'Cf$
%,r"6`eU'<ZT+aF&H]qMRi!i.o%_--[E$s>E"p*T"TsI2gn)B@,!,s>O'E+DL7Jt-i[LX#(DW'Dc-L`bV@d"dDHis4L%"a63>r]$:
%!e2.tL&5^dL&LFKlqfBS=<i6b"<M.j9<U2dJ_D6]-XhT$D+"R*%[R$mGi-(a=)d%;@0,UXdCr3*6:@>qI66(E"k@r(cr(r*0#h;V
%N9?;>"T*?JViC'JfXCr6-Gi[amJ@dsr<.LOi4]N`N%a-)gc('=7=YCuBMFRH%.$&(K(o]=Rrig58JLI%6cS4Q.69gM/]<8\5i7fI
%j:p/!e#9k-Z<!K6b,K#MS/'=.8PlM^.*f:(3kpDR`56+DKEA5_^*@#U3KT<T%"0c^d?]fR"@DA)(uIUj)[t^f##<JuKPt=3*<3AK
%pnk827%YpBG7<IR=*SZ#;s/,G-+\<I>(d7N*McfE@=&Xg_Y"8i4,@rUOhE2kTP1\7,)ik\aB#h-,YN.\W.<;=DnbahOTu3:h9lea
%W8:!D:iD6D5`2t$HK.)De2FWWJ.]\QB%`(W,n\<3]r;07N"r(2<"#H&H;g=:o#DKkRjK7D1c*AiB`61O2"0(NGpo&hL#jnk]IAjN
%$r!A-.6@YLnVY^g^eC-`$Ha=a8R,)Mi[lQ\X:\K0hNKEchRSQ@?BMm=$0"l_-cRENKM*S/0"BCXO>fN(OLD)YhM?)<*lSK.S'EVr
%R3?iS6cRDN,]?k10&!a%ncfg8#)^IG],bS1;MkJM\0]oqnttfoQn%f;iPI2KjGi&dTLHHr(k1T)=p+>m=O*RIL28tA!*/)"fa6^K
%L^[gs.$-CI6K'n%+E%6*<IlK("Q0o\0qAKh)[dsP2pMd=!dh]%nO@$uJ;j`Q)_j4P[u'.)-=4L6(BAlJ6%F&W`UQFI/\l9.a.$Om
%(aX3Vj,K^[#%n\kD\&dXUeqDX2f2A\+^X,P,?R%W$0+__J41<62e,RYIKRUEH`<WK0]!Ks`D0*\nODRq/DVfrD^%!iVrDqG<Y"oR
%K&[:ApA>9=)c%Z[7Y/3<+TmE!GnUA$r\]cr9akFaMW7G$k=?CG,]?(I_3MS7njWdp4]ZAN+L;p^-j@_^X;jKq>p=QX=UsS'"nM)L
%K6@^ERu/_:g!9h\GL)`2/L]Ih<V$@`VLH+k!TDiLNa*1/@EsLn=[B]7-4!XVK6U<-'Foh+G]tgnV@)8kpg\k=2["')])q8)&\KP@
%LQf@S^`--3OXk6Cr,+"TNZ;Ybmj8)\U^DE,4dQ<0H\-I*;)#=p"UYpENX3?qk\_)jB:.6rF>p';`1+V=0de9_%(i"7J4g@WCZt1-
%3?M"h*m(;"^po!NNI(,K>>3[eU.2uQL0]GC@FI#bG,()1JGU0q[n#A0k;5%F-DW?&$JNb69P-f>"RTg*]dU:&;;;Yc'S;4\GUrtM
%!M7%-m3XUOKaVKO#ZRrs0tT_J[-rk)%5K]E'XJ`s5^<FMlm<&>Ut;!iAD2d6A=21DhZ1`K@Wp4b"QO``fo;L6"D0/t2e?DO0UdT:
%j!/Q`kn:BCj=69kD!:@g!d#0b)[RJq3``388>@oTD\a"dA5F^i2^hp3F,AV1TN[S9;UfTKL][LH_KOE$`IT9bfPV2*V7.pj2]?9o
%(R81ri_!B!G=2/a17*UJD=P+CgeEGInCnVcS#@=:._+:W+QZ(4]0YDE@S>WsR.qMi4=]!`B&4tU2[idGG:VThW)X+3;;c>d,^)T_
%E&T0R^p&L[Ahnss"M,PCEC)<GG8#NXE3,_E;;MN)'aidAMM$G)$hRDh5kbr'S*N9S.6GZi9Mo=$L$j\eUHmQI\f9Vk_KUOcN<jYj
%,(eSZ$D3"uE];)!SBG^aX;msM^tj5_K0Ci;]/f(>E&+O4*m(*(70>Mt6)48-^tk(o)9H6I]BQX&X20n0fdn<rZ&9/@16-=fEE>-`
%,hJY4GI+9E#hk+YGC(i2,J`,OBSg^1GJcDh($oJFFA.sr3<ei*YfOP%<I!d!71/Jj\XO9=cHau:8#/.b67dZ!!I*_GffXht@9MaP
%*!4ni)\*W\"7GkcM^U60]9,"+a<1ZS7R]k.CD,QCM#O>fYQF4s)5<i,G;I5"$/Br5CKP6a`0d+X1`16l\KX&G:m&@Qi'L7G;5HRq
%>m-bU$Fq,:N6J),f*7#[.rmRG3:)*JgeHkX"Aj_jTq'W*0][,K_!/9qm\Z=kfeGq`-6FZU56SKc>`&lN3,uRh&k.\DicZ!V"8Jf]
%EYJIO5MUq[-A*O)LkSGl>+@i)^tg;NRaMhXS#B(5?atH=^n=,Jg0N,8AY2"L&V#jMFr+^ag8kS2eJb\3V<L'oK`OB&+R>P"f3oVn
%9'gg0i6=#XQI;^(D3a_2%B\@j/%"_9't!BU2nrd?'0I&.YV!,kCR4;tCW:&Z#1TciY@+r$a<9<H80k<hF;#9Wa9QL:DBP5Qc6iIe
%AE&>-W<h<Ji'N,jJ8T[n*NK7g9t_bV7.IgWPHDTOkH7uP:!pKX"c&")$90tQ^+^\n&t9hRb_b_2Yg7h"/#"/-="j?6942W]i`IZ_
%2\D3`.DSeG#%^6kSuCGpc+lR=8-r]/5!oM8-3D$m=.%c3A/9gY-6"J^a;'lMl7$$^EYDt(i5QLn]4_@Z`T&;,<b+=oi4)&f(it?;
%cuTJp="s&.@'ePoMn>p"+Agj(pZ9P7JrO2@j=;?jKVkKbTAX[P':u<+!lI`>(Bkg\.,63_hYRH7/t*-L(u-qjA/q]o\1oODRYnmT
%T,QKM!P!sd_1%6UXT3nV^Q#>;<%%P9ZC_H;D)IguHb69k97aO2404OQ$*'0[S-=/L9!nqWdr&>=Es923MM0bhZd,#6JSnCG@]jLf
%D8;'E!YflOdPPr0ghn%qZ3&g!MXdg!gQ^7i&#&!"'<X<tN>:5lG@GMjZu+7'iD(2nD>Sa8[6:Jj[8$EU>)+"&Ce]jI/"H"0peqO+
%9ff81/=[?)pjFT!3+97PbW:h(oaiX<(GOUjYS99J(3ucr/>.D?bVi=5&BJ`Alp,E6N@UB5\nCj4:mgXA"Lp`p[Ri3jel[K>O%BDI
%`B^jd0RRC7f`hRG;b68C4$s&sk,oi]^d)Rb=3ael^"-t+JS\grOW,JegXmS:(FmKa.#\nR"PH8@:n7b/f1AHmP*ZT_I9U`<@8bX2
%"PJP*&SPW(ODU'kLnPsGCmL$&6>FEnaFujE+PX,U+gO[*[V;/k*<NN@BUIF+.u\?A#+Tt<(u%tT<fClZl<W[H9Ik(DW+*Zs"pHg(
%Af`NRr3";>Jo,!7gI,J;=Fo*oIP(?;$=]K:aq8e(Yt`u7@BgMURj:<1M-E8^:\iV:.VQR`o2g`bL@o6H,F]8!$aN$6UV\f,I1!5R
%'L]I5&@MV+!Spum[QWQp"a,@#&L^NoChJI+9fn^ETbLoSiJ!dG/-t";bac5W6J//?4b0FZ`&8pD1!I>lUN`m#[)U^ppc'i8!0r+'
%n0%]^3CAAjS/&Unlpp!r$Ejp9&V;hR?5o,V'4%*,R@clL.f)J$\\`.BSQq8$$*VT#;9)&_r&a)oenFj4]dXHf!aqM'M.!8[I-js;
%K/RskA/>E(d@TRU<9]0dV7;@1#Sc,FL"<Di$+U,g-6fssibDQ>nlAl[Wi'NeW_KK*f7Ff[93&3)`RH6Q6<piI8F7lq`XG_V<_X_R
%5]$R5K+2LFVbJIgR\Y\Uc&C![-Y=&r2*s<5K>nNuRip+/=.s<]-*$W)^pF-:`h)H%V-U1"O!&.8578=qU-@9GMDh\8"Buh]'F7bS
%":M#`dPR+sG_q9N9gKII/h2N4q$UVQ;$?9^0mbDND.(S1%RYoQPL(,]PncJE<K;o>_e2oH(Ztr0H8Ys#,PbQ[Z]g,1XK]#[4:.r;
%$D!1IDDFrmIY@$WDSTj_IPR['#\nNpcle%d-FF1`[O]:4U2gI*,iDUk'hiZUH;0N(%/mJbbKc9#@VFFtl7Xe3"5N#W.bb:_.8i&<
%%VWQXPYIi)E,r+#Z=sqVL.YjZZ^+WnP\`rGj'l(_OR0(4'FL!t3e._ZQ9@D:NJKZ"6=eP>"1s@5A7s/\e_&A&=a4_4C_HP@_--<5
%BmA:h$BIn)=Uboj$Zta<C7^#epT4$("WP&i#m=RD@oJIGU3ICkS+&+?aA?D`5\<J3Zl/i/&SIoLfNfI.#)c1YIGKRqL4]X`)@DD)
%4qL*#VSG$U*`o#eX_K^%!QFJaF/kV[>qPM<88N>:0EOj$07ZAHBUgt[V^PQB-6tLjY^%WB[Ke^q6jnmJR04%4Ko&Ob%[7+8`!62V
%E(1NTgKSNa'diXK7fgRU$KGSE.(8l5!4W6P#1*Y,:-l/Ds%WX^`$OOH!Kke>:i(rG&3(@<)bt$NG7'7V>LK$b_k.e^Rm[`6Kn1U$
%G40s[0MH9a)F+=8Ku>;E_[As-N/f*;&H#Q9LeWOFGt5ZfVWZk`>JX_mF]b`Q5f<!kBrr6(Cq!+6"r9)s0d>%?[37hT!n^Z'YSS@n
%,oehMMUWsk2H2^E/l46<Qr>leFs:,-W64Vf!eu]N`AFj(+e0o/XgrnD?'U;$%14>8<m>@cP&R`1_aXt@QPpVnCs9PdFK'e!)eB2-
%9i!N>N.PKe0h$?l"2cJ].rhl?&e(8N>l%U>Y_b]?D?gB#%?Xp=Xqs[F,gZS";R*G4idtqr1DD`N@,Y-gfGGPETKlq4.l!eqfLUJm
%93sqnK:8U'"p:A-"l)YAYe^g3K!U'GL,c3Cf;s[N:2`':CnblJ_[6_iH8MX1.2K?^:13-ZAKD"0PSS.%@7.:0WD"^V;MI4%7A6s=
%c&BMM9.4Tn@XrZs:tX-r\Eo!$@0;H@a`Y3Lnl%(A-clW22SeN[B,!1/iLl!B.kkeX]YO4f@+ZSiJ\EaA*%s)lpC[h&go%F`!ej>\
%.pSrETs1L*J$]q)2R"cA5#E_EpfT=T7CX\44ta+F`>d;PX2s#Bou<h/"::Q>:>SDi,]$Sh)$=!&YXp0Q76mQNaU5lX[1sB6j$r\q
%Ts,-@a9PV9YX(Q%g'S1Vj$@IN:tQ1'#.3EbKls]fhA$__D"<IBhN;"&78$N,ChTN$otH*rAk/\U'+,[7?j$jg_Bum^5_ptbY_ana
%ALMBIcZjC1KaeB*9IhN-+u@`C5[gE.Ih@7K7d"(hSL5+0'I/@D;63WP12KjQ'](GeXO+0fA:_Xq=0TM1;6F>Zio#D7*&_N"C`p*>
%61m!e_d60*E7gAUE7dtn3KueeY]]iGdBL;lRW)p[T`lR56%Q9!a-72b1ZB(t/tsRH!V0_ec!hZ/\0<pPCl*eh@JI,PJutH[c_ibT
%BEONF"bb,Tel51BJ[!g.,,HgBmQbs!-=t%A&2kY1*Sf!CKFR)X!&G;p)eW$C%@3iJ&rS)oKM@+$a0$Up_bp\hOqeTflq@Cr:ag-V
%pkE9,C_/Q5@L7aJ<Ic/sTs3L-kBb_]Kh^\4c>?iQ@08hI#oYWJr/c!08c]s`;M$1IY+`'3HP3[e#1u7=Li:8LLA;!1i)a%56jA[`
%@:=e?`DS7':_6sD_SSd'L`fSHC`$SW-!dd[@Ae,<"r&s@i#jmC`7RP*==Fmj)dWmV]3%C.:U3;qj8/)<:FL%,[hd-r-u:+!Sl7%R
%U2Xe46=HVu6FKokfH=\G'FL>W%@`tlfSG+>Z7O2+5K%_+_=in:?Pd<1#)3SJ:_;$#JmlPR:+X`,Y`[\!n4CU/-A_iG^2#E=W*Oj<
%m2@^Rpo$Ya+^n0HJ:4-VOd%B:VS&`/HiSQs?f'ms2%FfJGP27GK2'OK$;uV1?)5Qs)?d[.fu5YLMccba!kSca`>SchM:'^IX<k-$
%ia4Y#Jh-W^"tSU%0ubb&m-?"o1i)Gnb*tc:Q=+'0^Z;'7f+d-EC\S84>(MJ=q3lo\_!Db/3_4#T$MU!FN3k%<fAq3tD1Z*3LXkDo
%bj-DI63_^0KJ(5`)'OZdF>:F(pc2`=PQ&IMf2Uf6=lD9YXuc1fn![-2JD$uBf*XcSE7[qpKWib*.H$+X%Z5CgLh@>e'^D.VWG^X!
%a/i1:^g'C3i2e?Yn8,XY"6>n5j6RTrN,-R_5ZqsC\;l/dZ@]S5,!<PrE#gf8;%]tQ)hr[q.tDD-s63t/>E`-@[0##RP[oFCjXY<9
%e-/TQZ)qFklu>?r(C`f=+^:/N-nTD?.7sf+H4"F^Poh^&'rlBgNPIf]krBkc/#G1H%(kC(d[EKS\q%[SdKq5WKg#O>.=_sKE.qq!
%71QTc(!`8bCiE`2RPjoX+eGjPXJ)FMcG:Y5\e=(hi`OY_-pk:mYpQ;EL]F]7&kRjX0s'Uoe@A^j=H`d+;EU%/S0SkI&ZdEF0M!AG
%$"-L!A^G80Y=9'tB"L4M?O.0.!S/QE[:IK!GVoO?'"aFeHUXl%it`<>R]+<o<9.cr$;f[GU6pTaghN(nM6)%h-_6[\Jm'00WF1E`
%9eiQU&f%dB0U.-\W0l+<+GEjXe\J70bs`2EZbh5A?o8P;A@0@W-7Ue?'s=!UCgcp7ZtaoV2u)Yl:CgZg'W[Zj3^D.D<&NIp2hA!N
%AHI4Ni`$Rb&.Y8J<(@6,>,,%e/)DZseWbp-R&5I4%I?&BOY&;f%HU/)WenOCU::>_J8geh6?Ue@!")OsJ:?D[MGJ*almm<q8u^jh
%91_IEB"5&^S2q?E]IRg`TOEH[9hfNa/Bt\l@pr?d'eVB>MK*2U/i=5;!eFdZK@WY#Ti)C]J:Rt7PWJ(.&kqR!rcJm;3eL'X&?4pR
%J-T6YWG-k"A%BIOcBRYXd`em?B$(Tt6),cB'b'CY2!PQ`X?SBml6LN1%?%f<9'd!8l>`<e`]=<N,J;gc$:HI#ZYLQG"s$C9FJX!L
%?p67Yl3?J6Rip46ab!\6MF$&d%o`[H[E.7@T9birK:f;ME'hpLK;RD*dAI@bP>(I[$*#iKBt,.#5u5DGUA:4!\E1jgghGIa?;gME
%mPJLm!K09QVeL41#/c3#*0IY&#s'(q\5LQ8TMgA.:*Ys0YdP!\RPOjLkFP#3,(1k4?$SH`A%e\Vob).G_UTB<3lBP,-ePdnr]gfL
%^ntPH6_shfRg-kQ@VQWo)?Hg4.2JP0J6-TD9F7G4eO2iq^+HShr(7!pB#[bTTM6g(m2=Q`@`')7F:JA=^4Me#HN_6+$IUb^KlE;k
%!Lh<&#J7j@-HHb>0a]^2=<QsX'pNDV<,");UE%2X/f<'updIT;6;3TT<!sDbd%.8K`aYjDcrY0c!KO%/e`pHtGj4>ob".=RnBGBn
%96\\dM)D^u;3<6#f[=%uZRE1;_<`@iAq_el]i::s?ti5'A)!Y5UHcOA\:Tu`9aYSbXE9Y"&OVI'BFeK$X?`V_5[PA98H,Ss8fM1B
%.BQQ:PU>QVC5FE81^,3nP@!3>;a<'ALkOKpTZ/aUo_`h<-EU7bOp2VDD\GaS.QY`[8X^j)PN#6a79-Z^Zmh"l&[VW"6B]l6nVSMr
%22FjJUMCWhl3]nI&AGX[1IF\lXl>uZdWCKX+PAHE>F)WAKocK^QAH^nA%BoE!2Q+$AI3g-PG3#R+-$-g-/X66-;7*VRL=EuKpKU=
%.H&Sf6],fm_N$O%151_mqBap:JfNSLXa1Er:"`]TA@>Yc+d]c?fP'8&6-T!82&asU-YP?.CV_^"$&fhmCb*Tj^9!Ym*"Mc!!(@[=
%BI"^THil$j&CFlQ;n-Lu/`6aH6&Wb7p$i5gF;)`"Ko.4H3%$-_;D\h2Qad6W<et_4M5EQ^[9$e2HfQ=12,#it5pQsj8p&Za+9dU.
%Fu1qJS,.mT,.b%+bi#.Z407tG.<q1&W!+93d+[\n)X;B<!oCFRLSj8<@"Tqo]]jhF%?7Ugg2A*$P7%b;Xo]#+^B7/.E1s>]C4])\
%B_%*>8Yp'-8gaUH$49L&2W/5N0VM/%S3FiD-9W<XUC%?FKG?!/U^AYp&aUp`,UW3:>On#16;r:7/tOV/%4-04mjBT,l5[gT#)+CO
%Xt1Y.r]&>q6CEYVUeh4L]1u]eBk8R0)'CabDcmD^inP+H!ojUtRQtin195*8K]9qH!X&qC.PUZ"%(\ucQXN0IbH$)$5m(.G`Z%b$
%&ECEq8C4@S)\OuLk>H3u6'IlL\/P>.8Q*J8#+>f_C1!Z"'2B>N\ge%D+Ba#\+OE%nUDH/,m.I"od-lt]4So*Fq"N6%`34W:q,2M?
%+VWh8c`\u$1^<f&N:kj[Tg(d?G._DVQ]HUcq=jYgj1dalIe2hdlg%W%]t?JA3.6'K55rVDI/;5Dgqf=AI.W=Uq#<2sZoe%)j/;no
%Zl]e+_.O#QkPr,GQfFbms8:7tSrnrtOFRi2cNR/q0l,35KQqU&kd[qDdH^6`M=UG<N9ZJaJ&Vs=#EJEZb24+X0!V-;'l4-h1]WYO
%Yj7u$ck#0pQ]<.EfU[da-oAk_#1oJW-CKq:jMPLPPg;Xk@'IJkf+W_R!D/XB6_`em3/tg.4nMjegGjB0_6*HmVn_1#a>F-K**?TQ
%d%PT*ro&]/Fa3\>NdJam+[^U48k8XJF/6!)\nXn7-^Wm/Udc0`R?!X^-3h%E5st\\^U+Tj#;J&i4CEIe5eNo/j<9`A+S-EZ%t8K3
%TQF).Q/50_2qCg$o16@BSR])]7PNDrb>K%[^0N-MO=\FFd:>;&:S)EO#gE]ENdjJ.EX<+:o/&TLpm'Kr\EKV5m30F$JIb?,%e3ZT
%%e6hTYpf.^,aS%+pO/a9fLRKT-ZjNQb)s41>K=0!ci'!)IY%D#&uU.SX<$L1(ctWA:O598Q+'ZFFdL+4I4QCo-po'->gf;SEB<EZ
%61R2QA(,?$j2@KUHa+E1-ArQ[12!59gmVBe#XLO-H:`,YIHW_*8@hK:q;AE)QOD9!>@B4V+qri/8t6W)"8YTD)C-[QVe!-8;9lcI
%D=O0O[O1>i#5_/e+J<9i[[h:ED)plrDfc[QBWG?B$Hi79D+dcLq2JlIKSW"4A#:=0NbV<YP))QKDC68?*_FQ:i6F'i=>2,BU'D>U
%mDtYn-`LS%.@R$.a[0`Wg-.1S/I,]r]uj_R530,15gR(6Kl\eVEDdI,IMYTe?Kjhkj[C[^'BUj12^cQ'AXCdsOtW*r,2ouk]K9"P
%6;)TNPO']mTG?O?8c^Mf%W+5kofI$;6bq)"LSDbJXEj8`mVedFmD>'bm[gu5UR-*4*+bMiQKg6r^j4^Y&5%)fb[$b")r42R<&r`+
%(gFA4+Dj<a7sCad*\"c`0-<1*Qm_i%5P#V?c&kMXl#WQjd.Jg_11Uh@QGal/JhBD',-Ys^*:lLDW$2o%]d[#2^klSIfJl8eEe,u?
%n)E]-LSeQ(a9q1_(U)W$..P;.jsp&CT<OA/PTECmOkj9SN!)<kmO--,GMhn?qk@H*<h0WX8[o"gq!T3?Mo?;jhfR3;3BYFic..%o
%Du[sBJ.GI2+p)HQoE]P#ds\CQ"">n3)$&bOoN8K`;S<^L5IbcNb@-GqRS%U7YqtiqBlnY-G]LVSE?$oKp_<3A`5,`5aC\:dgUjn:
%<SBo?l_W4+^"sU[P"4a7&3,KpQis^^kLClbG:IoJp@itJD4J1D,6uf!N[#KE].nmt\BNM]r.u-6$RI%qJV?NQ",4($=:fU+Y`FOh
%.3H[.Q-"/imW'V,R]UR23S@9i]1-bFpi+J>r<mW/a^(YO%Z7Z6=5E?[7amU8k/#r.02g#iZue`m.ItToo8Q8`<U<<<JMo^;*6de?
%Uj_M`QpPS3FAG+oY#p%9[<H091p5Jb)F@DhJ]K;f)@]RHdn65@6NodH-q%X&cH4(_]doF#9h-1M?*MhAoahOC5oXGu\jN,lif+6q
%O)FEpKum;-F*"cPI`VK9NskL?Z%H10l*4_]:?Xm?/EQP\cArrsm"AS1YgI#kYpPN/,34I*SK=<J=9t^C?OI<a&mLHC`2$9VaL>AS
%*Cf7?)1e0g$4QOj)oGkIQ'.Dj,ndcTH`$42`[1(!'4Y*`";d=7D/P"PAtLl5U`rD[[b=m!EU5-gA&"[oM7fs)j(`rnFX,b1`:<us
%-?DIfZO=.P-C7mHG5X;%;fOE>Z&7HfOAU0BC00)Nekp`F;6G*k`-2^M`T$4$0uSJnoYe2"b$>dcLX],Q)D5#7Q;j-ZP[D),3koLJ
%NqXmPpJMLh*5e*$H.+I?/;q^eCY#i?o@l4E\D-Y!On4+Nl29%mo=!,:NLjF]09h\-9\MYYUCp\#NtjG=k$`,$`)=F%.-E'ker1nD
%R>J'OD-4Jl8h-eV]egMXT.9JuW`N41nK!D@(^!$,D\>\pg;2-loQp1Jd6e[d2O](dJ4k_X'qno8&&8_XYn#VKH[n%+Yq">31%Ja=
%/28TYM?HG3eTim&*jl*r;@.We6PP7$MhIP<^'8$sD)$_:3ZK$*5_DAR1R@9s#aL5H+Lu99kK3mn?U$Zdj?i)[G[Vl%#96nDT'bem
%8\QPZ.*-;do180uek",RfN_A.nT=DNeht]uchZ5M`kj0(hDf.MNGLbAUBTta0q01+/p%?.-s4nG8LG1'auh/PFcui?_k[J!bGg=l
%(=brG@C/>m6Uu\39Z1urU_mkpF@R!!qU@<Q;ZX$pQAjHuR:#TE0sk[2*oS6t:+<H5WX@*9iXBjT<nBJ\`Ynft?H&Ubq7dBj[@gkm
%FkFJf?MQG6>4sE"'&@k?Qq*Ha"R@Mae.'8:\P5bUN_;(gf^qh&CeU=_)dTkOZ:nEo@!AmmUC4bOWS?Wam7jF4ji>bt9lTBU!u'mI
%]=gl9@Y'<qV<a=sm=s']CkR"l5`!OjdaU^5=:js#K!VSc`@WG9XOcKn`I/+E#r[Liol>"OfaB_6S]>qc/J?Gu6?5eUcq?S(/OjGC
%Be#8[2Gs#SAW@<GbB6,hL8M(1A_F')XaFmabHXM3TSResN%N3>6^CVMT2bV^;r/_k0P;P$AAg:fGA<L3:74g%k[gtp;t$-Fo3#[7
%gFmVW4MS!5Z^Nbb.<4%bmh<r08TU@.UWC#W,Se$l(.r=4?"Z8OT>%p+cU@t,Ecs:17rG=T2eAtt^@,61dp!pB[>A\Z0WPB-AQ'a$
%K[,q'*C&f%9)D4YQI17oa5[ar=_\=]5*o_>ep8Sl're/Nl-,=(d#^B%YjJlk>g%Ln[lUce%s<f.2kX:QW8]<*=)XrV&jB3Uqmt6+
%*So2*]qSGn*9Qc(l#<?g,-RZ,S#0,W0W^dumQ*!G&]I+7$'$\[gtB#^2IOSq4sesP?06Zfk9Gnt=oCYir%@OE!;`qQJL[iJ<57AY
%T'`A-]9:Bo6m)OI9!@A_Xc8#P_@8@[-TG`66nDq3biYb&,hiL74O(EmT'cN!?2DX]Zndf2mMq[T)M)-n\4S&L[gSsh!@+kKQ\i7'
%bA;`(8OTX0fT3kJX-DgWA4W4/cbq(A?XfFVM6TiOgu@ZDeKAAFU.;S)6^NsIGKsYX61s:_gduWlMO,!c%E5`A+s3)C>",Nd!;N?7
%*"kbSU@A$6*U>d+iGDZP3m%;36n`"lX"<BT.30"Y63jtH@MV%8j_OV9So(2*$(NJ69QNfl-;MuNQ[''L'fe.L\r`*e@8rQkA1CWB
%85ASUmL=K5=]A?#]fh,3R8io]=LsqLDp`[t,a&qnPnr2FZ8YoA,bg899&0m@fhAtG`"+%]'amGi]fh&Enbg6W$:s+`V8m$PYrHV/
%YTrd&o!U*FEB4bWW_1R$5n[/h<\?^MCWu@#Hi!,:^PdJsU]DKf(QfBt7>WrM@69Wm7me))$.R6.USh_j(0;r@'`#ni2MiXU!Xq@I
%A'fpn<Ae]F=L>>(O*?Q!L.=`cWQe/^:.,Ok*RiQV/42gDG8u_ERHQ&4Q\eJH#3_qZL`HIYR-hMin*eg5bT;e7Hb8m^H>=ri5HAu9
%:/u!YPf!Fn>>N#D]@2$O'AA&<OX3J^#_<<u<%JWb$5'>mql:Qb:d[.@]6Dt##Z"aDBW=3Jf/\P,Z[:p0!:3W\,[Mq:]^_7?N*^p;
%d$:P-YO0^$5SrDflQKFBU'ZG([;k:Ykk5j"/66L8#"\c_94^.9"bAE\G[lVG29H]K+J*sbX^L9Ia1R'd24\Z/H=HruZ$D7V6*?Q6
%c,m6uK!>km<VE)#%u!cZ(brO?R-WIinrb>kCc#0aU.+djg`F@RGhGE4H?+pLSgL4i;*WM@>.&@1r>jcJ;L#`/B$i)@M]\X1m>KhF
%<3!>82M>TA3Jc;#EtZ'*LX9Tbm`_H9:jS@fONa,I6M.?mAXtZ6TdeBIRRH3^<Zf`[KIDR:]%h8bhD'[43G-:P7f+ss1n_I^FT+s%
%PQO1%g2+5E@d_sf'HF)hoh+pagIb"?6&Mbj,[?%"Nd>&SYTB2e.MNh0AWegjothtn9[VqC@E@3.:2Q4@Gn,s^b<((2]h=2%?%qoT
%0BAf</hl,KK^$tX`Z_VV6KtN,!^T:%IKCbS?.CnKM2>Nn37Zdae?K:W'W1]cT!o:D+k[J=)TsD;WY_`mQTa:kLf@F.W.1W8lL^5J
%[:gpF"DJj^dJtu;1c%'gk(*X`!erF$gE`B21.PBhl9m[7;MG7d.MlC^V?3/(+"6nKhlD9aQt>"o<ImlfRQFUKM`l.T!&(A)\>b,?
%P\?S;F>$K/#qMd9g$a>mSI<\c5>O=Cr$GjoM'bfnA3mXOgnF;UA<r+lB-SOfW]bS:-gJc.PEs=D^HP!f$i=4iPRdU63=gMDiGH.s
%/L>aHQ@<V1H$11Hs%TJ`>oQ9?a=&$t8jn7bFL%f313%i-3NDL3pc"4tY+CHh@M0>Af'SLb9LP\7b/&nYiZfiT:(/k:bHl-u25r@k
%.pKC-Xk*`9h9W?O+1uIuQ?@N3qiQ_@88>[e>iEmrTYC"PB5&6q;G[L\M<Y'cX$U&b!,>Ce`CiCS?d&Oi,!qNt:tbQ_`*BU,[@'ak
%H]*1Q&7Ca2l5-47(tkdXIn+oLH.Z8m@V%)IIQ0nY/?2&md7M')=Ym,a[F.me2]k;\ms*O2?2/R.B&t/d:it0n2A?]U-`pE-/l6:a
%ZI:;7EApai;B]U94/gDK95pbM2ffKD(-7-t;.[_"66[c,`#&EV7QBD]\-R;P`^)Nhj^U&?n);.?@d=$kP-:G#>6HBWqU%0TXVD&a
%k?_B$Y<s%*jn/(8&9r=q[SUMd'@A86RgY=`/$!\FCfVm;WqUg7/B9V7pi@X:1cf"thIY*U&mpBo^IT^j"d[C5Ff-+2l.*`Gb_@H"
%Irofm.OQN(M+B1r27;WjatBI)qkD[r+g-Zc"'*1ffRgsmkX9hPDm9mC;$SPWR;XFbY/to7q?GkqC=#F5)XG1-Ff5q'0%3e19C+*n
%:.7[H<)7R92IMu1j4$kW<"]GC#kQC!C+7U^KmNIG^2K):.c&iL2\lqGdX#T`jOhc%Th-sF-AJ\\Z%t.\M0IN<&bC00eD3V5Q<mq$
%7idrMa6?@Z\huf--0n\iF'f\`=q9^B94CF78\1h=8r?Lh4CIT>XthE2-%m<U;Dti$KHA@V?9"d5M*^bbOpZFo]\R<f4#\MJc1"2[
%T/;O6f07CV6,]G%$i&t6?Mr^6,2QO+Qk^neV3/<g(S)G1hdX0CIh:$ZD=n)`Cm&F?.f*kJO,F#am2'cK7n0[sZ)eSR7^L/sYUnp&
%b!>\nCi3PZSuYNRmVt!>Eo(s7%UQ=Ma37PNPW=>P0!PX,CGfhl6VoDup%^0'0SSn\oD,Ec!=]aGh4fZn<G/$1/EXnt>l0*lG/mYn
%AQLr>2M,<O@a]P4@*q;@EgN2db%Dt^m]6YBkh\U]85'_XD!<(;#Nq<-9?#o.JUjo_?5-\:ZJCEGMr6Zje0(oQgtrpJ,F)6h6f_Wl
%CK<;JZ'#K(\'m7Q'dt*9(,[OP$_jQ#F:6ttiX`!+n5L\A+hU/Y<O5X:q\/).Q`RemjD0?Wkk].R>E!@c84f5LfqNl"q$3j,d+(_1
%@L375.bDQ9cbq^VI<!IVY*108\'1)*/Bi5Df@2dJW[`38e[!B@hkjj`a_@emZVT.1W^N4he6Wa,.4<QHM&JB#L1aQ2"'N`C:um<[
%qG?3]4=#0"SYk"H%BSG0AuhZ'EWX;H`[Zk-P#KW>,a5lkfrSNbH@U:=]!G>+X1G4?fB^$4(R%bH9V`\;I]jkXBQD6pD*0X_>=fUP
%W!6H9lCWp1_,6Z1`"*DC/-d=p7=^an(b$*r>)6AcNO'*18lWCX5#a:;"W+1h+gt?@b"(01HMX1gCXni'+W.U\S1H^&]>uKgW9[ST
%p`gGN;<\oE#3j\hn*`'$RL1B6NaoK45jHq%!_JfO@rF.:Bo?((UH>/&KQNs_\eap2j/OXsPAf,JLSPr!&HS_4hBPCB>JFY]"hj>K
%".!g_jfB%*"_F9*!pdjf$_ZYTG%OrpC$%K&I\ER=&pj6"_'7GKDCV^scs0"nl)M,=>.Cu`#dM<C^d8YW"=uQ$j=Fne.8!,l'n;a$
%`kk`DGrm:`D[DE+W)A`-/mcau>3GXK#+E]$MtN14np-56"N[/1!a=]Q1]gQG)OH!f1=h)T.F)b[OtE\n\<Rk6bj$rY1H_UHNWeBP
%bVpc3b,]iq`RmJ)g.-t<Q2,e;W\f%pQ=Wh0jNj3ap)<*O?7gbhaor!79``_94fCc6FR.BBUZZR#_M!,u7?fEfI6s2q,fGUC/G%[A
%ClO.$AjRdE*Eiu`8VQA%kRL<M*'I*.`U#'Rg/MVIXRSmd4@un(9dqJH+YduZLcJVN"iG!d'+pe8I$/#eViQPq'Sr'OK.<#i!=t(C
%:[?4EMqjMnAN3W>MI.@gOB<SI^SaURi`RX2LggG:<(#Uf<P]Z6M2A&c]n9NjkHs[=$p8Fn5k?&&-+/kb<FY.T>#!SK<u)"8NV/AZ
%<[X@?UeI17>J>0MOcYuB3Upa(Z_8YQcHCGY5Bppn1u5/m$g^UZ1Xmh2/ifNaGkWPn8WZO3S9Mar\!n*Z'3p;>[qg^6Q!s'+!VRp-
%_4;13Qr/+?VL[+X[;ccp:h/S!_u\TI5rD;5@$A0D5\c#7d5Q&beV2^/8m8B`5bGQrJ;lhMR2#*0RP\nZ3KTFm5Em@pH7?=0Ae3G_
%D55'edF:RT-Y+L:%B-:u#^XU/ijkJn2R+"K5-K2,6;7a2#[rl;Z6l5To0O#DY,r6%6]IU5\X4@QcKPmnB>\AZVfuPa!T(Eq,!_>Q
%;S!2?`(dg(hOHTb(J[0ESg"F'>L-&2<MDoQ&mTdhaElDE$%aL;]GqJbc!Lc_MRShnp>(qo0#W$kP%b3+@r'E3QC!n;eRg:LhR/-[
%Q67YA/++)Zng"WC0iCFmH6=FW!-XXmOHX[[oMdY-Vi)so;;tOWV5r(\H?BT!L4bb_"!_J)\77=a,RDN;4rW".M-]O<J`<mTeER[j
%`=A+SN=;eGR1X&4M*Q2M&CC/GlA,V\]6poPYV0.VJD0bWE@iKFfgGE>:!ed"cjZmtSE0<#=*:io20#/e3mRlYRN2g'2#Rp:"cM4"
%26&^i+`PEkBB<=,dhf3I251pgL\7MSCp"Q59U_Z&K@rW"eF>;"p=1i(C:6\Jm3%\UB<VN?+RZn$Wk=4:ODK2GdYOfckC1R3lubr;
%)/$ZsHJoDse^NAe,'o]MTl=*rkaEP]ea0;Jc#dlAq:7D8&]*5QK0f]/2YA%-4_Ya3&RQ-Tqk/e(RXdXT/YU3ZTf3d/W<@rU1sW2e
%q4=p2R$]4&8[VbmcN*@^\@Ar@"tikL9PL$p+@e\?%mk:gZI5m^gmkt1_o/JsHI;M1D^o^lg5WBES&m!C%qt\]ZeZ]eQ7Y$X"L!fS
%e'eo88E@.E/-e11"W$$BqCV'&/&=pX*o;")qk@$9#0g7$d:,V&GP-YHW=dmFNR,pQe@1\;&pY:[CpK:<6//4+'(_&,0g2isUbgKQ
%!)(IkfCS*].72j%?&^nC9UMoMp5UC*e&O;CXN=XFMc57N6hNhV9b%_+:!6J;2OJ-KF@oc](f^0e:A=G*nY3UP:'4W7C9GQ/&dYF;
%ID8rDBF<4AjqdR=i*!(I*Yi*3Me5aE%b?1iTo%u)K+X<O.3_4jW.TcrCh8b9MlZoceI6,Fhne(>,)['@7moubJQP*Q3d'TT"q>r\
%RuS3DI<JE5Z8=2"R]Z,)Wr*'Rf-+V1&PVGUT!up?^dU"5gOW-5VF9t)1UV2!ftSgS]62phl7]+mY:d&W=,7WUMrY_]V5\1OEtAKg
%B+SR;W9Yp1<l10iN^[I$N3DgMN-A5L#m(_jRU.ggji-g?BTg*h%A5\\"q%*SoeVsE<U0t7KJu6(XVuK>K^"Une#kVu#oH'KW>:TX
%bu?_)CG_BGCos!uWK'/W.5DTO3-Ien;/hrkbd:SZ1FRsQk%;"%U[mSW%,J^0i4gs-GVZP4=E[5(<=4!plHV)'/<M-7Q)qoop$U,]
%_JX*C;(Po)3^lsbSq5Q)MZn(=,ruXc;_b]*jO[SZ.D(sk[<OTmn$<X,dKLhpG!#kr_P-B>auIR5^G%b&]V2.Je\?(V-kJk4/IBp4
%6e[ZE^pZ@+M\&3)AsS]R=7=Z3L"I%;N#JS^bn#Ia=oC*-R+<lS0i;$)Za&^3S;K,Z)n3TjF#Kn`TJ$D-S?975jG;I]?#D\<a`_:k
%,pHg,aQ8k$]LJqKM_:NOd;C6kqE]n;hAWR=N&D9M4SsB#UH<2<:n)q!)/*BSY?ghjaFHM+KBsdEo1Y[g^$>8*2).E^/;5Q,_@m,>
%g8a9pL`n6SQ'^^$Kf>JhbMF!t,X!>"7er!1,a.SU7>upiNha%WN<)o53o8*/@O!OaTr&M5]MN#t/t=n\I#aY_*nC9nm@oGL@\n[g
%=V"f.!aViX'_>BK.H!b]dk%;77'5.u*Y1\VUd19JD_'@iT%_+OU(Ar8JnodsTB=Xmgc._T/V+I;?f\)>?mA.'>R_ZsIJ/T7il&)G
%Hn%4Ga#"T/P<QTc,e[pk,<+1HOFWS'A&9Z*MB8E/)MM<3$W;K`$IgiM017m;>u$b,+UM6AQ:<S^B*.%pg<p._ks,AS;+Xk(/F(&(
%2IV5$=NkdC5cWL'd5s:DV6Pq4Q6`V;-_W44aOSlPU7!M09PTEB";]6$kqghB_unc[W)GjI*fKeV/X#<0/'5^\C#cQhd\;L\0,2O<
%n!O9/q3-Y>YEsqod$hFHP_C1/g`heLM,e`[]u`EK+cg<."ljI#/5OX(9T029J<K3G6T&K]nn5IP?be&mZ'V1aT3=U^\a(18d@6Ds
%=`uRaQ>6a"ZI)lT$!$Op)qC`A:>8\s6I_BsG\CN+7%R.uFtB;cC%CUM"YCZK5Z?X<\ZcXN2=8AVT[<PA;a/l.d[`9iU8)Z<^WiaP
%Mu5B7=+ba)RnEsY@:1G,ATOfudOPD&h3=B9*>:8.D"qNu/fVI9ZfV"NW"UJ^Ie6C/$?Ck&#KI62A5OX$+CG;E(du&+;GlhC3pApr
%4::[4C>?MVEY1LY`%9cp`)1g2Eu1TD6CerMmMlFlDV=#A1kfG!%)=SZaEkN"EoopWc-6V.#WIaCX9>)L@(1aOPZ\)3ML5'R'*"`l
%c].3"S(a.\#h2[t>raM%]h/fLJUC*V00HU1Z:&5f1o$sX0B>Y<,%a3%im\()C!&TBr<qpMk\_->:*N`Pr`q?Yf+S8j>+RA_Jnmsh
%"uXYrY3DV/.o"AeIWhC$#3h@t0sP%:M(i[^1prs34r#Hj(XoW5-g*:j7QoMOHX!2Td,X4[VT,a=Sg_BPBPD94a(5KN/Xs>=n2hR=
%'V@9_.^r.^jH/TM^jjGnEMR-);N%%pC@pr+a]OQ.gc4\b3E!=&G4R9F>b#aDNJnF[*B9=\Kc(a?'paN//NLH<e@XPRZmJ2WLEN&*
%UI:,4+X.3ub0Qg$bS&_n7>,:Q!7>%J6m?0J1GRFW5RS>Y89Bh"%#8X-DH'e1/f-760bMrBq!4BcNQ-7<%l)fFBrTppUd2k/W(8qn
%+cqsk<Op'"1`CRNGC!"NXNbpe4In(&!QYX^=4i;LHbTe,;mj-s^aPZ"!QnU\]iURi%Uq;`fJ0fh>#odm"G9LE`6\g+(KGB"EjaAR
%0.')Nm$!c!di%1tc]7_Q(FC[C=!?;I5m63X%1S7Dbb^<U&0HLu4uX7gPskpL*i2C;"(h)D6Xhr^TB&<&JKcIa>+4%`mn7'5$W05q
%4D:6aU%WMEM!44SR(p1OXH)6qC91<#%^'P0;1oYE4^#cVqk4=mI]?\2:Vi$+<^0inIOQ,3/.W(H%HdVRN(+@):iI<9ck+B8_#kZ8
%_jS0+PTcK"A*:SGd[6GckeV%:SW?q-.NCb%fE3>C%%gL)=EIq2%8Q[NU/uHLK#?*t1b'50&!A!T:TT[?5qd6a=W2hRflGthRq\IW
%J1W\[DeT&HM^ckEWOkZPA<)nGUBPoIfi<K`'Tj8'%GNpH*1p@DM=,tM)b>QP,6]Q1e7Qh.eN@'SGi>sJ8E+b\,I/8(DKNI%0F*3d
%RAc.._Q`h,b]Y#2Ic<$r;"=[0,t>((P-?98&&GP%C=)`USG[9@7:b..-I]WI7j[kt&[>H4Nd.!XPhB'N#E=)0]+d,GM_nJ`?Y-%r
%BD3[e/-!dZ:E5J;lrLlKBC&*leS9AbhRD0jAg8,S8k7$nod[9V;W@HYgf4r/TQc<B@rlf+?*0BGK/&GZel%!>B"aOfD8r(]Vmg@V
%<3n=l`B[1ec@p",7nTE$_\/Y.`#7Of<@.u`paLU0=O.=k>POKrTqGU`D9rbl,9r6/VbEeN$(Wcd0(9kO.T>@qiSZ;'4gVUjH>k3%
%'c'c0P[6b4+CAt#a[Q_6q+ts9PV&2>]AU.D)-%+k<B(+2fA8@^Wb:]A#$hJP\;>afc/r4fZ%docoeC7OA4-<39o,lLdQeCh%;i8B
%R/4P<ifhkUl9YAP1b@\Se6$T\ML>d\1b(H*N:S<)&4X,;p;@fZL.Xm3!3)]R`GG.';=/<1!/7aqMTK"r9llL1<6!)>*os%B3B:jF
%b!Im-I]SqDh,el)[SB]WNJZLM@\#'mB6LfS#BQo5<3J-lG^VJ0-fW3j48E?9:5+\);`-$#aWq]>3`jdk/"`,*M_+"nfX4;N?e1Ue
%_I*MncRdNF8Xdun8S2VHZcHM"@9r*JBnW)K$;r6'B%B;@=Nf3P=+CZ4"Uddi<=Sp5)D>(")M&?k"c\!I=@,]U)\_5(BP<#2cVcbA
%iabg$P*X%Ti/o7#@F[]mbg""YBl"8ommO%G/Ir`W2>:3^han&kQ31RM0cIcM=nmf/5-\.M??`4;SFpnQS.n=Y/bMJ"86Jie)R!##
%ZmJ*b2-)G$.XH/GFf-pGjG'?YIn$f@F:^F\L_i(-JK_7O)SJbm&t'r`F$`RNmX@r#>'($Q1_q/A0Vg1M4gd]B<07g;:?O!^C)'tp
%U8dO_.WuC9eIPuQ<\Npc[T#s<TH5Eu%OZ-jbF+?K*)l/h`P+ANJYQ[0R`cu.(Q-\B-l?5lN58_#nds!h4GArU)W8lUBLH)ZjN<5k
%`=M>I)N5La;3oqak*>8D`EO$Wc].A1r:Uf+C'$q)\3%I3;1tt+V-RqN>$S#s:M/_Z=jL/LCL(3K??9WYdF<"\ddddRe4#RP-#sq_
%5g:5<@WJRbR%S(BoeN-MQM]/keX)(@.V)E'/f!i=QD12Nr05HQ&nJ.[K&d&/,,304bNsT"9S0&i=79OkZgA^FHrsi$fna?N#$%9H
%MF-Om1d\3W:a3W*2l$am>LejXA0R/TL_<u.3(]<q`\T8:'GiODAijo=j)O&%4T7MaRnlE]]V?.XnuS>)\kH0KaA"HhS8L'=>ugkH
%fU<XY:_pNf?C_:c.hj$R>sgj=q0#]=X)'%mU)K),$&_M0)/sNCKR4oC5&ON_Y`oscZe[fkZs61+cDX5-BJWRk-X#@T@RANt,VnDH
%XunQq.M<0h?J0YL8\G4/JgDp4Hd0+Zm1M_aXa)K4_h-%1b3&5aHd#EH_K?i"[hiJlNhs&o(X7:qYJru)(s&WWYAMBd(4I$;g%I]O
%rP2c;D?fDY'D3ioQ<.-`Vp&WaE"1>DQ>5%_?&:K?>[@D)`ZP+Jh/DT4+^Wj0neK;KgX_C:<[V=sBpj!1L_jA2Lq:D2&AEmi]&X9,
%,>FgQKgrU1KGTAW(bJ!(o@8;`oHm.mFKd%6GaV?*P@f"(Qd1OWC/G=De0O+9C.(B=VBKV:o;s1gkRbb;Sh:.m?;.q6l(Z[g>/^?&
%pJR`YlQUd0`^Tf;M?YN"1hRq#[IOKJHMr:6RZk/('.K6@!ABCJ0e&RM$)5#>U8/_A0jAUeM4UAaFiPs)&Oj#1/JjVPK4[t-W/G.+
%[%R%2]/HhSoMqR'>B<n`?g'9]UML*GTG&%L^g8uU4etZ;V4(\_rohL\X8$kYr*HBbWh5WP2dA8c^6OO'W]'dCM$B^:5lsd=fiq;`
%2#`X*-u7V/i=;XiT!09RM^:9Z!TK3_n7%RRqF@oc&@96SW#beb`bn\K6jtcS#XdX[^Dk#\Y&P?-(+#u+eMG?1:PE[H(!h$3&@#Hr
%U[7!LA_&0N]Tfu2e3d/%WM1p#*lC,.UcN26__N_ojg`A55UqD_;q,FYGSZE-$rpeg28<Q?nh_"raGZio\sejnb]-K29N^NGU!6Fr
%1Q<_^R:]:uYL+^DA;)"aQ8VZVdg?]7BaSC=2%5<_e2n*1bq)&?WZdWuhLID$i+*.c\&YrTfYNH:6>NfdXTiRg*LWi["-J]fSoHAT
%;>8]e)MdMl<LBT;#nbFoRY<La6#Sk,[02Me1*T<0U:YeRif,D2f`d;gO6lBk4DN-)MAAoRaYjbM+"+f5Q9%ItCo3eS+`#kb,%ZoZ
%9ASl)T`o@oiPbjEZ!$.,a:fdqOWT/U"r"7W>!`raJV[d1pP4YpZtpj6T$;Dpi2r52%[rNcHN/"e.#)X!,@e@&B8*9S!08/:#pl3V
%;8M#c*%euam0JBVJ0i`Z+NaGeCbCG(8t<"76uRp]Ous$^;E[Lm/?rq7<+H;o6$*&','@NYXqs_VeRccZi5(s!TdV@!C9Y)D&=Y"J
%KirgMcQnZaVQXMBqp]E0A*fIHgn*3[Qr[bu][2s;6NcQ-)e)!/k0tO`1\B'XrQOBgLA8dm">5q?qC!N.=cd$_<obOZns$n(8\gXr
%fJs_,M%_Y"?IuS=5glGMW[4CmQuKUk26cmVROO&Ek&I):Dg4QOW0)m6>p=>5$mmIH6!iRGj^nK/P*:<9cPr5.:NP1mIE=Z\1t/E.
%:?G]cWYf>ST("N[XOsG>kV4!nQR<2_Sp7BH`pdF\'(i=U^jUdPRlU<ToJR*K(-#EM=12i\9"4\cpmr0FX=+1u^iV(lO4880F&44/
%>#fAPD^L)DeD(ko_6f6RC<6,q.]>k&Ru25A]P9l\eodjP"[gn*g+!*P2c#b?HJY+.MoG%#oPN&Mjs:?q\RYc=@C/QCB-tnpH#H#S
%iTj!i#'?<O]i,Rmm(,`d7,I9ad_"+78U]R:T+tKEDRA03*8(_>C%*J9X5F)c($Z/@%rM;nMnW0G2BpEh^*0Ou'EfF4MdUQ@4Ks:(
%/HK987`2Hh`hS>B=_O'@,tCE`QYI3-hh.n]K.)s8^8oDTd4ap5h6KL=CMJta;^:YJA=\TGHRhse?o+(S>)r%8`kK!)L:,_pkNG7s
%l<\<u'k<]d.qhMujIujM`n;LghU[6i)c+BOm1JhS%)o=jr9E<p0E:dKT7?\$+50f2]mTYRqTZ)0rcJ)7p$),qW0sSkI=?>7VsC\4
%f4UH-5'nXKkGR4/>qZ0Jd4[]`*e3dAs7jS5qYfm.c::qXrSlH&o>/2&hnK$TkjtjAVtg'HB.'n/XtGd=Isf;/4urDg5;(57`ugq5
%!FDCHrT<e;X,dejD)D1_qYKu!S!3<dc<jnM?D9kJq"5^]?dCsbs1J@$qc!F_=5LJpIXLYN01Mk+hl[psrV6;M[//bJjm2C'Bm+cL
%_6(]WUtrfQoOPZt4o=rbf,J=s%3K=G='u!Jl,i8S=)T]uNc@7tqT$52p'iq6?SB`3^Y1BX<U5F/jd%4)Ds#6br8Zb5nED%/qHJ(0
%DhCLY/_9R'=N5j4IHB?LZa5u;VFHPgH$Oko0S^`eS_c6L?"9##hct[0mVd&mqWc?$(9XA@+)F4R?%2Ni^-7!gqRc(Bs7b[Jnmor7
%hIupcPInL(iq;!jPPadJ`<9PAh-\IQ:Ub;c<U5F/>^6"E0&Kq3n`9B5h`"8Eg%_9'7#1*Qq:IO%n"(L`p!.8SkPq)MqmVR]h:M/\
%?f!ZD`JEFNm<=r\SR(*]-!.Pl[<eeMou5INl]]fT?QXdth:]o9)/Yhh_p.B$!A5^=p&4.Jna!7A%9&Zh+8EL]\@VJ7lIFSRD9(`?
%N<8,/]*Iikhjf.:nB#"CgUYGm27pP6pWq7RdU'97CN_X$`5?A6)[m4'`GYDa]+*QVd4'7r>T]"MS:?!1p1geb4[,aP=7-"Oo@^0f
%He!#;52;C9"3K:bmNrh,n]s4Vho#5!Y"['7;=W\-R0@^iXR]b]2G_42PMJNJ>F565S"ta,gIEa6+.rRPr8W3(>taalO0:L"o%`fP
%$m#ZQPMcpu*rkO9`daV>T?"^=N'A;pH`$RXbMm<TLQh$W2i*70-RWgbhOG[+\O0DW+)4u_^-=j:19m&'o97K)Bu@;idt\T5?ClUe
%G'X*^^,g#dT,tcHc'p;Jb+e8j9l1<tr-4,1lM0JaZe&i>hm<orl%:]&[t-!BgpBO(+*)M\Fdju78)O5)#64*[>.8u8e'3WHI8,9(
%>:_\fmbs2S`RVZb@kFFFDj*rA+'=4W^-'$[FS5!n[f?$r]uU")RQ+I5s7H6dmuF#j`a?2W1LL.Do^?G51nIG(b[pC$Rb+uBpHH1>
%6eX2BJ,JHZX0^j0kP*;;[s>c9)p3?\oQR#VV*D])O)$mJm^DZ@loJA*)_uW($Z*O<*u,==@+fl`9]5kogWhU-%E?Qj]PmV3F.bu5
%22C5XZe+)?SA*j#Hi@!ap+Q]&%>tn//5G!f3G`,9s7q2XCs+!401]J.L\,[@aiEV$GgAJ9I@0arY3BSsfAE1Ja*^Dg/rsK16f.^%
%+4>qW+U;ZK6[juqq[*+\Z-ME!%doO?CVKN^5HNb0]Z.u2Cd<?^n_S2spD`T"`d>Jj>9oBFhg"TKhYW<,IcC[=RQPo2n]S7W^3R%2
%Hfre\JLBGbh<aS+@L3!<UmY6KLRQcUmC)lrQ4<cfc1O"_ES.iflfL:Ampm#;>[>'iI=/SZ-es%-Tk=&Zl1t/*&+?+L3FN/O#1$&I
%c8YRpDEb;p?J;gQi!ET.Gf`2GpA4FRnrn&RS:5L%q=<n,X&&_DG'/91qNL6oQ_.Mg+(*mjGM&D1p8510l"k9!Roa-L)Q'i8Qe^GH
%[^Vmrm:UXG7bQ^94$=\#D)BTjg--?hCE)DXr*O(QD`/br=j%%.e,8>:HH4DkkcfR6O9:%XF<mCN;/U`q@>heprq'aBMV%<j,Mmn1
%iU6I-'E%5^^)s*CHVJHCnk^"LOmFkSG1#gR<%Ua1dG>gKre1b6@V0&dMcaCqJ(YcIp4epIiFQqPfc+8kL6oU4AT)hhC$4XcplP4S
%UqHfn4U:P3W:#`#K(RR@e=WU$jh596o4F7N@)Xa=K'i)9]?^Z+cX-Y9q!;<cn7,u0:CVc"$]`"DW8aN#`=7a3lTc1hk-,)jfO'X\
%63)?h(Z\L]EnZ!,n,2:W7rd8AbAiU&[(dT)ol>G=rq?)rMtREOHN^7%g87%uV#mii-F5ApWY=.oFKK3Tacq#ZIuCiCnlK6V0S0SR
%Ac+8/`XX5,YS?k>JdT\Q,?F7HXr`eAESFY\m<Z!4'(k2J=D0XX8_q9j4Lh?ck[?-I^A6pAl"_4:p$'YZNp'!N':q`;4Km-G\99h#
%[$Ou"W0\#C6#E%-(;\tkG0/]10s<gUD-uZggY*JtqIhk=`qf!!$30/clKTZcoD\X=kJntMq8iZ$Y.d+a3IC_b^UqBXK$BA2dWr@Y
%"!=;qd0(QQ.JbK[s!)Kd4_^<r/#V$BU#n^sTfn?uqRbdS=$O@mq&0!lE/j4-:u.m,rD,hVfjjmG[M\a<1U!E/VV_pAD9Cf7=3W;:
%1nI$*PO\j_V;_]FZd4s6D[b\5_!PsJPTD^9c?m>5mEp+N,5GR+gC$II%._)*[$QVug-G?LjS.Isq[E%D#5LH8r/kuNI0TLBZ[eqh
%T=E2iho=#d2E>R)PN;ETjA.R'mP+uTq[7G2VmQ&>j$&$AL[W62!r;h5gss%,0j9Zg=qKqA%fVOtqgOso]='I:k!jb]lg[82nL/V"
%?f#%;rT=%MEXO#dUCeK<<k7fh\&%D%p$o*3hd)lR^GfXO[j2pKB`CnM]=e""p"AYpqn,q0$kR1JQa?9X[4YL^+&"$9+OFB-\bP4,
%lf5`uRan_66VZj8lf0^Qo?XVc[TJjk\T^fm\pqf%jINAk[lO9Qa4%6K&r?&p)>X0b:-6eBrIL14]B^i>]R-ONE=9P.L(?0%MrW4@
%#4.\s`$LMjo@_kF[bGWXM'g&%/WoLo!;5lDBB[`QAGksHkEC?S_p-(A4$<b+M.[c,^cfcW:7h>Qi&`3"2,/tHm3finhErOAGqQOd
%YhMTqYWOland$>^aa$+*Yk*Xj+)]23faH:?H]Yu>k4JLoB@fr$IeA80TZ?71%L3rSiNJ<W5!T!Q>KpBQedo1,(rXlYEW,=MjiO,:
%,o\kG#OZ!7boY1hqu,R1Aq&(M*n)`grh.(N:iRo0r\)mDQ`n-V;Lr6]p\]ANX#p`i#LD[l8Y,;t9^fXf[PrX$,!S?6gSa5t+6M?@
%7LeO/q8kh=o#$,_I\798WT$ML)?kF`gW!<oBp5?7%Fql>+MRm2J?6Ak"\tYP_><5*/lq^#q(GsreGDMgh$`l2Eg1_g052N1r'BZf
%]>jQ*c[RqRn\4*hZi8Rsf,K!"[sU0lEk,UuO&&O->eE']hP+qj)F)`YcHe+=O#I%FSfFApI'uU/?Sm0jAcCfU2eSJH&GWD(^HXl1
%rL5Akc"5XbRbAUqq=0bAp#DAlcX*7BIFCBeV@PPb]Ra.sgpBI&+*)A0LeZ&=d^O^d$+tVUf'RZbK)Fd-l=,YULLq&UPIf_e^=mU3
%?TfZ-\@B-ES?I)$q[@0tPj7kbK#`X$K,e6i?#7)=5F`nZYpX9L21W\@g<ZqfhKpWf#<]7eb&duc@\A&"oNu1I@Z>kq-#cTFPc:C#
%j9?oNZ#'7i\Z[pP,!:"[j$'qdJ*-a0B5W>Eq:*aGL/5$<F8Ib;s-]XW<#qU=in0BZZ^nf,d*_iHNn@8to6koX(/sI-7JbcC:Togd
%T"Wh:hU$ufbkjT9])M]@X7NB12`Lp6SF:+RHtCY"p71R`E4ueYFO0d^jZ/r/m[*D!-pO68gf.WOg-*rOh_pnk::HK/ZA&lISS)BS
%FLD0P4<TXf?`i?\c%2Y\lLIQlI-&rU'l3O>LRPs2'&U+_&N8BEE(a$ZFqB^?j"T5&,<hR+_`dA9;`5<Vg>SI8g/$o<4csKY:B>$A
%b8g3u;`dgu@:.R]rX&!^<U6P_Xn%><kbhV3H<kgmh_u=\IeEQXD0+c]O&Y(_QCZdGE->K)*ie7tC&HS;C&HQb:;_">`m:[fIjc2p
%:KM3+Wn%!>aF=d>@.T>#?4>K,HL;s^G`Vg2o;DTp(?9dW?J^*!c><u,=%sh7MOZbK8G3cYG@(Z*+324HKI,?[("l[Jr.(Qp`rk^;
%U>@s[jb(RB4N:$(+0)T`lH=pPgO6$?:.SVcYX6tUE<ko!2P+<t`acYqIgWN,RVK[AXiq$WH9Rohg$<C66!&D:\Jt'1j_k!3kg@_(
%hQUZT*bf\^1#OLr]5CiCIIbK);T#)l7:S]>lJA9*aHVoZF-N8P7AE!HMoM&Cln',;Iad^:)S=/3pD/b%7H:XT1u)$8BPa-]hP.8R
%(6'\o\.JiYPL)3Ms.&,VEKn=j<jhq^:jtL<Cerg6nbUN'f2"q#F,+X?)XC7d`nI*14h@@cYMW?0?s03*:VCgQf(h\Ud/1B][k=q@
%9Hr31_fsra[El;9l[*u,Dm/Wsot?pGpGU+CH[Th9n,9Tc]a\t`HZa9$e@c=7p?:#>LT_l6=8;Irhd58gkgQh=pjRB,aZh)*mqKV_
%s(a$1c^mhKEb7F^ddlVZPU(RCIX`!gq4!Dre(4)];T.\G$=81E21r=gbc\8]J%-YIj,$i$g,1e^PUog]k-^u.CPsOQB3orIp"oR\
%K/!7;\CXY52f2]ZSNlAbp,F*TEO`LIgIH=p[iC?45M^5#'tEu@m[beFb>Hu=[_*bC@dhUt]/0JD-YE+dQsXdQ+PGYG]=&nFc\a[*
%iRQMR>n:/Ald$M4:+s=C^:ZQks5N\KoOOH1jn9o028;pG\7sfLI^^DEi7mBQB<T$65<_*@35'_<g%"fto?,aZG!6sR]nO_u3j3]3
%qL8aZIe9Z_h`Y-?\4%t!L(C_5)n+_N?VhQZUUpt4&s#VYIR3WP5C;/'G+?<a:uEB*J(o!9G+HBb.;o(@7/>QiSbCP@"rs98E;\aE
%pW`QQ]fs0eGiZBr6S7Wce`?u[ammKpRu94DEM>)KZu#Y:dlK_*4?_O$GW$84PL$D?JEe\S51HC2:Ebd;=K[uDcX*7BIFDY.dtaAl
%hJf,oDLiM_<Y%'I%8;2\6Mg9!1&cAMe%5L1$1AhalKco;2dOk[DMR]FDm$8r[`&!9fn1<;%0H@U(309;iTBXSp$(^jD;]3eS=Q9j
%$bSZQ@*R^+o'Bi7D>A)lC'7<4OS*-+M6^?sc'AOdGr*IH4oX_A*:B^=M6cARm/#u'@uuNis6)dH[[a1bkKA=,_1*PbZ87g<7imSo
%l,`4?/BZ(5MFDe'\*0+mfm-o:5t'SMU?lAep9?%7`>P7F/BT:t\*L^'*<@Qa1DXQF2Ve*9C*/A>KDb*c`M.00-+hI[Sn]h!QC[_j
%a.b[#0?n!cWS+YEmr?\qE\/AWiN,`c?Mg"4I$bk6B-BJ&-m!C3:C>V`G\f)jqDPS1lA)CBoGDMR%p4AO60<67IK/hcXPc*CbiV\?
%G%T(ard0TA6T+<qUY@T9LLtWI[csC2r=^%(00fDfG@1=Bnte''cn^`tqY]XL:SX9.USDJJK`7LYUR-K+kSKk@YPmC??i50=p!rjT
%bMT<1J#bSjs2t,?NrR,faaO)L48AHC?at_AJ,&4DDa+$:s7_7[r>VL/OoECZIJ_20l*p[IIeo*kqr&Y<I!5"/ri\D.3M-9Ach+^:
%nn0\(GM%8g#Gq-CE5<gG^E):B;HLX+_]XFM^K(26%te*aRL`_t.=Q&=*lN!)*S)8A(B)a/kaXlapXCZ'HiBd&49oRG7pUB`dI1*4
%p\*ot3VS9c`q)]Yhe^fK-_AiQMi?i6To\jcGq&K60n68&0IG](&cEPl*:&X)n&oFQjenZa[DS/Ci+^8&WD6e4S,I6R_J_=ariM,S
%E]dIsf:.3H^)BR][m%$Yk%sg4bSK$$3.KQ!eh8hNIJu+kaC"o=P"s6EK5ZUaS;orS5/tTienL=oo>e@nkMO](IMTrC.#hDhmc<th
%H,5!QlT_e=%\B<Jqpb5LT;%lC:LQP]59FP$Y93_;+1T4S(Ph/8f=8?VF00o?%t!JX2\tB7,3]^m(3CUc)iK3t#15$pif4JUhJ>-"
%>OKc-)[g!8JhOTW>90]O3`7mqa,S?MqP#A3mudCJ4Ym!e7@(<"GIg<(qG1tt(Yp<[4SAX?VeGM!4YjIe0>AG"hs9ssrl_Ln5oG;j
%K<`l"If8HYj)aqcclWdQR-EY'`\i'gIG)@p5<Cn(ioKl^E;\U#T=t/pV]7PhbHLQ0?aTh"5JFnDIf1(r[!qgN^>7qtj/R@sqAL.H
%7E]]J4hnQh?[$^>r:TmMn)'YKPe6j[?b&V3r26lNS=]cFo_P'+PLk3Xn.Yh9A#,%N.lo)nqY9!ls1Q)<jK<gPogMq`)V:8ss#R^9
%`kTL_h\*(KU!$H&nq#S?oPc(mbrbBRgidd_lc/g>XD\N&X"ungk=qKCS\NpIOnSPL4u`ih<BWT5StAMD.!CF-G<8:jq`IEU:Hh<j
%bV/BK7=N-'$Ag]iW7mr9UHuE[kAcg-5E"!4qs!;<5CMikXeh9$XSRpAkr2Z*k3k60ir7hRI)XjtH*5)#AW.G_?H\h=4a4f%4*O20
%2h(4>s'BX1Y'YYBLS9'YItDjI&s*[e?>DLnRf%&DOEJWRcs244m'J?gHH<B0MKZM>e^o;`ENe8Ko(d]0hR_JA]&6]YY]L[k*:+mD
%S2,OAcA`d[i?f&Q8V6p8jY<rpHi^.WZKUb_!jY=R>bJG%&I*:EeM06ch-V1@\N5uPdoA\88%<gHpk)AWQV5,4<d@Y>.HN7CAQqds
%,p)aq'D@VSCpeC0qSQW#:01^"IY-a'3V4BUA^Lu3gS-M'?/Bc\V7IhmNK&a83r>morBC1NT:=kE[,]!Kc;sNM3D78`Sptt1D,EO+
%QmdHOC'jh(:sdYKNP;rBR*lNfa&*d?\V.j@+johXJ!LT9O@Rdt;D`t[69;8m,4@]'/#15&Y<TdJrTDXnX6Z*^KY0$XO!p%7E9L4@
%LWu`=3!9A6q[gI9oFJ^')?/`eX6U.Q_;Tf&2XnnjY>;q0oFLo$0rQa3s*0"heJu\WqpL8qo&]8");b$@Dt-3k$q1[/U_qt.b8os*
%_.Ok;^8Qf9]>.e&Kq;hi%XQC[>>I9lLI)PVAYRKs#Vj7E/RofiK4kR"llY^jIos^2MP_$N_8PEs;`S5paK-&.6eD+5+_'etM6Y&E
%4-\qPGG^_^[BXp!1U2^ciJnMW5"+j**.R[71V_9uE3Nj3WVOoiI-bTA\L47E?a/&c0fWm:GjgVB[RV;LTq1Dl>@P:r1^YP9)MI1X
%MbJ5hkf&tL@1#kLs-A&^;:0"^L$9n0mUXOSS8f,UE`8DhmcsT36m).L7Cfa[$7]>ib%f"+QB+K'n#H*#(j'#8EK"gCA9hJ/Y;PN,
%HJJr0X"ZGkDlMXH1q.Y\MesFY[#Y`h3Vlq>V;hbSZj4T'*p`-1DgO^_CQ61[oG8Q]n1??3oJQ7u]+E__4%tXBnp!t&j#bTq6Q^me
%?.H(_N*tH*XuBVS_.S]UON_;q3Gf2kMfdU";?P2e\!6000"V:bA'eD'9$8ni%9e`Dc^dp[jHUbC,0c*%oQ8gi=dQQBf`f*$D`$fr
%g)@YXg$_o4HO=$sf+<Vf>h&/l@T:1i"mo_LXfG=m5cIV79\Ka3F#,s<=(EDknTH(1*cGm*&?Y,c;S(DgL8[7G*nqgG;Ip8(*UK!g
%$n885UZomgBlPg1`tJmAB^giq`:;6/3$^12`(W9'`0t/&lm$g-#d%#[iLO))cV;utKIHc925pH=`F!PJdIH\D^q0A`?L8t`DorI!
%n?VJYE?,E6`(jMQ`,T"NiJ(HIbKLM2#nP%?a#B6NOpiil[JM0*cS>#0[':-&'13WmW@ZZRc*$AL0g=Z\Os>JBP%ifu>qfTgI+L9t
%2n":<l"8t\f6WY#V:[Luc6Xh2R*+4FK9M3&\/0(ph,rH_%7WIA3T(H1C6/O_A(/?U15O3&VUeP2`a7_)8_fo5'%=U#.rpKrjH\n@
%%pleO\XTYtipOcu.A)QTIq>3C6@rM3GL=4Q(<628s0qgY&;l71qiP(Rj3Z8SO0SG7+s+e%]281.qQ\d%r>E!6k-?fRT'tu!-5S_!
%@j.l("o%,_[6QmbE>t)U844't+:7\cNJTWte8]l0$1Unc%omgD)k1tD$*R"^7LnDsBL9(/(f=8t8A\cFd<LHMXiTYoKkWoR*LaZH
%g#GEM,od_tLG7-X0il!mrK'hu-M>06Go(V7PfIm$1mFJ),%\?E4b!YP)B3B/+7Rh4]tG,%]1uZfs6dm8XD'/Pbj^ij0-*CKfEt"c
%P)8DsFFGq1jr@a#1;YksF.H>.Z"o4RmM-/Ae")c9*31f>=f=6CDs^t\OO18]a&bf'k?,_*kjbWY^3q=9"8M!A5gOUI6]P%?fVqFN
%$9dqUVaEteDme(e'Pk\G)W(@6j.QM`D;4Zt`Y[_Glf_St?G>@A^Hp$F2UY18$TRR,(kQD,oXOlmQO\`i<d:T"#u!+-Z+3NI#>V_f
%a*u:G3e`70.d*al@PWalpGf).nM]2S0AS]m@d#Pmf_Ub4X+"i:]XW=G*,QMG`i!j"0XC49MNP=J8Ss)CO*uCKCo]Dk-=WJB_XEPJ
%"f/D!dPun*[XCm8OSVr+7/NIQc-U`VcrpX_%a>j>TSqcWd-[,=6:>AYiRjMCRdeGb)->B3K!.tY9Y)S'8u93J=6K?RL%Uj!**$pk
%EE<rWgH3R[7ll_N"+6"WCFFJS`m'H@8*]R$Li$C5j+aDZF4[<@Zko@^<XVa(8(1(ooebgX6sWGFF^o@dd0sWm_=GUR:]#6i'6UD3
%SW@sBbK!^W)k:jE(LRXJM6D?Aq6aq<:/-GGE88Xk>UOEXV;/ln'rZS&q=<IoGK8U5*aDs`4C,#FiJ)pHp-&:o]EL67ilqhm6f4^8
%Z,Og`GG,6X$l/CaCi*FZ%GELAR!']JjtB,'q?@aqak^Vm3&[p,jqC=.K5h*QQO>2SF#IT1Y-:Z)?S-;&N@",=aa4d,H#P>?fs)!G
%cpp;R#`$Z&gR(cFd>aC7aA-g):L'.mU'=ktUYDL5S!jgY]eV`/p.c7*or?WXb<gkq#@\SKp-a[tR"s%2jD;IT6*;4EQ]G!dk8_+s
%>:pD6>C.1p:eTdu&N9mNSU+u\q&o/i\`/quSuDU8XDq?$%ZU8nLq+npn#<*0r0hLmZ,hp:D(lu:2dK+gUZhEJ9;<iI?p]g/Qa1q@
%c]?hZ[k..o6MM[`gJ'"g(S)+mW#Xp%:Hcrq/eAh3HDhgud-N7k,$W9I31-C]lc/qS0arNi-2:oI-EOb;Zd&XtU?YC(kSl0NB9g<O
%\l`G&)7Rg>jnK0mlU;SQm&%L>XPVqCXtVR=?:Krjo&#Ie0SVD@_`i8#/IkGM1]/reG]_qHK7f/_B/$L<Eg<C<)C\$@B-*sa*#N.i
%JM+i[PfK(.+"#eAk[<pj54iM/Vj6rb3:'FgmIRH`os@:n?l9=9fL9Qc.fsGHLmG;r@jNeP3)sF!5p^Ko%8"OG/OlYKjrdRB=L#:W
%Sg^M3c+@^0-rd*:>Eu.A\e%4FGo40Q7"qPTPrbP*)O\^o61D#!JLN-aO.D\:P5PJp+juR\]j4@j$q':>AJhW:jNP2R?gS?8:8<.O
%6bD!l#J9\GpDI3Jekoa.W6D>MP-@,m('g>ei67a6nT>Aq^>uDunBU&/>,(Q9nKRBa[&>_SEDtX9_Y>9@2"JbJ42HQ[LEQoN^@c%-
%8\,irbYE"+<2bXbQm"0meR3bdm%AULZU</3'\$"b%jA[0#OEhPpA*k&N`J=)_MjWDhl?kQk!&)n)2gjk7<0r)Rhj!;&Oss*H%Qc/
%=JWEqX^^,`4(M2tro;)9,>)"&EE/*b*cf!&OE@*)Sa,-9V.QNMN!!2Hb'HN>bcCI'^"H3doAath0p:f=?s%,e5"af[0ar#X7M/5a
%6%@luT5T-.M$ZnN!=.ZT[jBFo.Rj3=[gqVD+,gZo`i'BeNc@8[h=9=4Sb1`-$0=I3O2M)GM?S$Q=GW>)VNj9Vjj)LZ0p#Bo/kU07
%q\#+4lG6Ib<)O&@+>osk_)oF0oR0&6T>a4]Ou<cO02?KVAQ"PS'XD[47A%.cdAL;ZLE2[\PY2pm*KBW;=e1eP"U2P0]68Bsm&=')
%gV%EI(mcHH0KrOiSW16[5mQA//\-g;)rcD[]^0Mp)qK+<KYl'DK?<$=aeSX>NJnF5eOBaS\WKGh?#SKP'RT,*NU4b,2f>W;5+5\1
%q3tS,Pgu([l/n;G7BrcI[\X),00U3OU&1OSNS>TF5Pr_(PO]5&s6WVFDoVhVna$2l"/&mJ$BdAnIf8EZG6a`\?QO]DH@>;'l^+O$
%+2@-&#Q30ia62Vuhf:K72#YUbmB=S1^,c#WN^*O^%h=_V;KqPYr,4="^P,ebhf/_n?cW2tGRtD"Isq+X]10VbhsP;#COVX3o7%.n
%ahL\6O4q/BT&k1pf.$Z+#`8;hrV8=crr]tU;a8X<^Z:g.q==FU^"G!/fD!_^AMG8)[,^UB(L@'W*q]$,9OMNpnmkp_I+:TuZ"eP=
%2=9qJWEMg81#EsCjLO,lgh*@SBJ>i=?B,]qh&T]Nh>I96`b^B'HXdoSShK*q&[[aqg$Eek08B5k_4dCDELtc0o-^.#T:7Xlp#SC"
%gQX>33(:Z@mtALFjh4g\:Q@)7#`0`1ro."3I3,>i;gs.fs7cQ"pT8:LjN,4,kC&s#&'g^ki,lHX;E'.0@q.jb,UAKKKbuLs?nfDN
%ZZA=C^\q0g,dhJARBq7sbaIhcbYk`G.[<W&;Q3V)HfMdX#$7Z#>a,*_3Ha2Wcd59LoiZ$h7c]T$n@p6bJ"lt7:]I&_`S'6jLct&l
%U'-"jeD..86W9E]-iZPUA1=!J$-bF:L154^T*/h)S'7mcrYJ[ZWN#kmP=W8BnF24ro$>Bd8\[ieU,.ht4ZOM[IY\OP78k;hgf5Ta
%iQ[(X4Cb-F(1>1O:Ub-6i0,tlZ?'mOi2GQ)W&QISKJ98?6cF4bRALbTZ#C.V(pmZ!'#K(P:[W1'pr=67T#8@!;R'S-%^<UTg3#c<
%Q^-M]q8c)k3`Fala7,Ho&Fb\@[<P*!/bo%%DfW&'=$PY8qGd'el_m9QgAL.J%7dQW4h98"8U"tMJnBqsiSIV3c1,2VGCH:qJc>7N
%Xunl<Q?Xr3p)[5p1"Lf(e`-?Hrmi'eV]oCFIB2\(VI?lZHno\Hc,&B4l/'Nb6TVt:N:m<:Sj.Zh&4Z]t%)KI@V)YR&%s[,OCGYbS
%UuorM3F$(+>%N:%-;"$42AVR)!E7HEVKr<+V;B:C2=)pneiS8n^&8&7rqCIaWN/p2"g8s[GOS<8r))+:(,,l5-948KFR.acPR.O\
%QA/DUs!PONc_SO/mr80=`?iIl-^I^g\q&eq@CS3gs6=Hl!\kF,LW\Ij&<X!-GgBLZp3Z4L8S`Zqo1/F0C`KtVZ(Z\dp"V`>e'X`T
%dqrX;g]+#(k-C!Gq2a(.8c&fF=/cZV+RE71e@ti=6^TW%QjiG(<G^#Q>Fe+1>a]2lT3?(0Ed=o*G()/?a0F-X1=u0R!Q.`5kqu+e
%#Ls?G$/IpJ*,]'D5Y'n"NuQj#=SOk-+?,;fKg_^sgin+R`cr]6)bh3AX-g_B2ZO8+*L3M#KaEY+R#sn.;1"jCGbT?\;:^f)dMcG2
%6LQl_n_`B%8hJm2_`S[t*NL"EYbXiNPpO08bd3HPB`8NXi(fA[S;1m4j`rd6Mt?FC1n&\gPk;o+cl$Q,14uV2\9KN^"F<WsW&[//
%3Du1+ZbiD6-:6fbaRPg';5R)g&h7Y\e>XgrMT_8:c^2a%Xush2=d^b'd!V.PFJ17p66?[lTE;DspMYg;M/XoQP41nEOejC;A4<4b
%>W6Qr!3PofV919K/-ib:d)Ggn$o2^a`1RJIDJnB)Q&o^FC1LSKESaXj_^!?T@1##l4L.X@Q4l7^]_eA0;u!HuDbe>lV9"%?6AfdE
%mVH6BKV1kWU<<e\>2`RQa@.Ft!eZ08WUhIpZ4L`d`)p4ZKIimC>&`#D7i$_rrKcW.jiDk[\t9470B7'T/<S6i\XT:AattTL,h!W0
%SDtjp7`6kqOZ3e+@)<<dV1j-q%!="<KpJ,-f#$?Q<?Oc%=Ca!O[6pm:N"MXoc0'?hY"g*E+1HAO&#CH:TbP1qoYVte1+'L*A@-%h
%iIW`dR'\,?$3aPp)BRCi5MQ(@%@IY[=U(1(RbNA9+h"oW'F6=G-7X7PKB*me+^fp%=IaR/S!RJViX>BiR0hY):6T(),DJ:b<i^!F
%_@M9q;9*dT$KrssTGjp]Z_A54!\$c@'TQ/D<@W"@4LmeFEB#fc<=;qY0()'d13=ao!+q<O-\V_=+eF4;/c`[D6enskE']!YETbQ]
%]c<f/;43]GAh"I!,]t-W,@5):?BI+-^flGZ9h/WZfN`%m$Cded1ZKZJ,g%]odAjFbXQ\G=L\7K!2[q'L#YkQe&gQ.0f+%u8OMIUI
%WY4IZ/^M<gbCD':'R99/2'p1eJ`,i<UZIaULq1T/Ns,.g[9fP;_S7kWRO+a46.0!gg"39^f6)kY/,Oq8RE38-jV3JI32:Bc0,;_R
%6lRB_Q_>"PQ,t_a@8Iq.89ie#8sJK?f1<j&*$6+#as<Z\C*<3\(Og8FJ-],M@r7&q&m(di.r:0Dd^YOZo$\MpT4*ZbbUMi0'\Aj)
%&lOFX?PP1WpnP.*6.hRZggL,>J2gUka+K(%<0@Y%kF"W(G>aacAh!"KV@;D$mf<SgN,./N$-ethTS]$]+^lo81@!rY'(u>NqGCnq
%%)Q''G``qM9L7oT::q-hj%5,TYd*u1"SeJumJ]YPAOfb=E5?C!l)2%2'j7m\S;bA(3U9ZmW,PI?:u*S*_=GBShIs7bGg5\e\;`rR
%;n8=BEu_99(BLaOgQEj*eMrar'QSp46#G+68TD4..j13,&6".lFWE(=20;]1V,/Q%()/+J*%]I)gEKMT-8D8gi!$AGE7lfiV9s&-
%7[7NGl%18-Bl+Ug-9)`=,9bmfLlodd<OT!E7>s@$E!j\2%,&?>LQ(FJ;N6X/:luj81dXG?76\NeS'&^Tj_!]a^B>-5Jo-1&1hVS)
%P:S(")TUO/K8YT_Z^?TbbPPrs!mh`>\YW@f7@klqbr?09:iLmrc"L\;/g@Wt$1doAD)gulF*KG^[amPo;;#Yh69$diKlU58`T"AS
%`p]"c%[g6Un)g[l<9hc0\0c?%i/2LiG*8"s(t=hG%p&ra!61E-JSlWkir#M!0pt&+Bgp$oaYI+O"p,?U>>@jXAsV2a&U+T%n"`0Y
%2h[H`_%MgqY92)r!L>UqE]L)qpnXEGZjLVADY$0=PA&eRh$QF?.<LRK_.YF#2E39k)p^,)H>\cnd"$6g#kbdOS;gRRogJgZCaSp9
%C`>\,[+jb@7k*@6m@5*SHkQqN7VZufDY+IUS`,lfVbQpSk^]dn":(3kN"6&=%WJ:YJY\('J)l[Uet9!?X!/c[KVa9uCpsjb3;\Qe
%0Mn5Xfe5hp&Cd!S(:=$V[$)subt+X7rNLO:`N3%4;"!-G(OEE:?&nh+P*K^ffO-(Lrsm&A1UKd.mboE!*Z:Hr!d1q4P<&Jp\(qZZ
%U;At4_Wf`VBNCgs\rg3EHC<i3A)hX6m)u/Rp_,ZVQ5\g.oBL"31&1+JBC<emGWL2hP<X&dF3a0o\7^s#ppVNL"B>Eah\/>!?J<SP
%HVUjGI^J*;\S=U/EgT5WE18/H2:ssDYG&A8-XB?)_?CTnV-lTRI<NKRB.%f?cmhfTqEK\rhpfhPWF&$jf#6XQ2`@ON*Y(,XlQ-T*
%?^O%/<JDSJbb+4#)-4Sg4KCC7%_(8u0E0OaX6Wm!eiS/34LkU,ip+uW`F'2]LDOTZG4k]aXo7+1l+`>nWVZ&tMZ5jbcHVAsA)hTN
%]a"RpQWb8nRGIo3PQ0Z8@J71RWs,I!EsOdbF6dpm1-#%8eDGaT6t_9\#\eiQe1$j09BuPq\o@lOD"RYo>0=aRhgY_'rX3E1+b[]3
%YF58Mj/E!!7f</?p;toZ9f^i'.296l(Q[ouDf>C9V%eikqNHl?bUsmjL#5TN!e-:Uc(l[</f`>o+1XWDrqK()jBo3_3M+L3M)-\D
%]q(AMa*YE7IhN$C)/o/rfFXu$kt=!o&-McIe!'f)cA0MpT.:=4koT<e:7QG-5*"SolV[d=hWUjKs/F&>9?Z_=nNln#'jDRPc<e80
%DXH_^j6HZ6>R2,rNMGOMmW!/)h#$JZNe9t&T0b:c*ol2BAFEpp^Fnb.Lhcr0j%D"0khf1JrOnE<m:X0$:GKB?_TD*aD"b;=Ra'CC
%!Na^BNH)&EcSF&Z/<\9Wl#Gb!m<+cE>&j5-@Y@\3gA%;`B]oPCN8#?E0E0ZE&enFI.E6\=j;nf&rn&'g%=T3Wm)#=fJ(AC52,J`/
%P'G0ca6,Z%@DeYnIgS4HH7.P9m`AU=hu43sb5X@Sf=(K=mo#'!Wa.J@)CoUj2mm7In#3ZYJ4I,=KC5u]%8&AiS=U.Dh;@q].E63o
%)p_7i?MBJ8:/#11kMm:9<jqn=<j1DG9fhr/7pKi;GJ#le*grbB8m1I8.CH9KO^q=CPN2)in>PYt](JR1pNUVg2K\Z<W*Y+F8)9rs
%Z2=4P[#`'e?7/H__P#W>E8[bhC7F\ma0AY:e>R8n6Ho/N?<nC[A;j%7D&JW$H>XkGU[0'D%8KC7EL+jO7YcWaE'MQYA#0AlXM*s1
%:E9B]NB/-.ro%7#IrK_n\260.&eYTU;[>JHEk'dcr2i%c$RjI2b#N(2pPsahe^f*I3iO]Jn""PZpEDsUcZE3X3Jk/FG3fZ9LuQP&
%Y*qg[0>tF>f#<>VJ#'5/,PW"#+VA_UnKZOs_%]:>,oK*P.[qg5+qEY)K$__HS&/0Es,$#/K:'MXl86i:.&*(O-T(,AZY'`Z\D#0X
%Eb!t=HtHaJX,XFkL;)-<KKS()Fq/r31eF[.^bb4"o'&@TdFTf(R`=XI\!Na@acZe$e]t'G[3[Wu9_stcmTiNDWd7UXI;<2Kcj,L"
%n8N>uqITGJ/IRGuoYGQtYhAEYllDYjLD:Ol5;2_W^$V0E:OO64q<H;lK;5c&"Q*;YldU]f^$WM^KA+M?dqAG<n5D/%>g5GV`9m8r
%8%!L^m']9Z.WLlKe=qlo1_8<p$3/K2n>k/)39I.]d=k/gan*uF,H$,GBU"5t2GRYXHanFVh<i`n#=i*]"e?Is.PH,RH\^A%&,UiM
%:h-rBG'\65a8ak_YBs$n5Q@j0Hiu_l122H?ghfj)UE7,NLBKg\^uhJCSb+O5(T4T;=\&=@\IGn8Je#,p:@GYuIfdGXD9#G3;rdhi
%_d7290<JfXQqDMW/Vn(lpDYXMdsbX`aSWCBFi%06$3,i\n7O5WWl`!+lTa[+\=VL.HH.P<+oXUW]_?P1K<9#5"KYK_Y-AJ'MU;#a
%H!`t#n&ThE,;RZ&\q_Y[294YC0X+SG/DF9J)_`=5Sdr3LpUj%m.!sBf6MIk!hcoGbm>!9:;QX$<hPb!"/^((:TisP6g%!sgRTL.Q
%19(^EXkG^tX>d-eXKVC+-OgB^4*mB@f3]ELUm%g>3-.=?UMO#IZGt8UP$pn@Fd?QVJIMss[JRXe\]oU_1,!L/.P#CWN65\n2n/#+
%(@:[/pMao2i=`U[&eek"X+!D3/?jtF"CMs'f@DRfY6X"f*08[CG&"fPYe1ITCFEo)27H:ROBUPWZ+RMc!/dp6N*;8M_8JO9-"PHo
%QCbKB9Cn&jM_3.EQ,9M>1,gNg?CKBp>ArFLoML!MQqeL2Dm48leN_mX2$X@/<5VS,T$W)G\Q>S1T3(ui]B.Q%UOh0[#)=S^r[#-@
%k!&/R9hq*:?@R7IESCNTs)9JEk`8AujYZ\QhNfN=]*(uDXoG^h=ZSN'q4lX/pWlqDeOH2=IUFU(qo;reOA;L)G!uj]U)_&4%_Smb
%0_LJ`qNrO37&g+#L8jfIr*[G/c]Y=-Cr9N'/!k&7AiH7;mU'5tX9fp+W7qrTd^c<k/@f:A)I47<_%3nF-8X_7<r*7(?dR"hZg<I9
%'b_DO7BOiJXp^][B<6[mR[kae(GmpXZ?<Tl9Ut"kl&h0!E3b-DMnQ<%FGtK9fKhASqI=n'*77g"A(9@!?(Hp#CohEMRlc6d,a^\]
%pd\0X;0>ZL:V0hpdDqMY*I=dRS6Bjd.:r#GE0QtlQ+`')Aa6%B/;r5ns#9BGduOi6"D[]:i7sU\<6*_IUR&d<d,X_gmi!R,kAt1G
%^HZ^>)#Z0QZW/O2X+$'$_QU@:D!V)OH[=C1flOTq\1!,lIc$\2SE\WEFWYds=X_huec01j`(R.HkF[>Vc7l2VNmf<oXY8!W>,a9J
%IIFirF*4`sXsRYWTCYWj4e0GC*^`tDXB]oSAaOFJXPhgh+ar$U\2VMhF[mqN3l5%"!GACi(lar8h4MTKZ+;^3[E<JI*Tc)J;-WuC
%iK7F0?FXpbpMI-;hsLsJFq7*E,W\uG<O\!KNpFFjG'8VRk^54AEN=Roh\mIqi_I:O41lDA'Ff;1X\*!W=X-4U`#$>Si4IK(U@/qi
%gLk`?\T`)@Q'5U!?JS>9GWHKgO@Q#*A#Gg+g@1nF5<@L&')U(q7\Sd&Z'30j`l>@T;YL[5#bS4HqCJ.`TL.uChMsh;SCp&*4W,6!
%#k_lEmG:Uil*cMj%h.hG+'-t`(e1IG(qG4L*?S:=qaShI)Tr#PBbSVEho=(ki\qA]l]m@'%/QW<h>2tmb#oqMQ-3dsD;FAT#"IO)
%c?Y\8\*H+N[sT29s-Iuf9)*#B=Yhb;g*S"cLHi7N`<tQJY'NBRRrJf5Zb-T+hJ(6(Y_k>KpCF(pc-mS2O<$E,]=6(a,*_%skVMuD
%j,#'H/*j&l?h>`p;E/7HPAKD@30''^a^fhZ=>k9!dU)m]b>p`4hr,:9H>I4gdr=WO^\,WY0RZ*.+WYJC&$$%MC'[DN<gK1$/WH1?
%lKMH7J)HW#XDmbeBZ2RqI!KbB%P%It8N"Fb[<:uZr]/-PeV&&dgt.b3#G$6e_3,7U%Sjb3N\?c`PJ)FL![^o6B(sYj\fGLY/?LNA
%=<RB_?Am%\BN<`]C>*,(_23gBf?m#sF>X7m_[C6rT3bK,CN.Sc\JjDO4<FefVRp?He3mPXA"\r0<V&#n6==<r;WWjpN&C1uX5o5>
%a(%*XM5k)g#=n)gD`D>3O!*3t21ETT`aR]V/0jB(W7XnTn?<T;@j6'5Y?cAAnTO&jjlD4:o(CAuE'#m9D\a?ca2J^>oQbVVh1P\&
%ctDo3:OfqNk]`*5eV8m^\u<nZHTS-\>F4aKI(bBMP2;-Si&PqN\iJG*#t'Hn`D)d7W9\V-3!<Kn>n[[fk>)B5fn9a-M^faX*H1Cc
%B5g_]j62[H(D6sJoZcgo\Hd[NU,0u&;t:R/:ZB2t<&rg\-h$t0rLeMM59-BX'"%ffQ`,::p%aY'Ds-Vc^>6Q^!!8F?VjkTqc7t"9
%k]g_ONf**1SIo/9T"23=:_0)2Qb/-EHZ0NZ+5((@[sJbIc-J+?\e%DOSnW`Kd+7/0W\cmAU]B$\E396GbCGUpPBMtEUo\$:?:#DW
%odB=:K)TlECCR`Ab.$AF_I+X.>;W-eXa4%g3A/+"0ZeBUOV?\i6OK'540@k@B>K9(F8n?_K5/G%(6=6a_=@607Mf$Xo2iFb4KIAu
%rn`c!Euj\@.rA*]_O,d_1t$",KKL;lXuO*5:WL!&lpAGtH&"lF5-[lmCL#Ge<cL#d*jnUF$e8FHY9A'"[lMgsgs?gOeH*UJ@qp_F
%ET=;UQ+i%b5MR,6]1d--*(f1'C$i-Oo]E4/k+<.!&%pjPX06"S4C>(1h#2YQ2fKJQYd\sU]au$[a5>8_T=c]]jMtW8)Qu0K:E3-q
%Gjrf<$iq_tX8/eZX0"8s/._eEW''1]fl[@%HVQfESl?)C-6m5`X$mh6J&YEtGIZNPT")0L*_"-g><1KB5n9QMjlOC;7OIu1HPl3l
%`2M'K-("b-G&^;+D6,Tr<f4QOW85J^8DMQ&TATQcGOE`RXo$q`duW&(k;/#(a3+]pB6Oli4DnMoT"<J-ldgjCc)X?-k1]1=X5sR^
%ou#J.a'2=UN_d-#HRX;FgdnieQ6aB!\(9thEdcpGkPCa'\`omJ_XL-?cZQR5^N8L=C-=a`gjSghZS8;(CX'Qg#@"<VrRUC=?_-S.
%Y!^rYhjCh?QVUfB4tZ'o1Xh>96"fEBioKF]#Nj`S];;^G=o?jc"^a?,m3I`O-Xs]*b8pKV`J9M6ok+0qftGDuAj7lkmC,;3bRWqD
%G?`NT:>8^jgH2PWjB)6%`q.[1cDNUEZ+nY841hiooq_E6^/$7!q/WgLQ$0kpbWWW3L(HA>LX"/WT*OefS)7F#gFH>@B8UWZ)f%7]
%%Z-"Nh<e.m:&/YkmafferaMo'<H$ZbCYV`Fmk-enrc34VH0\JBffQn=i:Z,G?ghoMFnaju]t6p!SZgOcRb[5_j1XbcB(nJRhHoR+
%G^+#dq!Q2O7VD,NG8S-_L&6qG.bBZjs8(22j)F>8_;4pbp[?dfO7R_LhAbm]`pqVPH?XisodI:QO,'nZkNo=BIA;tmftHO]Y++ME
%l29&TFDnF&<tAsQmlEBCRO`I2hCMBf3IIcu[IV.=HXN=qcZePYDh"/!2QqNq]FPKj\04!hGHSchHn]K_MaLn&K>mfDAqgK]ol_]S
%5@&Wi]%<LbftMM$r@rD(i.oX7"fo.NP0L$X)M,L2g2m2Dgmb,f<51H,oS'M\n$3ZU_/GOL%j!8rB<?s$o8MnXr7q8<DpLW-CjLsZ
%^?:EbFQ7*f55$7L$7)EGo.Qe<:LdOVA[/Xolu)KN&%-\$^25aY>MnkWG4%Nh^=;Q,]"Vi9?bMhReCo/o=T>sTdTF2sosCuq.1h&b
%rUfNHCUF%hl0XgmVk-O,]G5/Z]H=?mrVH%/RC%0jf$<!t2R:ikmG>SSi7e,g1eWAPFgJH;hL3)9h`bp2*$9ZYV.ZF7H&/e+jEnqe
%c/>/W]8M=4o-cPu6]YA'XJ3f?<3D_fGNVc"g9#h8QorZ,h7o8>4[SeVC^q6KYFf':X?Sm/*TuS+CdtLmfme?r"j5C^VgYc;2+C_k
%qQfIqVf!R3DLOGrh_/gnF*Cg$j5]C"[lT#r;aMJom-#uZ2BJbEF)s-Eg9>+[e6=H\CmVO0c"aNWrSU9-q<,_pmH2^S,"\DCDRZ+i
%#ObKQ:7-gu`P.ai'9J]IcM[RY8*edh7u2-?3')B3>Kcn&HEOFfF.d>KZ8;Ai0M_(M]e0!1oZ?[Oe]kD4HXAuViQ;$5B>$7uL3j,)
%kKJ_3m.RiP7q#ZsHa>XAgmW\;)hdSBh>,+[+%rfL+.Z/*maiDK43JujgBW_G099?3p?&:,KOEuo,L]bE3nR__]tVp30,6.s\o-Zu
%-;,FD7uin4#LB^L9f)[t:&J_9['fr4VY#BHV;ERVIIk@YNmj9b[i-ps7sEs=0=m47._MVFbHH-TN@42G%UD#U7[FH$$g[NKo4I1_
%H<SugmbDXG1i@`EC^DcLm>]k%^>_DJ!^>t]V3PtZr$ilj(%s.>:Xo<&gK'XG9@N32o8\qdhRFm2pA3SMo1%]BNOA#)_rfh4Mes<d
%'r\FpHLg.E9RCY+^Q$"fBQiha;Z69d$TAjuO-;WKf8$S,mlrRGkOcXWc$OX,dCYb7Y?+K!k9$Xl=0=L?YD5\fZi/851TTipmH`Y5
%pac?e*:>GoFPT3%'*6]5Bnr#=k3).V@;F)PbGIi%<<oBIr9M'IRq\A":::N0HJu)UDPkV%:;\r9[?s]b250>=_"+Ma\oG)??&.G:
%Lsl;lh&q8:elq7Q$i4:XlM1M>I=N=>[KhTt:p".:rms03ijs[J%md<^'L!ec_uduKFm*EH#4_i-aYl?<C-/0I;ZG*P""Grh&'k?E
%4<kZH$LB_@)e)1kjPT^0T6njHOM4oEBHXI5#'Lj[LTZt1%nJ(VnBL*#2jYf)!CT&Mn8&"hQp0j;re52j6PU2aOn"u&31/q?r^sI!
%KH\JlF@>'0DEk*mh\pS=!"I%C+X.QA$0?d-L70?PL]ct"#gP[,#b#2'XrF$X's!)'.a:Pl_It8e3ftM[oKcS_1)cCHBK<nfd'S%[
%rLl(](._ghMa4nsjG,^,0=!FYOkGfVKkY#Y<a-+K7%fC'+AcAOcXt!rj*q@[SFaV%i76+?(',UfP#V7rp7S/%P'/YdR!i\b*!TkR
%Ob_"dR[_S(rg%E65AK.j68q2^]L4kIEh(u'[K6uc&onUXdV6Y\ocWEC_-V^G?GT97fo5S)BH^NMk@nFDK[Y_S6G+PD$:3&@\"?do
%]"[3JQZ!6*A`tHm)i'E>41e:Y$2ijtA4LF:^OC4eYb_0>2jQCm7-%8n18%BLgmDkqS?1UN\=]j/\\%M1m3C;!B<DK'#7_f;m4s!l
%MlYhlL28DR,i"C)P%j1+=&0UV/SCg7r\3U/kINsbm/?[LG!kY(IuNQVlB(GnJYj8H:@-EQoT!fPH2([ch(3I9)D;WQ?8^;/<XtG`
%G4&()J*jjcg'd#%,<5q@]H%K@eAKFap$[n'c,E\$"<LNej%dj,/69e0)+=2teuP-^,5Cs.AaAmVSM-1G2"F//<Z4cj]Qhc0]t1J`
%4FH!IAeVR^(7f%,Z0kCKogpMOY\^rUJ(^"q@'fRWVr!WgcAUZ8]tMr,:.gke2sG.OZE#':%W?#G<R,NL3kU<Bdbr2"n@%l"h>6hW
%UUg-Dgq1=BE+@L&ice;@P6YH&H.nV>"!DP0(ijG6YOt,>A,A(F+P4kLO$`l;EtHXAjc2ZJ%Pi7@+6,Y&GNSTdlJ[GCnAX(EcYk\U
%hL4"g\+a9ZQKQH]#nDZ?<L(JN^0:U1Fu[6<34J_iVnhu*Y(>&s6\<Vc)Grgk+P4m5.HomrP5)6q<Zh!ALXSlgW"Mg=\_hb^F@4cr
%g]"MKTPQ3pZTF*B\!JksC"]e@3f<[NQ.mB.SZ8L;0/$KjYO8.9G.YTa&hQO7?,LP^Op:eGGB4j1_"&IP@^c72e"(:AV8Lb8fo>Qq
%5S9BQ^4,N<@CJ:Y(LO6r\C%rNGfG2hds!_h0:o;ZDRXM%b7?o$#<*;-kl&uTeYMeIo-g-r8)5KEqu(<TY90slhL2W@Yp&]2WUAoQ
%ra^$Kl!8KC=ksCBG8?]:T,77.q()5m#deea,dZ51r<0QtB>F-5B7"BBUh`.`NV7g=f<U!hl7_QhI,4`R4fmClqbQ'SFXQ%L=/t;4
%h6XAp]`$+"c2;RinENU`k$``(2!]_NmEc@S^CF%ZVTTcN^Ue=<L>0JJ5$Zf$8iIRS^UdF+I!f)R^NtCmFS/jJrDiS4C]nfPZi-]u
%EBuUB*mJq84mIDDqsD5F=aE+$p&$S*;8Ih^E[t:H?1EMXS=.CAeu%l;Kk64cB&ZFCLk1i(qk8Fb[=>sIb26iU+2%JmB,p"nc3`u_
%Z@=(8gPJu%@V=`%Yk7I"X8[-dAmtDd[sc#(XdcBY_^7H(SI!L\I37g`m_-<K+=t20+'Q2K[J0J)E-95)0"9tGS\CN<@Iqe\&"Z#,
%/%3MT^%hM)]m%,<3F'.Ba6Z4n`uodQ:$2;[mfg55BA\*o]>*rNF*D'dD>QeUNOAt13g?,DL!NK.1QN)m[$c!KA85g/5M:'uq#5`C
%GP&P##)9\>_0#k!=mO3+e#S$&qmtZfGFRL-lUr2=iMY8PH>@/-HLUR6OY8OT/8_N_Di\!tls/A[Z1#&8H.<Dn4aZ!emju7`/FiT>
%A)ts1/KE*$ViB5npHHjiI4f]u`4rhrRln&<c/3S/e%+LTQB/6')u%,()soM0nGU-soBm?$g@pA,^$lt7fkI564PHp8O'YV'R@EGM
%rVH8Vp=,bJ4n:tOficDu!l*Uo`Qr-3qZk4QcHW]opZB<Yo61T:O32QlE*O.Dg#C!/cM:IP\$n<2O&Vfqo7!R%Pj`OuRm"+8=Dr?2
%`I;g/8@%LKHOI1+?h@KQ=P8YT&mi#jDnZ,-(/O71j5p-SpCRG"DQXG<Hh1$g$a]4>?1ZFU?#DiA^4,8t7i%#n]r_gIQ*$CRMu$.k
%1,f$%Y?c-08b/T=p%VsnI.X[l_Ubu9GL+m3\32S@T3Q=$[!&X$dWY>_hK3qhhOQB;41tY#hM8Yrf5GJUOO#LqhKs`O]kek/MY3Ij
%f@h1qDSf!!%J&r-V9e$o[a:-tcM6LbV9Qt@;mT9gWXk*^op]#4o($b=j6a(3NFekPb/9;&p%HE^"Qe%=G-g_\R?%_+DqhDYp"XmW
%M;E9fZ*`AljicIXIp"mQ_d#k^<C'R>eUjos$YQHn1PaHFhJAZ_mMPV9Ipqc]d@8,S@<-DjNo&dpXcpe`qVB\'O6/[l>Ed(LUT"Zg
%mCs"&WVXZSrr1%rG;`SB`!apC$t+R4%0"s"DAfKjmeH:c$j^IoilX(0eo&6,4_[$(QYo;eSq$<I]=!&`:02+uE_?B-rbg*&Ulksi
%^?3h+oiElDHga-;HpaH*545m<n*JjY4("$2g5Z*j<V5R:a:7!%c9?%#qq-5cAF:KVE7p/WRJ'Oi1Y&(6]Y#^mqI[le"RGg+I(SoV
%dG-_(nM[E%^G2UFqQ%(GK0HsO`EI1C=h36+=[mJ]VlT:?$d$MFS+snGp6@_gWB9:WJehq[<fm1;(?<:V=>kEt\MJAt%\S"$I[1AP
%Kc:[>k5G#'b!Dg#qXN7HG&-d8>5Q=%G'`:FDg+K!^=QdjZ=u].*DA-!RV^WaCX%V2kL%0%9`=[<DP5.sAajtpFB+XVpe&0,hp>;[
%YEl&?S"Ds>Um5.h)HS\aIZO*Y(@fV\1V-`T/7uA8ee,riU:Bl@)\1Fp)M>6>n)2U9$ZpOAN\&k)(4/LHrADFs][23)b$*W/jc=BM
%\?Yt2E,r:7)V%(:Zp-P_=LaA<$=CN9Kr;'Lo<34tn3/PTKD(kje&IeFqM%(G/G/H>omX+"HHk'!k4,M;Ts3OZGaPo-:LBZ3e0!Sg
%O1'8d;br_&Ga_K9?[TKj5P3@5h)sDb1M(1$mOfPc/\XXXeA@t*?A`1+_/A,.\ZWXGiq[>!mIXC:DLplhXd+OPU"dL$&)^9o[GNq1
%02HMNB3PPcBBNSZT5JkU9qHD\1l?<mDej'.n7ZF0SmOFMlMAaaT9d&q<j"%rgq>^Vch7Rb_e3oDFRMY,#pZCcl@WuoL'nsEcA%h3
%7sD[/MgXVhUe/<Ahg4%kH$[tEe>J5m0]ET'dEru8*)%)BS^s/(Mr27N0!nZf?bg<]>*#SYg2OsA6?cjtIeNgoVPTKG.p&P4M0<`K
%P&\Y\md[]%OM9u!M`Vk^TV7iZ#AL90+.o,M.j()?-ER\h[VW(l55W!<gA^Y'3rhiN5#gHg/5>`L`R)hOK.EO\E?j0:i3nQQ;luU[
%8(Yu,PEYh97_aC*l=TMVoWF[Gi>k#Wq<f/+E8;P*)g2$S3?ph6)uA-f6(,H4!XFcUYrk."a9ZGEX`WGQ$u`nog3W>be+Zm]mdnuO
%Uj^X.ce^[&RcNKl1V<J\k%3;1!VN:2#I$^Zg)DE3B%dX%HL'*C`aGO_TjcL=edF9@$eOA0o()ZerSu>gHK._82num>1g/15,:81I
%?)4lQ>*a+sn7K*(ou#SZG%5[RB_L][FAR*+)Y6*D?adD3h>Poq]mEt,:+c.)hX@NsJI%')'5O_\[D1:ImAenhB'NI6EO&81m"&;f
%DqD`d]%:hj2Xn0JKel)6c*Z2[NMgYa?,+(_It)?jD3bMmoQBR_ICFC2^)b'h.X5<*?-I5rmk&D&[WWnGahOuc@l?.??8Z%!3a^*`
%n$i%DCnT)Y35'QPY-Tt`C%7'rSfNKR?0%@,O?`0DQ?OCZ2W+47\n1WodIOo/UG&Q"rA$Edoc,`=]*pb;kFG)7BjW[:0-38u2UOmi
%Yb-;MN6hASVG9CVk00mVm<``m^7&rs8>k8-qSgYBf&J8Ba`unlfKILFmlM!6,hb1<G4mKJVsTuBG7Rn>K26^=d598@c'j-e!139Q
%nnJ'dF5tC>gI4O6+NWNmdam[5cc,KGC;!TqO70P:VI.YM3qS6ZQNgssG`:`WF8'JI(0p*62\U0NRH;HHqsYX0YrlrQg3\#qRP1iO
%Afl5(57QYV*4B36_t[sCf(+go,M6r4\]LD8hH[7n*oFYsa'JF8XtOX/:2e%Ljrp'3>eLHM^B%Bj>fB#.aY)BK4EK4YDqYYE1>R,O
%n9Zr&bL%.`HL3s?+];6uq[<-_]iqdu/*gp8e*a-8Z.<9l-eOsG=P\-.EGs,3\720b[;R[AN^Df,rQ<@t@QBBm]XM\-BAU>JQEJF_
%hYVW/h7[._^,^B/5(Y%^MeR8$b(j1oGOK?rD^F"J%WT\<Y;G^Dm_!LXeK"j#D(^IQogYt\mt20?=H-<s@7J_NLtV^]TZ`7f)Y'@7
%4=oTU9E2NOd$r&q__>jVrVe60Xr&/1kU#>?id'gbG\.5Y>]$l-,bnp=$)FtNLn!3F8oD3&j-(k*NtPDf#D[r6YK)9J?>K'-+al@c
%4=k\3Jd`2eMEJtSG'Lkq^L7hWKDqHlq`++3eISIp3c>"c")9PQ?TF0cUH.qk^l.5V5OKR5NFcf@WMuSgK_h>8r'2\"Bb)jOZM!7k
%K;\2?i=`K$G1(L`mJ-6//7.tC+n1iTP;J:q6;V^F%isJ@T]H5ADt<+[E*dtk8/68l6]@(c8(WpL\/(f3BK\Wh>`H8s52SgZ>4!6e
%`r9gWGZOE/9_d@=A#KK:?R<RPYf?V\k1$U'+'R-9="Ct7L`H<'c+Lq1UKU0DpoQFQE%udi21Btu>XXH84]rLo#%Uk&k/c$$>e%l!
%cr)l%E&s-%XR[o)&ZVOC#t#MtF;AJDn5Uf;-</ij@hTU!Luo#h@kj@RKiiP^)CEi*Nh[`.C(\p;(gL;\$,c9]T%$CFAQ5f.d,!aT
%P9<fc;'cehY/\UmX%-\eq@9#R*09G;RH2,N1nh0:`H-p#I%Jj.',/gZ9O<.p3qX-q3-7'q99dg");CMATN6!@FhDp?d7^Qu)L?Zp
%dL`DUZF:dR_Xje9h+$t4\+t?Rp\Uf/=?lP.VVcR/]=jL!qXQbN8U>j3^LbQ.F&),aj6e#Tn=$/9'mijOo5fSV]@3sSD@V"@mD7c'
%96_8!M*V,E_(']8GBi!Ae;I82:3tA+mkUY`UX&$?me\5&4)Zg:%%V'&B0<s.JL&#ET=.h"4ibF.p]f-8/XQjBm:^^5nF)"irC_(c
%0S@X>+S8+a"#OXI]Jsp"H%lToJ=+jq\uaP8kNe0b/BL,qTs12rljVoqd_&tnZ,Yqa[i_ll)dC@8c0e0$qa\t:U&%ZM(em^MMW[oC
%?'IQA0FmeMEOa6R1^AfjQmQ?TgJ-,QcCTO^q.%keX8VW+:3F(54dfP17IPs,Ab$!&L\$)lNQ`d)VMo2P1RjG?X35$65Bi<d"AH&S
%7epNd\W[./rSoZ$7;R^S*b4Kpa(-Y\<Lkec0.Aou+.#*+O/Rk*%aH#[1PX\1*;TU:.PPTP;>3F.o7Ga4UPI#O]kYE<bAJUBZ[l;r
%''u4^f"[dtC`[coqA37Q320Kl*_PDf7Cd_6<m#a\EL$"peQ&:8e+@OD&X89?>,j"R+M:W:)>NZ2GV%n#,'\[tf%\3miO7&UhE:m@
%gC75;%p?/,^9Qn_m1=JsJ,U[pd=2i(?hh)^CM?i!Z93=r%],`@J,WsCBbrr<g,VR)Q':Z.+#eSTd]1RC\17<qOptLeQ-UM>:<X0-
%PZ0GlT3(RUh@O]m<u\s52u`W6Ut1'G^&@o%s#<I2#lacBrfusaiP0<C:m,kPgHP[am/HkDb'pNSAc9"0iDWY/rhoY`jZid=b;?9I
%G@V4("Q.9HW8jSY+Gac5+g/@s-LWSdbfS#dDf03H^KK4FS"4]nJ'pL8mIt4*RtG2uf:X3uB-eYeO0t-e^hF!C9jXcnom<?ghd.6$
%91W=OI\7b1+Q\fl,;h-dgO#j9fie@BO6itEDk]oa5>$im[T'4iGHgOH^JSX+;9?fV@m'cGNhh/FXP)g3)XX@cf\6@Rc_pAtA'miT
%Q,>c+[,l*\896MODWb9QP7)+ai;`f;nG\rfB0Sf!$JHHa5rSSIY?erMg-+jFq!88$,U7t1N?33Q\,3l!C?FGH*C6(Ba$0:)\CfGS
%lM]h;P&HHt+DAI"8TeLb>#N[FV)%g5QaY6ir/helWkhbnP]clnp`H.I[E1^QAP%pYcKM?I1;bElW#ScAC$X^"'$t@*-Ic$RdXM[j
%VOlHTRVGj3=cjpY<V-0fg(r0r$.Y5Hbt)V[j.>$3URhb^7%"bh&<d!:R])!?hAG%HUHQDTCDc/!J6_i&15:T\N?Y/Z+P!'.X=(cO
%U=u&DcR'<]G6GT?CN&-F/Se:oCN&*0G.$p#1gLq@0/k_T+q^aeTS+IE!A]/,4Y,,Ke"1.MUKa&8je]De1TC/WA,Y,dr_klo.kGNh
%W=b'Ra//o\!gGBL-U:Z&0;Eu<rc_7)`@poU9E"eDlGjSfWf`H<\P/YkJ.dTo#nYYbbGZLoZG2Isaj6dFQhpNSIXVe"PF(gu.p)9"
%M]k9%EQp!*(H["Up?uPjr&T6(;EmCXqFP/hUNNYe(_VOd9S!+Ol6e04WLmP_kEl&@C",pei"2`e\=Nlh"=P!to*!/6[FA!Ts#u2k
%Q2a`H^XUS*Y("HGm/AYY4Tj1?:`;Eb7j.]Pp&+E]T3nba?g?f%=$NR<eW7g]otq=k*3NFuraP0Uk6`"%V1*lmT>.r5a\*?h^2g'E
%_\Y\>31D9\J$HmmB$V"Fr84?"IN?.OWLoegr?POAI`U1nlA)&iFuGCHIkgWfGB,kH;EqqGcVL`n.!f#2ER_<Eii$LT`Gs0J;"<.8
%5C]T0kKNj%5JP^o:Tf/fKe2MESB[dW(h/3:265)29`=m[>gL17cS+t_e#OR2+cH1?B="NYL03DRbpr?%;a5aZfCLZgo1T&[o]h4+
%QUUjLS?o.9L9`eaGm*u%WLpq(eFP?do1T&[r9B'N4Z7=D"4RWRAg:s[#ZU`00&HV'Y34%,\p47OIXZ>16S@H$N*Xa0FTS@JBCcC.
%rjAi"^Q[tD[D/f8?g?f%=$Pb4cH8-3)5'`T<#k'`!gS6elf[`tH;<i\lfXW2q8q.t\WFf,+_S,`57FODffT?7`N5]HPO&%2p%(iT
%r:K90>f^CQOL&)k+,8G)iL3d104t1\SQsLUXIikbkN>o2M2JAVX]8p10Vfu>GlmUSZ[U?^n+5c&QhBrCrVZ$Ik=;gJ]Dp^',iP-Z
%40@n%#<Dr=PiqDDcI.#9g74'$`]n<'9sQms#4l./Uo@(r[B=f1RVQ]Uid]3C>3?XUq+/h/l_50B9kh:hJ`2/6<)8[9>j_N7;R^jV
%6"+No8nS>,iqT5_o-)BEAQD(AnQZmu:GsSo^ACE1\ZI5=%+d*^OV?Gn_R(CSh3bJV^D:si<idE?Y+[II;GTu[I;aiqKgTF8CZVOZ
%1u4S[MT.L4:qoh@MX7CA.VFnH*<joSe-i%9s#"rdEh.Ok=`#?=KXket=!dU.e"=RVUgDc<cm\aSpuH%f9P?gch3u2WT?cYT10&W%
%h4In6VHg%u8**,f.?-i*!J/DZ8K.8&jMWFBl6aVo:L.Rg$HH4`8S3'Fcgqc^^p-&=N9no`k>Ou`3#]u'ZLm+Z:(X_T(dVRQV>MTV
%<2It&bT=aVo:\PgM.)gl7.gu2$k]9BC_8U+JP)2RWQLK#_loB9J["0E?BS9!\L)bm(4R\X,ZUZc\\u$U\ur__4!_m.-s(O]&1u%N
%VFp,Y"Zd?=91r$0qDB^8!i].,5Ji$(,j"ZZ>FU/t0Q&f\rZV@@W^^0m$>tTgJ>aGu=kU"tZ?g7:M%=5Z!t#]JA5JK.!I4'$K4Us^
%-h,Xd'SO%I:j-r4Yc\o[_b:.uIX3$`krT#)q-GgE<"e5XTLms%E:?2VJ4<4(<#cK.6dE7\.1L'"LUVpS:,3dnPe!F"g.7Sp.*q0i
%l6[R-PW2gj'rb$MM?;=_UV`i%3<Q0Qh=?..(:]cQU-Kuk`9A0f/^6(BmYHTglRD-Lj8./;iAH9CS6O:`:83;Y=3*K_5\gk9PE^2g
%Ass)`D-1%/`=O=jLs(sh\a*"UZt,,q-[CSAbpa+@''#jJ'O=bcgg]80;j=@>-IBpT_^Wm-iH:=uQ4aK?::Nu,1bZ-i/LYITiP`R7
%SQ$A36&Q7Dk7kH'-V/0Q@qg)?AYr>r3YdF"\\]%a'4!&f7b9qh-8te%SW50+U_s>^EMio?DDSO$1X?eo)Kg0[HiV)"g:Cj]&ABpf
%/Pk[jVocb^F'YW-@3,_BI[gmlC9t4g$qH$89As,sSB2fN5"?!1;Ud5'hT`L+eXWIbh.7IhH<A5R0JcJaUGO4q8;B8n9:KCS>aXaI
%@@9+J73jlf>%BCedM*fkZoe>^NaZ?^<[GcQS[*#EYpKEA`"hshUsW!iX[M0Rb"*T/U=?!5*T#:cPc4bZ;sDVFMJNi;Q=-kf341!*
%WMR<rDGZVVLKJR1-kK:GhCqQ8&tJgGUk.@1Lo]`iMd6Wek=c)LiuI5i:`(Y"jbni',24M'DAUoZ`W9Fn8P&-^5#SJT>]FXpZZ4NX
%3*1cs_\e74$_8suA:0!Rip7pW4&2tm-a4g11!&`CV)C(Cf=`IlcY^27WHk.?3Eq?i[F60'g&Z(k'\3o=:32X[bDT<'8H0*o&U0-f
%B*65C[A\>D4rE&n(9,d<V'4mF+gHaHLdreg&$Nd?%iV<j#0A]j;_gat4>BnTl9p^LPB?qkNC,eDU3Dk/D-:RF&FYZbZO5r:Lc5R-
%'].b?L,o@X'%-%*OOT5_aOj,`fd3ek<=i$P.cbBF&[]23Fj/T6a1N,hPA=2B4Ur'-U-YY-ALJV.1fY3^C`J>0bbHa?Q-1"AQ;2t9
%E@@R491!3=e&pHebpoO0+o9beHm".98(J'O7`A1OJn.1/'-K.Bd;gnN182+@V?F0Ob;H=s4q8`>dc@sk".#WUJ.-3KW`b%'bm6YC
%Ct=lG?/s(Q"VK:d6;fUoFokb+.$BMa)=c;1R"$>W4q80.U4K5$#HB8kQDWmL8<$!aP^0rY/!XrT;)nYTj%r.G8:n"gYHH0!3W[CD
%Th/^pl(fh]OYP>l:bJK8a!"eGJp)`WU%td\-Ob,ALijQdX?pM=,.,i1CCL2&X&RZUMbS`-EJRYN*6<pB-DlTlSFs'<`Z\\FJg)ob
%`s`9WKMN5VP?:ebOKTNf,;WFVpk=%Ub`5Bn63G_?KlhLFFdspD,*mt#?"Y*'3LdEqWn+"G7e<Ioj]Pn*;XOsS)AXYHaaHtQkj@G:
%1JF^#bT1I#/P7_gWA\5f;Ki2,#$;!l/8g#>%$fch$Hpf!Ud>MS%j=,.Ec2e]U21O27q;U2E&pCR*Dto,A"/cB^c@TEb29LO8WfWZ
%"q;&N\GMJKBI,#mr/h9S9pm'BRu:&E>/X-LWam<CQ1G-KYfIH#,=M:h!LMsq].J+f[u"e(/C`![DUFtt2BC%q$!eE/#Ip1t<IqoJ
%eoD!://?eJJkRhA`_bk9N*<,?YX]1^-.S2d<F0N:Y\-';.F+C-WOA9X`D`+f=[?V16+44kkF@N,&>NK%.4tW5h8EJ/Tb?e$3bP\)
%j%g7Op16UY-Hd>J=WNh$5,fWYP[UL1LCC./_'5!3#?k3i?u`;VWJ<'GJ>'@2[`(5E>6I=_mDn!&eJt[T0-WCp$Ti`hA/c%S+u/]A
%G3#MA$3SAV-TFc""5rd_5_dVNEU,HCQ-t=ig."tKEPa4[U;B9+GU_VuP^+:`3*M5B[2#(h%\r(.ac*,A1JC6Z:oD/Xh?#7>CrJ>l
%bffRUUf/iW1mo768_q3_P?SEO8<'h3#n:H$Pc2M22St-k#^rPF8$.Z0A-2!mb'XMs,G"[&E[t@/pkasPKJHmIKH\3c_@gj>V`\os
%"K]JtEMgp"%&d].7VjbYk(R@Yb%-?/=PTkcA@t<r>?"Kq(p']3KAgMM@Nk"Z&tNKJpgYU>#DQd'RUV!s;+YDr,it3US.[[[H#?-7
%$O7m:q&$-:P!#ffEm*qmT/H!%j^h/JO[VG7.Rk$7$6gK8b0%5.(!6V3SHu%6MVf_fKnQVp\k2]_mS'cM-3S]\ZqDe)j5D:t%Cra,
%U,)K0g#nis7-9`"?o#.n'@0tSNk6Kjh\dLr2Zd?+Ojtf,/_Za(6.bb%.R>,jNTf\](0-0*,=8V)1g+(2X(eoEQ:/iK&tXlgfn:Q!
%%'Y!hUNZ?$Om5'K*>cg%;+uKaPdG$>-(bAZ)aiPTe9Rn3E>RF$!5%?_AZS+\dSsflZ7t(FGNLgL5"AkXpeJn5,`.6>alT\TBkc[;
%m0k.U`-6WI>REPDi&fVXQbJ*kb/W0)m;'GSUgGqK2'Q:$;Xbnu@8_pTW$dJ+/Z].HG:A<"KMP<=4gSTC3ZO#s)!0!]:PN:5gp"aq
%LL9/1j,EC+Kd#U&!`NiEJ[=/0gq.I>piH&fCc/c[EB;!X>;m3u.?fpZ-$I<m#A5"mBn1IMS!@\(3?SjFa8sPKa8nYGod$B:'P2Y>
%A_l%Zg"M`"'6"7f@@iYmE5VlFJ--JB"QbC+Wa$]!#ro==b/8d'%)_I7!eR3*%Z0UFS>gA@JaNm(;!6/?`pd[#!*K)E6k,;,X%[o_
%DK=*"%u:fuFed@F:a6TEYTkttiSN=hE671Z)Gb%LYb[n*^7<m&P(=FO<j(I<FH-ath>@s49M*IsAn?;$WhDd=)cqEnc+7-$`CXBe
%%3:aJ?>Lej59q^BN5.cq4(e:oX(m!`4FSK73$df9*JX\J%(jU^oa(`$/&$naCeP3E38F#/U8?b*CAVsca&?7H:(X1:]`7R`S+hAs
%puiNJN'T)60f:,o,]!VqC:U,i$SBPPMK4km7S&\:#Z@ZrE0Gu?8TUlZ#niNGC<OX@Y^k07>%C/d:l=crc_@?C[bkOTfJI#3Y_Bu"
%W^=PQiE68baAJ.%Q#TYK.`s4PZP[=UR%;'2Xi9*l1*f)+!gJSdfQ#!ajEinT12VEc;$ID*bFd$m**(Z#6\onRQ1L#<0LRKd&/a[A
%s4!`dAfUJU@]&F,*"m%FC3msU1#Nrn))$]-9Ts9s74cl43Y#^&WGtI/+[;,Po/,Ar4]e*3NOuQm5T?+%]YC9Z7k-"Q6mZfsB]B_]
%l[hc5K<*5e)6L&L\'YE>YdBNc5%f_66P%?2`"lU\13O9rH)^T`<4RE_BjZnZ1K4iG/WjH,=g%NpNVtOn)J<-;$(Up(F@:CqCqM<#
%;J7QhW!nsaJ^gbfrbPut-:dW9*!m/tF20#^3&d&Qh8"8GTGhmh&P_p4,26L1ZGXJ_hnocVR*li<fR2%$KUpuXKL##9],08XW3W'&
%.8qg2DeH\X4<__tl@g!KJq;;-EZa]LelBPVG8a+CQd]"#K9+3;'q<'']Z&k!ojllFE#sXs#q=p)FeU'mguZHUnCK)q:XL#UAMBi-
%On]W'.YQ3ZX]rYNb*$ZJ`i$i&=\e.B)%)HVq>SUJ"]oX[5RqdL_J<d#q=<%'di9!7TX!Ep(5cZFr$;3g27r;PW?8bF\JZ'M0N<uu
%^1IKk>#knU7a&M/"7Z_p&pKt#`SHn-&7cn;3KfB#6>BG5NU)Rh,97@*.elDhGSK3sV2`n)'7jPIA\g-(Uq+!2Yfj]ETAr:Q-B9$r
%Gq%hEa]K\/_'90D#pac6KUrS_Xpf;(aGQ_G>')h:Nc]OZc]3d&fR"6E8OjEH?Nh4B&u8X%='BCc<2Fkn.79ZKe940'Pqd*BBl_*1
%@qi>KOTo$:"qO[EJQe1E0q/?te>gq<=YBJ\!&c,so"3H&p/Y8bb6<js+13Km!r_XH6g.VC\-dGS8lO%a6affdV&g-,@]-G//J*e;
%Bj\m?.[eS8C<H!'X1"@)UE<Q<m6>KlCDH\9U4JJ2>"`Uuqrd>g&VgAX6%mpqC!JDZ(qFf)P.IRlk_.*5[BYk9kTL3A1,p.j8\l`C
%6K^8Bl"3K;QIGPn(T2D5N@X&O7?oZ82hFn_D4X1t>Kp>#mRRhc@(klZ8TNQE>KM!<UY[TU(=]tYb&Y*@(hN&.^I!b2M<?e/g;pg8
%aA&:ReJb1M'<_P/WfY1L2l`!<ckWsi$GYp0/oZ)T:Q!m>(%Q\*W*n+@?)+I1%#9=R>7PT7[^o(@KF>iYa'2\PI-8aZcu;-N),93f
%S8jKQeXGK6$ScQ(T+!+SfI(k*F:Uu4I4g\u3fM0J?@cUsO>u;F6'F(UhR2AN2;J-$1cQr3ilObiZ/'@qls,)!\P0Hs4N+'HP&q`\
%q4+t/">p3Ifu!pU(#S#fNj&"Q,1j4OK7tH(,4-0?*q4YuUccO,CRS]E8AkLr+9b-'#i[T&C]`[G_Rt^2+ruF[#aE;4fa&9'=n,-,
%KWW,_MkDV%;Bo"kaM`n9NY*uk:!EfS'Tm!CSPC#j=jKnc2][I$[9b+5,!(km,)3TVf;q:>Oke8;7I`rM+C6O&ZO17gbSET)M%MJ,
%<-EpE'H+<#C>bf%Pr2c,GW\fC(.%9-_lU*XS+\CUEf+8*.)L\-\WT1dW*a1.(=A1cm@u:t9Q?IO<[`WWr$F'h"2RG_G[*dU*pi0F
%T4bZS<T"/XR,KsU!k7<^A&&rs5t[I'"=UB;DDtOo,./Y57ou(XUnkjY/Yt.P8)m;]XMe8OeXRL[W&EFH(fFjGQl%Cb,gSF+g>I(I
%l&\0Fb-;=I4`'5=_t2E8+];DW>jtc\A0L\'PaLs'+sn)O95.G-N!p%F]u_EmAH"uS_;Ct`Kl(dl1O.Ko`@%fCnCtj>.e\ekN)_#]
%mH!9(eg[%jO[-]4L/c:5;%<XU`)%JB,I]nbE"0JbP<%'KScM*e4*&EH.En",M(BNAcQ)^j@`q&4<XahYSl_TCqSG,*f+\,h^bFNp
%\X7'CpW'D"R`Cuo"&n=NiGCShXVc80S<1-Ib/p:EgjuGF^8%:*6Kk.BUAqV@BjFb/_1o1a/>Ld0W-M_K\D%?c4l0[7M(3c;&AJB@
%(t''?^RoHG.p[&88llQ=Q)59E.,DODhZkCK,;grIc;64rZ2mf@,I0asaB"e-'-KRt)HiJD\ZA95r5+=]_[nV#B+lEV@Gh4$P02f(
%&.`>ldh0Y(7&1Jo7\gmd"Ge:C\RlR3WCNc,(m-R.,#r?Wb&PKI)@L-#NS%Bi3%t43JbK@/l`GhoS70/''I`,J'"8'&^pk-HSbQ#S
%('snSWi_8;E>qjD3GOP<H+IL\?[Cdi1XRM,JMsUV=EOm#4VB$\N4?9bF5LKE[DO/@Iao[FFTo5qkrCd7R9E"&3(VrsJSoH!ToOB:
%\FVtcq$F:Sj)@@f-<`#0ZNM8(n<[&6%=gBF2PFn<2!'!qd$ZuBB38:H(FF_3R:2e\D_h*q.D->Tf;@2d@l[FObGlt,psftP13jXi
%Y6S@,V+hZs90Fd<`Jko8XLq/uPI&^Dr*G<LO?K,?RmLNKjX<7'c8Z(pj0QGgcE9]YlcDkB2D5HL&&d.`GJ(-la9Y6"Sc)D&jaYP.
%V+@F(QJ2<I.?6OR(K\OlHt?"\/`eJ2R>*!;=DlT@=!L.tG.:f63T3nJ\9h_pKfeb^9@O5Z2DL`N"Y1QFrDb?S;%U#>9.ElA+I%A1
%$h(uRG#ua0?A?/Oa9B&qE:b'?]36'`L'Wu"ZXF7sZU!^i9=_^hKL`C'9:DHbB6"?:W0U;893qHYQNb0'bAcBs^a_oq1>r6_ZWtmW
%@::=?L=u?bcG\;`W=p.Sg:=-o6dnr\0aslm)kt1?/l<fqci`VG!]eL#[Zl6kiA$o;6G*DP"dT;+'3]pf5b05mj=qj]Ik6hrNJuik
%c5Y>0Hm^P,C?&Ab;-eP.aJS0.CbLPc=%I68TeIou:tu1ddaj8LB$DIM*\cYQV/i;eUi2u:">9uIG.`6SZ-S:>jUK(f=YW7m"MW1)
%0u02a?'(&,j?R%%dYJO42r(rNA46joaE&G+cV7M?,nTm'.Q?<'OJMNe-`%n<^1d5TJt9*UMHbuS)=HQGdqmC];^4=U%Bk)KP0Vu^
%aD*5"q/q5'?FCaF/)DV%`MYQ'Fg9nM1@(=3d/OUE%epAD*[Bs%B@t;YY:.)__Sok+f9>jP)!!R%rm8^Pi$0C!?hOKREdU+S*j6FS
%RO$ilL3KZu];<>*ZDLWriFeXcEc@3"p']<D:nAtr7jH9[=BUZ,#u<RkGEHQ^27XrX#4_0`B!/GEQj?c9i$uiRON@fT1_iq#k`aXf
%'M;[:==UNk1nU'8>\kh*kVacA?75p8&.(Sr8sP^^f"]OdkV.ri`&B!D8&9s!W+PY@kq>m:pcJ)^'La.d$p7SocH62;/;"uq`$U'q
%%+1i9Sp#&B1,d9&AOrdQ-f(Gr:OtYr7.45f$uHCIf*jZOK\=34eFG5Z<@7QF&;Ft!Pl6gkGi/U>/kWMCHP=>=Qajld6s?T9(b!eC
%j1onP_"]d(F+2>2cQL"<4"OP3_7O+]QP6bY;i>>t/2&9ln%dC[Ei&#2X_;2,(^>O+Kg52s%\9,.p;*YiOQ?t$T99^1Zro52OfBsr
%o#sW_`'P&$.i,0V3B!a/"&\V$OF!ASWu7GeOq5b&jC26_p<QRWDNPb>37JZu-L+CjVC<pm7V.Z^&ME$qWOb<=SUuRX?[ZJ_64HkM
%8G\ImlU#5NZ1fRUpq6<S.t@So/SN$K";]cHE;]DA&ig1i@,&Op%4Ki6d20*W$C!"ER9P%jB9=<):s+2\7[2AtBeb0IN6R4>*PLQr
%EUb)c9GAbUaf/kum'FoT>bLjjNYtP?UJFeu#?g$Gni8o>C`^l6Q/[u!W\J&Rc_.2[;j$haOY[!rO#Ha;*'*@pa=n!)=].h"Jq"E:
%&q:>l!O&:s$]#jt8->5=A@O_)BFYePl!gm=6LL9mY3Q`Octnm>&Fc\D,pYLKCBA!!6*n^VVA0?n)Z#XeALPD!LW'a7&>Y!0#B="G
%K=uFFDTf3b%EF4GatNRE%n,Vr3n(*lW.Et\D&eT!Khg][P4@9RBF_K**)eS,Tu6h;4;*pSSHM6e.CgUCIcd=YXAj1&-X%h:pIq<j
%o><btE:N1rR5LPnF4t)Gc6l77dTWf&q#)ARMDU'R3&kYOBal":j3D>K\N(ibnuFumEbiCrB&%c%n3':DOYT^VXGE[mS4B?k8Ke?(
%3F7>6&d$6iB_PI?$smWW3HZ1J/pT:n#E@cI2QO9P5QMp#<p_n^NKe_"-Z)VRF(Dq",:@Ll"r93e[5'9rkOR2c!k74@PNKsR%AN=\
%='KMni=duAeXiPeQ_,L8)_2rkLu$7IdQhA"lpm7\O-I%$DEV]ogj.T6@?/Q&CK&&d7XC(u?[@b-EYVVAb5#W,-*s\JK_R?K*C1f%
%3]uEQi4`jZm+dA]JGb^?Xff+(\;ks_;/;uOdlh-"<9?]'4J<t6DD^m4ni?h^fZ7a%20^:@a39SKB1%-U=gdq@Fl[n0>-!0XAWu;U
%N'j=]RJE@LE5pG)3$H@i.PUV@OCjPVg`$)fN19FIl-fEa2=soqe^af.jcteu**O"eP<tt=7p\]^P%86F,*UXKmOSn'MLR2'e4KF&
%;Lf$@:!54'?:1RZC%Cc6U=ut0o4:ed1c3Hm&\ZF$@nF!=Sa]1_RDJtaNq`Mb1`WT=!B[6B-lbhp!/681@dh--%+8*7=XhuJ%CQC-
%UWJ?G`G,Is-lC+R[Qt%DIKa@:VPSpZr&Y>t8ti,YUg4$tN_2j$-tV6D"Y]-rIOiQ.k>3S9k!O)3es.lOU0V0MD'^TlgQ"W@oHKB%
%*Q*ir`UF9rab1#=GiL`r5^sJ$$"-pd_1sHOE81Woc(PedF687A!)@&.d9%hiZU>CG'TBiEI?%1#W)uG2#=7iMi\O^#%n"$Ba>r4g
%YG)Fk4Dnd[;b[s1^/%+e&`ej;[WqQea:pFcl:X?`QgS:".m[:.0I7s*X[&CsZng;_eUA7;NQTFDQ:2t2#"7V?C&_oYQUF==$*-]C
%ouFgl8Q[L2ft_Y/agEU0S/0P<aic78Rb\bl&I^+;[-_6KoXUd%T^s'uk!Nl6CIS'sO0D^n'_"Fdq@$L,4s[WU(uc?i3-dT:4W`&N
%,le7Mg[k6.O`>=bo2&/Cg;IVcKh+`+\EcI&)aU"(#?_<8Wr)*oD9Ia/G[42rK0rqELco<)8X.oA>7kE`<bd8#d\+8ja74C?HK^kQ
%'(F!>)./Zp6K3&I&`g@g"NXr84/MCV8<T7g1Nk:$o&mJ7WO!*M]+9$eqFGnQcj"F3nU-Q\WQR:NM5&r'c=H:iY@D1,KNnrDX2L%S
%H-l*a:r$%L``s'M"Lr*6b@"7`b`jH%B0?R9+*.;UP.;m`$H[o4EGG\4!E&+[*H#K41pAU!]N"M-,k.PhX(nZoGumW)$fL>E`9eEY
%(]hB^*/,7d%e-8cmMTHV6B7l*>4db`cS=PijAZPOn4VA.P-n>>DG$rhVgi#+1@OVJR,JMm`a0CX#q]1-&"EWTT58fecqD]X+6B>U
%TfY[-\J,haA5nj_M&Mu[8jJh$oLer75b\,.pqb9%b^R&^A-2MoNPMC.T.oaSKh(j@U5=>)f:3cn1\5Pe</hKo;7KhEI/,1>krMW=
%A)8c3>fI#mU*@a?)KRau)_oEZRW7[A*pFD(781c7hDk\Q+*HgsnrJ]-3Tu#-Nr<(AS^MKH$F!_%gu84B]TIadP2,rPEpsK[-DU<F
%<o-dU2iM+:i1+8g!cgSm+tdcq`0AZ8/5.LZQfT&LbqYfRnG=qUU2YkE81.iC-(f+YUHue_Z<X]OQ7$L&gT\PP_`#!0egB>L>o3.9
%MRieo==2a/j(3,YQDksZi]Jr77@W?n%<1dsrH!ZN5q]1is.%gMZ=5m@56!^u#Dj-<XL".!9@oSrbFPr25bSp*(a_JF^cnku.dpcU
%$:s*P*qS$ZdnrK0Ec'82VG'_fJV+'eJ5B@\0%N:N`T0fDCqE(dO9CK7ab*,5os0<"XbERpK>CE%E0*s!EOVlE]L9b+cr*tJ:ro$L
%39)LJ"fY@DR*q(QhW)RZ4-TdpGJ];!Z>ug8;B6E%WJqeTK.!D7;!*<T3S]Zn_HKQM#_b]ZA:37U$2hhC'cepQl/i'qb8l:M0H%i.
%o8LiQ`eRScpRWcS6KoSZ(7@D7BfJ:[hG#.d(`W*D*IR';!+,hDa>8u.T0.30ql""ral97l=:?@G,8NWP&/l3L=#a%c+^)`/0uT!q
%=:E@b0bdSI6_+MB9_m<Q^Q6/sfHRgZbG5]NfB*>h0nq,h-$]U#,hM5_$'@&n!_niEEg")"PN;t>?;H_#i9H]B&F3mCRZ_k0$iK`G
%_G''g3`GNi@r/%5r/@$nc^:];3`BuZ)UB*:fg1&)1KAuOd:+pE\XGVmn:c`R&ZglLM5Wbp<hTh`KF(^L-OI9=$'XFp1i\\/Tjs9S
%>aGbY8]$]!>1.n4N)gc\)M0*3=bWU"Y9_5/B,%QrED\(tJZgl9Ou^iZ&fmNWH<El%<WX3s`8ZTd`Z7XNaNf%f6BNb-'[noZ:g\3>
%-PSRun1L8gF=1b(\S&QRV"0aV;F<HLfh6d@l3N"#j:/ssha.ps=!lh=8/T2ZM18X)1]M"l/K]-*0PAo_aQItH`Z[oIaF.*_1knoM
%F9(T-BY_jcGl%u#P2IdDL`-251K6:P_3ISfe5k^58]E5L2lT?HZP+H]JNS-S+&5Veo:-RVcY5EdHR[\N]Gtcr4XS7WZ?$\"L5dIo
%7u3AAl=9s,a;0RW@8]s'JL%\=:lukG230Pmo^4NQL1)Ge5;&"T@7cL*Mi$.C7k0To/f@JcaO`7KmQ_O/TqSDRS?B/(9B+ra+W5e=
%<b(ECg3b[%H@j,=W[K,rTd,Y$>"&TE4c/qc#bjWH_PUR;>;N!-N>YZKUsIhT6b]FsN[/'INmr,=fHg?sI,fmR:'>9.(#tB,+bh9+
%3`[buF-Vsl^\si2gKI0\EZJZLRMABiA172p.54kn=u7#0bogam[@R+i0'uANcM'RmT[Lr5$o!(m-V:;!6S,T+;AShV)&+k2<^AaY
%f9XRL.o#1HK8##,Wm^[)#56V6pO%A>mYIi@r-Acf7k$J>218=Pa*9>07j#_oQ,O7d@-qun"1@%uBYm@pcQH.A7q+`W!Zt3:KToq#
%@1`2O-bi%^$p0&,QUN+[i8UEc$R-R4&\cG`h.X?h&nD#O8s"Rt#c.(H/O)3>T)`i-\4r6,O[8Oj%/`DuQ8kUQ!*#miq++J^.6/;B
%84jsP;\G])"3E;R80Abg8g4$Y49cj[gK-*7)3bk-8p+.9.Rm$n1GdO[86mV>E/bMHaB](d=Bg!_aq4i\):7IRjcg\m^KkI!\H.Bj
%=_;Q81BlVnK?k!Z[%!#j;"Td&2t48?XV++H4[MCSVO,S+qH+(>.a7EL;GT(+$CuU_lZ<3QhPRO<hP)>7#8oe3//;6V(tg2q?PX3/
%:B7Y]5Hb*A(@nYjDFij+Ct^5`2o?d*A54mt$MmL-DomHOXJ0bnPo#T>#g2ZVD-4jc<&@(CiHg.&T-^<J]$mods'nD)Va<4[7G_mW
%?]'dIc[$i1UnLkW5%H#-?nP(I30`Gn6AKju4XK!&J<*'#<\dEJ8Nmd-1&?Qj`_X&$VbgXCKVAucKj.jscsF&0%=u!W5'Z5?*$cVZ
%>74MG`@V@L)95X-.Mq%D_nX]qGsr&$P3b4Yl&/Bb*+'jGrJF?\9nf\7DHZLR`&,D;.P]/21*";A\e;d:e1!*uMuu;r6Jo[)4TK&X
%U-,]D"V'05V.=@cjZ+V\K6"?YYqX_&3M!$5Rkh7=Q5u6uk4]A\OY)cTB'5q!@OV_PAce/s@\M&ZNjMi&^J[)_eOcXU;#7MPHs$kg
%!`N126K;3"B.>QRiDXP!q)#&XHqo]5aCZEq>@=lm,D@Vh7Ic!h3A6d;n%,?6'@B8M+h<tg%R+DK]#9g9Q[-T9@Pc?K+4JS;^8DOB
%7n&k!^$3%cWG@af+Mf$n:rlFhTF`@1=l7@P*`*oGGetUA4t"HBV5!/UFfBb,O-aEhja)!1HATE$TWJNI+^6bt]gFADTjfWX*LhuX
%_$]Rjb\S4'>^8")F4PecjWp?t0QG>E,Ti8nM[>J)H[j]48pTa0:T%;eb_i8#MC8_P.I$sjr[Kq<'Ts,j9+67VTbE\N9akAYY2IMX
%4/VqdL&GeDADplc>3d"ip8DI>3h[fq)<&M2pbBdK7\PH)%aV-<&fQWegEE*e:ini?dD7+@*F&Ysl"+&!i)F.G8k,uEG+X9/7p>)N
%]]PB5fA<RE<(8jR0_3@R+&;F27D7(3;hd=6asF*_)M`-n8lF_),VBhrKM7^0UeY.>D!;b<4Nam#'NUB.4sd8j6:&cp59gGZ=d+dr
%2YcQhaZ2X<I1-Dh[=$SdKb3+t8>\C"JjdBE<.u]96BN_]D$r:egoj7C.]M#CAHH(d2W;;<5UE:g@m-\<\#kc9VMRhuYt_`3a=F-d
%'a0at&:&pNr6+H66Xk'Vb=72'Foo[Ye)NR;j.+P`39cjrM(I=L$kiVZ*"k0#r)Br@MPh/plA1hLe@WSn1tKi?XBd:0GoBgkoS!L"
%3W[\"onIK,&pZAMkmh'1^oc+4%`dIId/51cL=guk=fG@C;oFbla1o*6Ro(#\%$!n3ik_lIO<I1ob+A6QC]KjFP=`uu"5s&,L*6$J
%kf5*uOi=gVRr'4Y$jEZ8d6h>e31!+i;";RS!Yqer-SPesDt=6[ETDMl=..d(dFIE"f=Bsgc_HXu[7&C:I.P&tHoln8n6\V?#`ZuO
%.%qmp2St-k#^p9i:[4<m%-=7Kq%E^-"e$_:jb7@l6^ai'P[rh3B-:W>\A2#a\EUb9@&r'&@Ce#1J4c,<`!-qO^oFUi6CBC0$B$tj
%!uWVOjVCJ*dZ"HHX4+l;G9X:'FV%.jh0'Y"G_sZI6S`"C^<Vj/-(U/2q=[7#:<A/B?"gsTO&-,f,33>EeQ@Y7l\CK+VMr54+kF:k
%npqfE!@gSOjV:1/N(>=9djc'GBSRe)[?t3d7U82I_7'dqPq5n[g%U[rSflg/^h$ElGooe)f&%eCZnp2<:aR7d;&(LQ2`3C-O2C'[
%%@a^B`rJdW=-S"X9rm0E#l&h)VktGhr(!8:41I3>8J2\48B&Iq260RK":;]kD"M9EO,+rVqo&[d6:@h>$R.@<WJEb%5VKt4;A7s5
%@U[E>2#&6pHuZO8ej"YZ'oWe':bC()]W29$'iFaC0r^(P'omT/-r.\1S!+aG6HBBeK>sr>S(rK/_iq#(qGhG..#-?k>aqC>]YN12
%ACE3pGR,c%[6fSuO0RX36>KRj?X*TsNb&_c[U:[iGF[iKFsQjOH>[8KU5btAi/hUoK61*B?TVIIMD`)FLet.BF#A8!#[JcCnOU#B
%Z9r3o`TCieC4m%r_B_"U6Fa4pP[_R?V;_f3&)<'jS%nu"E;W@r6T>>W9.>V#.2Fr8<3nQhna>bcV"!@hLDICUdHj"g.H!\<Fgus7
%=bX&XV;tfGJS)2FPO6,;c+h\(ST>!^=BL^lA+;p32P`:`pt!-_<9P,'ps]0i_4?c_\:p5Q@OT:Lb8IsI6,+ko\bHJNT9$rZ53iad
%PL$r22U"9c#B3*sd>JTOa=0sN$6<ZR.>aJq\s$%;#nY9FJ]Z:^F'[l1_m7!uQ&?dj1ND*KSE@TH8L#P#e<9W0OsNs;-SO!KZ&S:3
%Xng:mG_i[e16b?gZNq?n*&%(_(oEG69CaSp"FP!>F&#Q#7>kCn:K<'@LRpuA+Y3)7cq$m@X&G0(&<0u<qPHsA^PXZd"d64p'jP;e
%.;)(Md=j!//?-)/nV*o,bYt'k:_hqe[:i7/:(>?5W[/HCH\OP7,=*0kCFUWrSk2!\+pDZeC$q<nXP.`kcH]Y]k?f95F.97g;e8h0
%KHlDS@KfV[@N)eqGcn*i-#ZJ>jHg9SbK.$4'f^7`i++gAdIXUV,n/tK*_u['nWBHTaF`&K810deJQIZ31<eqgP5OX6`51peLi=M_
%R@I9HJI;4=Jh?mE^q)s4`PjND@jd(bE!5_g7_!CGI_:pL`RMt1+2T5Cn.Q.LfOiNB=?aQ/ir6o]PA,hld0C)u]+Bs+&lDj471lQC
%pR<3?_p!%NK\s5:dMUr[0eeCE9+*N3cIcTi+HqF#erk3BTfC$a-kt+Tk#mWkO5jLKP,+]&"=PBJjEBO)kZXWMWUQTWC0%$i$Jjn_
%&RSg!,)2nmScAp^9'g;UQInG=8="]b!=FWr0,-f8N=dljX'JGM7^BZ36ktT$Kd'_rJ4:.4AN[?4N/*_R\EO85^7tat=o$W&fD(V9
%OolpNs+=cS4%-CbTo<4d)2M0@he9eq+6Zf@=H\QIJ\uEl!O\*C6VMVD#CJl?IXZQ<^[`H/>I,ZAcPklpSh43C)cJ$nDV*t;;25iX
%#1M,LI5D?q9h!(;o?0FbnC/QpUKpR4(qW<i9mkS9]Tl##,ZE\m.<glh68f:@PO9S?r#%]p?j<sUkE_CoI/H!aOk+d]G92(=S-ca%
%>YYlVE%t!-B(oe$QK14Q%1ZYY4SEbDM>&?AG*M,%&rBrb")aCqK`h+=.FiF`@756sOn,_Q:Xa/JP%_u0UZqXaMZ4r1;?$Q]Ib"#)
%#QdP\dc0o^Ot@QH8pR58WW[B&:AUGS.-JA[pcP83l);d*OU3i]adGf*s5[8T*>eW#OC90m$&6MN@jt2r.Gmk8G[Yj>"8U"'W5lh/
%-tIM@q<W69/ftG;UDd\038ib/8g^A(+Hbi9R/E%E@fe6O&c50a'Om(Hi>u@&_stZc(+K1>#[`F@X;O^OCtO+;/pf"1KoJod\Z'Q8
%nKAck+(Y;S%pS*-Yce^31Cc$,%Ma_CG1$&e=RNX@FW,_ogK:o+*=l$_@/h)Y(-]<ILE6mf?N_[,pIVO7:hU?@(q^BT&NI`uC"r/S
%Sta>@r!-*h724V4:R[9?9U(g?fQ`qXk-BQJT3U5n:l#91=XE((5c$m0.Il%h.^,`$:KH=cjC3TW#i-%PkBu^5rLD]lm*7sUWDt,-
%%psZAc_*7",If]?/_;@F-?;]KT@HkH2=RQ[cPkmE0"_giE'X@!7DTV/F)EKV1l<B)BY*`f@bDK5#qp;^3tm?#Cki8%Z($VS@E9hK
%2BfY7LHS2O*g?km*IgdR>$#6,+HBoaek&0A*\C0k%=Xn3O!BP1'ZcHgWB:C$gl`[1:6i)u](W\HTqfKO2Hs<k\Z?<"^*+UgcGE#s
%>-`PIE#-H#m7?Q#f(,&ERWoBi;hUR4-(WXDehhJ=/sBlFdh2aY5-[dmiN,L1j9.L>F7'6-,q!VekY5L.VbK\kAVAm,Ca/Un]j"TC
%T!ORUNa#H]7r]/LD8ReQr3&Ps[4,S?rm_PR*488Y4PfOq7s^EIP[Ra81`RS'o2Sk<bXDpdf6(c/_e:=CCrf,k^RAnQ;rNrqeXiPe
%.Z?jMaAEKpoY\a1)oi#rVq//\O<U)"LbD(p0!HRua<[7ZR!Sao5q[=&a\`?FLQqCkD,*VTKHJEmpQ`&/U?g62T)r)GW5&jo+-OK/
%B=[-!1O]]JPDP\YPNQb=[38m6J*d6mrSb^$-5hLo@9f4U"OUrUEZ"^NM9e.kZb#@5==]b$e7rn?@:iQ@j4RfG?5um5l'-RDZu9T;
%5@,=`?-OLU3G4H=</M$Tl]tNe7,D(kUQO2CHsA:<cjW)'T#%Z!6@p!r1F2*sJ9"0oi(GYK4'X4I>;gjdin0fh!;kiB"OW!]&VYHq
%9hF:qPQ]Pc$-CPO5?s.]rqQ:48<Hpr=.eRd_Ul(KbLs9`\KM[HK4E%4aN$XUhd,=<%p2p.(jH7[eI'47,q)h-1n0\9((:.LCZ!Pr
%ac9l?+5m-Rg<?id7-LbLSZi+s$.oXSNCNa;fRRbWkS`%B^NYc%LS>ufN5!ct-']Y=/Q!4-GbFMASo79\[e;:@p30M>)?SdkA[*J<
%JIA(Q\.tW>"U*>3M%Es]fUtE0@(pg2!Oit<p'MocEl695Bj4iOWJOVHlj";-_6K3sNCD7$'k#iUF2_nFV9I&a@cq8d%7j853W?^T
%\>o9K`DFnkWls*m0uGl2.Wu]%Q8o*VrRJji7ZXN-#(J(H%/bnFF9<4oPa\]n*hgsD3DuN,.#f[U#F;X!0W:/eL<X5E4j;CaW>'(>
%'9NGKV^s)&SV3uP^&OM$VpD-dV*W'Ym_(CAoMW)1?,a"T4`=UXOs=;&jBchFQHCf__eckUCCjE3>*dtWE3u:Kh9`G"2!eK[d0CEM
%M"=YI\h;c//(N,&2$]-PGsF,MHF^$5n\aj(j4(goRrQ#)+'P@*6F`*]h'/fi8ThMDi86+A@U+j-ou$QFV]93^,S);UE)u/\[[.?H
%$;4s_7lm2ks3!,R$^6r^B,U+N%!f&cM<s,(m]u@8[us,H[Wp\<@qhElf$*g\2MkaV^+!4fctj0h3:NdZF6hND8i3U+H?$6?bFTY0
%>>t6Y6Z0#ofDAG9.%>;qlsk/s`4]W>;&"[LjY]ND@b5@HT;^p.("7YN\]`")ge&'ebMmr:%f%ftYV+,]<QBo%mMr"4[>$b'H[4^*
%Fd6'W`j(lthg3IO\(9'BjCiHn^P-tuNY,eBXDTo<bcVV4&<Jr"Wq!VDL^5H7QUC1_\D3;S]%`N:T)O)_^%(O"P!eZMGj#%UJgCJ7
%\>Np(D"Z8LR6B*HX[LmSTpK9W,m?&a8$C);=o[lugjS5=D^C1ol!(+\iu#W4!Fj/Q]r]lKSUqc,$Gp0:a-PE%+h-;bi1G'Ck\0Bb
%qX6TA`d?K5%_;Jrh=mgNQC&OeC@,'t)ko12re[3Jbn<enrRT.HpKXi:kr2WrgV<]Q]5P@ZXlPR*IgbrKIuI8'*2C*bW8,CkCh$G9
%`i,tf/>$EOeej\,(mSrsb0q3X`Oe<o;>D3,ZGriu`i*]`<1_+.X>)2s@oV"rQ.m.@D2cWd(mQsJjn$U,<m$\N!T#)eH>G6t(2%3l
%16O!Fq13h\?G#Zc3luT@cLmL&QP1o:7WebAR.)#I*j>N;Kns6g3;m+!"E3OtdRI*M-BNUmh4TlKpdFaX#:41bC[dIqDs*,36qN]2
%:C1(``#&W<8W8Zf2l^d;f;oF0PXq.CY&%a"TN6jD9,K:-Z'irY[#HOVHY[b+;TTm9$W`+5J9hHXSFS%mQZR&ioHf7"URAk@]2MG(
%a2`)N5T6!X*o6#@(n7q)^ISFQ%e;U02ld_D-52Po[DP-8'Z98X%og;$PB)#2AtHDs[19g@MJY57k-V=7ee@n`o`rY8DUcN6W2h^i
%pVoM5O.Ft4k1h@CmKP3Kf3Xic=p-FGa-'n&Y51DST@BK#6J^;FNG[RYmSs.\Cgc1CKe7eDXFkQ=4++S;m?7ln\^Esc$mLsGef/aZ
%;RYUOhhE-^Q9A@;:fVPfqP=&45R"T@.B:cXaJlbUh5U<D=XVQUo]MZ$28r/*@$:;*VpZq-fsZlWgXqN<lV=i`9%fY6Z29dde2pL*
%&\d&"j-,@:bJpu,Ctk7uVogC[#G3OIR]i1&PM#&MDi*X[H%8':j/C&jB6Mpd3=5F^YpWgu&tkJh"0BFYkQUt^iZ#$afoh@C](]hh
%con4&s7"K^L+S<_fr1)7lua1f.0;8(o`rAU\C/e(9t/oJEA)*N/9g^3,ulkg+<n"D+iNEen6-rn<)N>TB`;pCHg\>mU4lcIj&:IA
%5nM<),H'8jibigh&ue*@@jZ&e#q-9*W(q$r^e6MK.&d7\][a601jT>u+WC)`m(B:T8)EG;8]p?9G\J,0]hpOtD2<&^QKbqM;c)Be
%K/YIR/-FEC@FHX!Gm@Y=Hb865`7eT+?V@4V%YWD]k=$;7>O:g%X(1(aD.jM"B!qC#&q($q5\!)I$\gC5'a'=)g$O?2Gn::,*^eN8
%+sZg8C_,%L3tG8N'#1r/H7u91X8)Ic!d<qS)l$nQ'XQfBST72LE.=\Y$Ck9rmm%n5p"u\OKaf$#'H-#>0cF9INQMX`)AlT/'e<Mk
%nSrXsjHhs9OK.P>NuF;)W,,U0J"ZW[m8"4+@H7u7+Q%`2io&^meH^_Jf0HdRGs/+!<KJ"+&qIJnZ3upM%jVd`JY#KQ5ZE6c2#8]B
%i,N/n0+uO)<k97i4JN&]36(ZjX,D%"6gD#MRWpa7Eh.'8`]h(1$cHK;3T&BHc'/q]VZ=dQ)W7VSJA1d>aWeG9)Yn%XYY(Hq6H?aK
%BW?Ds$TM,);ngb2_Dtn<TQjboFSO`$#ZP,-%TK'hNZ;_SRcthg4JGG:M><mNEAfDGiZD<6/,WT\S6BW7'e)OHC:"K&Y]ng5!dFc+
%'>`kl`hqBTM=,uX]-?`9d7]nX+GB_Z>SI!U_K"9R15#3'ZCA/T&Zec0+))kMVgdb>aR^*`or/lO\-Y"_PRiFT21.o(jOFZh_D7Od
%5Kp+NP"pq9+faXI&?AWsb!%lF:+s314;a1=FCZi*2]#gW@m]hIY&WbKlhb^Zb\b5(Psj#;M;_F98#FH_g2!enRc0U?_[GC_Mk\&Z
%:'6/#HNSss\64's(O@]0>h=]6BAaZo8APB+5-uB8T.uFDdU!HVg?6[\O+Zb%k.a@G\e:3V3N6D3l40.d`Lq8"B[n=La@!!sX&2F8
%VEn"r`"OI"C'\MD6Sb]/Ca=[q.N3c@d/6I4d+NU"@(O>1doqu^\6sSqX;qHGE];7N\3?t;`X#lfg+R,4![%.MlOFN'<Mm5'l^E<n
%f$Zso\ro'2@7Ddj]+V44#M/rpVaQk0:$fcbITM4u\)9SN]5mCH\-auDk5p5BWf>YEh3S_*7Ypin'a[L04&$p;/oYPn-'?SgdPoBu
%ncr>g%lnWA;n-c!<RTiLf[I^LaXY.&U:(-,?Z]J=*(Q\5URX8-R7_PUCD!CT,KT]61e\0h#0>6'SJaI`*b\qrA2LP^D9o8#hOXqH
%%>EU/gigB[9@dKT;hhLlY?j]:T1Q(:1I?CrGGV8G/Ss<<+.ZH=B!YTo^Cr)_T@45'K8m_Vc8FYqTB6Z&,3,:%i7i3>@Y)GYb2"u4
%D3\A112%Z&e]UM,DM5!4_lq*8FP5_3//114`T,_(MM*;@KML%,_q$,I[nWJnd.0$9!%g*?.39C^B,(*e<%G!"I96e,VSPsPdgk=l
%h;Yrg$))"FSBcb<HR+8F:#&XH+RN:]jG#^0?"4JZKs?BU[ZtZUQ.1?PTGdrGH@.;t[h;R#*#<E^$tEsHE,DI%@srM=Nu[DV;/,'\
%jIsBc;rYE$\e^MC@dCB0CV+I?<gcc"&3oKe+TdfGI0sFlV4]-Gi.L0t=SEF=a8oi)("o^>`'1X4fLjW5_)LRm64lFTVILIt.5Y^E
%7iCgOE*bNG.71H8,d%+'EqbPP.#HJo5i=\S2'DAIm6laX6l.TX!*JGV;)IA"B&3C)191Cc&kKKOGa(iMaMOj=Ai6[(c/V)iqkZC$
%C1?lkE0-IREp_"42?@[)J>O[11*7kF298gPE(J19rt=]t>C5?bhl\jTbB9VN[+*X$(GV8BL%0G7717/IoB_drm+t$LSe`%*@iiDa
%n9srkc$]%+6q*D)%Q][paGsDY-VGkqDOA5knZ'a1XDn>a=lrEQk"ZVjS-]cEP(;;E4JW<[A4b4l!(o&*iSRTg:,*)20A3F(-r5Bj
%IF]D8Vn`>M/2cIr/1?7-S?XQQ;@$>EZ99IQIl<ftCBu(H:K!YIE22`8.*#&3-5]L1-6T$[\>Y#%%6D/C97qOm8IuusS](,@K5CFn
%Nh)NajTl]TR6Z^#XZ?Ym#"$QM7`?6\6W@_Xcd(3`Q?2ab!ln@@Z'B6l>UIs&47^hALE=aGh1Pj3DRs]Bf!b1M>CY8,^PuE>%(rqV
%Pq@B#m9PT*eXG<#WGIi34NNM7e2pLFDLA2TR`^KV%U$ad!c[>bkoK$25Ti/TBeHG/_f,bt.EKrXQN#!u7Ak3<M++=PAVmKdW7$tQ
%WYDN1^n4&"2[h5i]r'2DO&V,[G,&*""b!t'7Q/:VNAJkdjp,XVB%HQ/_o>18C*=uEI&P&Fa:^5[0WdVSE`sp2.89g.Ao=/_`Z#\j
%Jqjdi4!OgIT%drL#3@.dg]hT;TA.f%<4pl)i'HYQ`Sel2B8+hCg08&d,EQc`XU>UbibS5cZAi&f/[sMHj'?OKLYQJ20%$P>=Ua-,
%BUIneO&88?%E!GqbuQ^oZ3GC'E^,PG"4Q8eZ0+$6]Kphb+no>,7\\EeU`PKB5Yi]B`$4TN)<bYDB>rY%A!B][j8ZPlm]ECG=s\sZ
%J+XZ/mct.pF!SlZ%8f]hf+BR^\(h<MSb\K8#f13@?`YKurO@m#jH*S]k4O0AU[IFr)+%K7YXA-QK\?Cs3_Ibq`S>UDVH.%oE#5s4
%b:WJK3qAG$m]p"pU43ir7hp4cn+@HY-s+9aB9_or?ga/ncjMV?76f":AYLSr?:&!k2HfV&3Ys)5ME),X!E2RHknAsJXFOZ:pi,E`
%Ke>:S<nr'$-s#2j)tClN(u?t=AU1;64GuonrP^M-_s';QpXA8`*ERRR\?^5l^>,^,8F?`VC+6:6p[4Xb7k$+7V2:8S)BoC&RWMi5
%?mMmRTr[@u;u`&r(Z!>I%*b8ePrrk9<-^Tuc7)nX>O=Sn!S!9FAnQ=2hC&%^rhB+:a^i3(h"Cn4)7Ni+>g<:Q.KZD9CrQQ2>=MUZ
%@trc=EFu`]oP;t[[^#hFkMCHM>KJ%4>J/]2>WQAS"(%BkkIU#,3NtBqF#[m"G[QI1L)"a<F-X68[.-8=J(lQ!gN^23aXajNN'ErC
%I?k:0b1r?)0F3o/7?;j8$sh`0-tB;6TciJuW40X9kk-5W-sYCVGMRMq>KJ%4>J/^8*$[_iB#f1Y,iC%^M<Hr.l`P--WE9-hi![$L
%XfW3T>1;k#rbK-bb)P50XZ?-=6Z0#ofDD`hU[$HN6V)(\WN76&Bq$-9P54<Y\KAg^5n:/b.IQ]1kAK%U2JSKsErYfBe//Y7H3+-\
%6E<,kedQFoHC'Z&T>jE0?W(3?FN[rKhXsoiaSi.oHFd[2Lbmg6./LRY77bYn5V3+=EO3iMhZV-WiAh.6qW+.`%Dc!HX:c+5j]q&W
%`YS&-`'qujq]/.1:]+A&TIUNP.j$Gl&H'S'X]_;%LI8-ZL9Qr;ooh?.PC2;e_qX8L(]7EXTnXn9?f/GuD]O"r6MIUOCesbFmG3Ob
%E.0gQH9D6bOB_H<>O=Iuo$71fG4/f-p9#p#3f1TiC_il5H:B37'i_?i'a^'<\heLMHuPpRBCFZgqTaRrLS%B#%Tm+uO)*@:Y(4(i
%g_$+XJhP_Z_QYb"_TH^WElLmZ4_7pB'`GZ1\KO1Yk9t]!+a9R96G4IaN]b!B&HGb5H9M']6LdT3HY]_$@8K^'m_2lRfpYUU-i:BL
%4a5Y,WhmDiO?9YsCi3t>g#YoRe$M$`]\*`SILn)#ZoJIqU4_>u?Va&YC<ltVG695&npeoKFm#odNHV_FoJeMc+=kmYhL=:V!;E8G
%_c/bibsiW6SM]Eo3cqGelhhrOoY_thmXV_@M)),_=_4iF3Jm:\]%-MdlC\iN7ptG^8R88^e)3Z`LksQT`G1Ae+o4KU<Z,Fke$Sis
%'WBVl8Q8&X9@U3,:Gl`gc5&#lM=++G?Yp8iZI@pRmH;'beENu5ofc6OmP:J`LM-O-KY]o"93dR+'#e*DF8bYd'sDZ.#^;%uT463,
%%$J<Yjs`P5MSejZ?#PP3HK\9u<_$uE0"\^lP'[#`e3,=e\E0FIS63L(j5XHOCX7BoQkeMTCF%_g#>8uk4Eg+H2#WPtCF1UD6u"VU
%IjspOMQ;5,:P7M.@QS]sGc:4Ll27cY#!qP[@kC98F9OSC0m\&4Mq+cc!@pM)]L6a/F:m=?":Y7<++*Fi#t.7bP!eZB7.F+r[l%ES
%A0Mj7>h2G)-T,#Jn<;0mBK<&b=,a13pK1LbJSUE^Nc9=d*oJ4&DB&%f.ll\9Mt[G0qT%I*5(t?d'["4K\(>/ahM[!,JM24^\5B4k
%@QL9U,GVta[4cGtgSjGF="B7WcE)cX/;HN_$I0tq^Q,)I"P9#RYMTb2&F]Hun4@:E0A'@;Db.HADCC+;r.5,Kr%\f%m1c$4ZQg0`
%[2)9Yb$UBK%u&@g^8IB0IFh\Q9a^bu&I)DO'hJnE7A.Lu;!;:K&GWB+g2L(lJrVd@#:laOTST3CWNEm7M%a`!";rh8E*-m-.Us-#
%.%tFffjP.?Xre;aK5grn8p8D\mo&32-%fXnOJF]9VphRQ.#_k(5:Ok]*i>S[X9$hH$sc*IN5E\3kgt\)hi!Y*4aOS6kgsp\0l!X:
%(3^O-eG;M(dskJbbc'(?F`Jl_n6q&\=ma]K"Uc*h$PS0S*]%2k,JB_oT1nk[K77Df>3/G$dDR$SE<`:d<d6^M!_chB&7T]U@fP2l
%K!a*JF0-e/l9(o?X'u1:Gq)8:^n#)jaou`N*kSjQ[96Bq3C>'Yl(a,$>sY!nlE$M4S1@/"^4PutA'<C7-"Y'gXu.7*B$-VN]El(P
%!+DK=7eqRAi`*d<H%$-J8iV`>iDNU2)nHF^@b,+bqeCZD=jRns%t_>5(4a8J:-</(1]4:OGkKH%gZX/>@k@1T#m+msMlIgu1ITn4
%MO?%efbAJp21P'3j4?>je8@8<??1/ok6Bi?)cQr65M/rQR1e"E!8M4D%#\^?N\$XOLaF\-#M:(U>q&s6%8d5]pa(VpQE=3)YKrZp
%*eXPJHjt#p-5Pm[-j&7'aW.9G(G?_RgBC(l>dE)e%,F(+H,eT%Btsa]bX*M"L>9A4AOsW3HEMIA?*S+i>uK_mC6cGP)pP"YD9NsM
%Ks`82Q[[1h-$Dethb"$:*++3W*ih/NX`6!Hqq&3M.sKZmb,A/-b2$-7*9:kdSZu]l>.`Ok,Q[4</j.']03bJn3/43ZYM<Rm`KIcg
%]-f?4*Ojg6j#q9+YM</7f)%nkkn[na.?-^chYr"Ch1/lM5"cWc29aKlRk&=pf63Wr+a5lhcT"Sp\^+/%83D+RHIqO*:iaWo2.=2-
%=kY9rrPTJ[c-fYd\^Io!62<VN\]8FoB5'U(=k[e8]Pfs`DsJY/m]/4[R\_DMZZMmufj$42_O<!WD67RM4:A^s=="WUF7-@K<u0-<
%\$ZHUPs"eDlLj9jD4KZO,IM-_s1`0F_Xo)*9npu1PNt=67-NFecu3ORLtQ@1/!(\WedD7-gK'LOE"8t)6HK-:8^&$8`1BaZEs4JI
%,+<&S#DDC$1l[Jc]KO2VnRb+W/f[/'joE@&Bfo3")o$3Jb/UArN66C<(*go9/`=A+_2nj9$Qr'b4675E'VEH[DN&2OMD'0g1$UU>
%d5^T'/hneKVSY&L*iSl08(+$7Bq<@VE^@M^NDROPXu0Y>n^X[7GIk\FZt<1i6[hX/!<&7&,t]"(h<9`^`J@WtD,hct\<rMul3D9D
%Vn"2:]VfNQ.UV#&UPd.$s02:M0:M2iO_Go>bUYX*ScB77l6_4?(DV+G\p*KU-N/RkIQlo]4,JidGD:.W.<EGE?P#:JkD9?W&Q9D3
%(HioB;p#0p2CedDV;>t;@Q.UV@NaRe4&mioF6@dRpi@rG(B=5"?U`)`b,fAC#7u$\%fP8S/dVMROj_dqrk"VS*#[+`,2sDkg<YY[
%kZc$1E8X9*G1X2_1&>:S1,g7'i$#99(iiqi1h7D5ALA)BmDleU'I[^]JONXAAXu'iB\Ed92L3oEYW^S03gcKd=1^H^B5$V;^VFOM
%qr#[LU4VI'=&r9+d&<M7aVJ'%Z<uM6Eg];@_lW]g>5u!9BB;%?]E`;B%Ud)Ugbss.ia"Z<%"Be-:R)*.HNLRVYY;$uBq0.('VP0S
%1r^iVY%DV]'ppiRX#=jl&u<2ii-jLoW70I&_1T5PGr:4O+Vr-Qr]Tu1D<iBD?VSaWmIgiDL,r7T,UTOZ-.:2WKe4^%-dt_Bm>>4a
%Z"*")4/q39m+IHSSHbHR[(+3_n#ffD7.!-1cpakQA4]6m)uK,,2q9ZVqD=N,?h!g-R*RqS0W&"T'LT15#AV4QTi"6@6NN+N7f=@A
%go57mj/E->BJf\u</td5'K'?do\N;rrK,N@bX5!])@n=9^/<qAVVd&%Yd5;G)+t37r*HaTRGO",HMss@(0/^7g-HD9@mY'qFIf:4
%/+]D8gmL^&VH5'lD;#3G<a<s$0"))sT$5kGMs"0D(A9QuDH(^*E95IHnKR8oEK_"6dS$A\:@+O7DZ_S+k#R"Im(/>mlTta;_[ed+
%^[sZRSdSV(48M8ENto?%*C)/q<&",?SN>27o0\c7Vd=idm`EJ7^iamtZo3Je0=,%PX,4uC]jL'bPlX;E\l8!9l\3((GQ@NK%YDku
%5B0)4fG&lNQ0@@V(+Su$E72-ERCkJ76J&rSo.2%V=c4cc+Sm?T0OES\;8"h%b#j(Y:HV>gC:VnsT)RK?m^[Op*j-D=O-]JXqGUg;
%CPR(*OlJc6)WB\g_@(7!28OW(`AU">k-0Ck],14unrXO@@`i?H'^m$16B"6m?YQOn:4X0so*OX!b]anP"]c+NRl(IF$qhfqZK&V?
%-$fnQS++9g.VR]RmuJ!)#e9pre-IMPJ/jfkJ35m@D&a0S\j>!nX\6@cB],n:7U-'kIk;.p-nKI(M$VoM?bY(f;c1>W.GR1L`q:nj
%;WpM1>cAIoYP7DLcmJd8-stu'40\@GHj't#bh!Td$?r)*c@1ponSbFblnC4-PGAPIqs.U,*%NXn^mmbP/_thcL[1;X*lBbZXY2#%
%$mT)cV)WLc6M^G'`2`.q%PVk)*_pHH%N[So.K;/"LA=h.[X%a0DiEs/j^6RXgCY1OF[Up@WJHscViFP&YQ`A\(pt"0&qL^'mSs"X
%,29B-*Kb3rC:$oVHr@sB)ZCT=WqR?J%-Yru5:QUfDgcEZl@U]'2JdJNYh;1*NUL&6Km'u%)>""):?85Z,iDl/YH4D=#CaBf/R\K_
%7s>>IrRNm<`G<hgcgji\iZ4u.5\69>Y_(f=^%'gng&Pe`nCh86':,C[nCq!OQ/B%@8U1ku`CiL8TnJi=h8C]]NUU%q!TXGkA*`Tg
%of";&A)O2#(mMU=>C5g?LcVJ5ZCZjj-;pB3:K2i[/75X*(2_+6#pt"(_L&=DgqWA:dq.lHH6\co\@`o/qa*:\4@]>`s(s8eJiZS<
%`9>qGI5rX&;UkIG9BE3rG`J#UrlO&UVI;bq8AmB=pCN,UJ_EI4N2VlWVFZ!-B4"6J@n;E^U4\jaNKrTHGOIef%Sj`_22,5s6Y)Qm
%NI0/W<r)=R4Eb&(;=;BgTB-7<FUYpi%Gori<V"0!PCnm\e/V"b+'rg(K4__g/Do>gY`]&@4Yf+,]V4/Geug$H.nRJrA*69!Gt75i
%1%mX4?7gH7)l*m\n)p_+D?eJ5O*J/I6?C?U.`eL;[CQf_6gQ3noQlNH$uuudH/'(0WbI,rP!EtgN2(""X@)UgT_d;r.ECiX[3?La
%kFQ4>Z.10J%7I(X+A2LRg2h0e0/9s\&m8:FiM9RP8D,V`4&pIHn\(EIVp6&\L5,-"Y`56Zrm%Kj;Ji>1)A$o?eI3LC$uq^7r,CHs
%=HAI#Je.Sf-0VZ]+d,9#R*;4CKRc+O=*HBSN=NU%oT2bBjjLm$-UAI0ZL*K[4AaL6dAf8^SL,utL;s>pQ1J5@hpCP".A;==37b?E
%*g/Ep;E'"m#8VeT2,+,/95o`EQHr="]*lke&aCt;b"M%#i"4G:&-5%=)X!^(de)>_/";>scWdLeYFsc$]>#0*YHAT!J7]<k,4YpM
%iG1!ZCdPg4j`!'N\hB,]>K79H4f>^d4)_[meu*TTds8"Eig&i=d&,ECLNRO:GrgoY)3[B_er;.#X=s9_?gS2OCH,DlRO]mIL"%eX
%[_g4#IEGT_n1\:[p?]9bZ<GT$1E*b?!iRStnt*I2or7]^gf=RU!d3J6KCD<5ku5uQS7JQ<!/P<KR+4$R*C$[7"b8c0B03Q'd):Pi
%-l0D"f$t/950e<[]c^eS+[n7DOIkuA!kQ;m;_jO0<"a9([D"-.]e-k9C>-cm2e_JJa'Nf-S_)TKJpI<s7`]-C\gS/5U1h2KBKR"/
%WR*Oj@?!g%6Ma/N'8(qN;356P%Jlk-p(dO3jZU(4&r,u5i&3h\G'3h\(ANVN[@-Hd*Iq:0+m$D8^i<*=i,1!"Uke&Ai0eui5pJ]7
%_<3pl_-.";$@B2'_K?<IcNLmd?)-;DZ1IR)rXh1S4`mdV)p=g!p"2`Ujk..iUC+Un7k.2qdX>"Ag.ReY?:0;P!<Xk5c>2X;.Ytc*
%B\27TB)R1iG'EI]Bg*.[`Tn6uBt_E_pB:Q\.IW>n`(@BmEYY]*`Kdf.#a`5,IAUtd#L<-T,3hd';f&S5Q.?bCn*6#/X[>9M\4TiF
%>4J<8`]eh,d0&mMehhmrcSMB0D^ietp?RqH6+mp.\23lJ0BVYSeORcn0bo4"9u[_EoaV\f5^K*cSPe2[e]=[11$_Rda%dWX>cY.m
%T,1t)2a_ulY3o=/<F4G0)HObdD_Au8,kYIXE@oeoSl4?'=Uno?9SWFB4tJ8OPpcZB.r1kf4C>k%\SoYCeB:ldh<J!M/_8OG.<uS&
%8uMZS344d-UbJUAZoES6"<*t>5q,:!iT75t,nUHF7s4&(iM\"g+bnc+9dp)]0pEYu)d4tG7PTTC@L]_qO5s-U=g<,Z'f9d0Tp`S[
%$H1_W)qh48[akS/,Xn!2jW5B0E@X'1/rOp&5tkGDTD(&IpddG8mVJXH7A.=o[*UO\UR:pmN#'9mrB'`.I72q?lm7GBJ+XZOJ<-L9
%6ugQ.1-p8&Gh3*/D92Z47KFT&s)#7#>>Oq#QQ1&Goj`+=3[2F<44_"-E-Hb98+hDEF3Iq0.XCeMEdX[eDER[B3a*hbgfcM;pVRiu
%_q1"q*$&hN,bPi7YG4^knX+[2V@Hs'NfQ$J](+QOlY)P'F0F/BJhZsL@8IiOj4WSI>ZFDo4+@0jZiV\lZMKM2)46!sls&&#$5"o[
%&Cu\W)sc(q7n)qC6W1\(lt9kN](N#HACc_IFmJq0*6j.-&\pRn;!V6OoUrZ3SP^5sD)S?j5kQ(kECNFXg_e9flUHl\m3=Nkf@[GO
%^%_<`:9eM_,7N!s`E_]HoZNoa^B&6"<'fgA2tUr5FXh`''-u$Ti_+isZ7#3@,Vgml0)DXQU3J+bV(%/c><Stf0@1_b4)4:le>d$:
%V/>_q`Z9iB+X1.e1)-2-R_4n_5H4V)'f%4GU`%2ZCp=30*N6VJI(U'(0g#Rbfk6'9^ScBorI/S]%`DOu8S[a'76LoZ,<gX>#%4I_
%pJ%#39d!9,<O-IADM3-O%hsT,$lMuDBF4!<.#LS7b`Jc^;]LI1g:WmXB*F:b2la)0NG8T/%D3D$cUu'6)R[A?H5*i7Z#<Wj'6o)J
%HoJ&eT%[Mk^e<G?mG6nFC=A$/kA*KUp.hY/,9i:?q*qW::kS@'nESKWh.LPJ-cB1kCIHo[G@$rihaXlc6$XIQ05Uf;Qt+*"DQDe-
%L20_Bn?Fm^#QbBKRp7me_8<47P;?+K-t`[?n8miF>)`"a)5Ro_J\k=#QTMSlSQpZ!03dE;"a+c%4Ab:^W0'p^oa]K;og[aT&bPRk
%T\b5\A(DS6^`0\`ZNTJsU#(]ZaW@G$=`Y"DXU6@kS-C.$-`F8INGZGB;/N)>T3#p5.i!&!"/R!BL>E]<!'65SKOh#-E1/nnN&p!@
%E6:?#P/34EoUY:Z<I4-GD-M)$"#XSV:8QJt"X:AAB)7XX;1[?M(,i=5NO(Le`g*rqbj$^)(>g-kc>dKb7m)d%Wf,?bBCV@<<nB;P
%TJfP(C9WF3<VB9BpusjS.hHm1)*sd2eCZ4a,@C)3ZO.SqT?=Y6pj*1&SE_IZGKP9AY1?8s'gH%F3b8bE-ju<'?sta(>).VQP:$Rk
%FZL_a]3&"c"4bM;U\q)qP$!M%7fm@5W>Cd:3p&of:q^/q.%A:T2N\)KmSpu)e`C%?A5lcD7-no@\PWKS"m+Li$<SoB4So;JdMPRt
%&p4MTp2.S7l6to))SgEf*=l,+9m(2&Z!)NQEeKrX>7F(BeX^`p7]i)"/eMAn_u>)_iEHV-JeI%]m!L1*T2C5+<o]D70*Cn1n8XJ)
%Z04a/NU9L&:F`[;)r&*3h.h&,qBlGk1/2^e1/RF)&IiS@;!F1$Ctlt<D/@7YFf3q@("geVZGe^tC9,aA3^,!&X1K<:oLsXUgb]\g
%1%t>&:AL6-$>a,e6:Q61>;ruPPs;7h[Vp!Z`ceE1NU!.#K8?KFM[-P]*V)J`l.?L,SrW3Z+AM2\F`>rmD?NfU)moe_Kb)+%N_>pb
%#mb+ocMCNtfS/D+ek]+^8SZm]`3YQ1agq]@b8A4%1*'R50#3X!(poI!Bc:q@&f&QeMao,'W@QFOFf=7'SnXJR*SnL,X`A:Fo`nb(
%W`Wq]lg&65Y8_poYpK+=;$?%bjb'l*_/.JGJE)'^VfN;JiRl2HGF/jkl%.i\X[T7[$k_TBq@p^-%.;;Bn5b\G*?$\=fohoeAJun[
%<OO&]Utu@j_-^,"3(Q.#3WUH?<j:?A_iU;C^YnOLD^Et#&r04OSek'a"7Jll*1.msGDXpcfX]TslKb+?Y"O_sC#+$)A@6C>G[Sj\
%m7''kn!OXXe<5>mXMSC$i''6@Ekj\1&m/%!8h6uMT9)po[n8qN:IBu*Z8J)EAl`#<lVqk*eTb7qIQdud.PuWYQ:_Nkr!VJ>.,:6M
%OaYK3Qt<5S(>"tY0#"^0$Aj+METGVO\'0)P,4?hIg)4q,Thph_?Y%<Po0bsKXO^Un>W9&M%@J_P.^@2m'<2dRee!;6,L/DhFk?hk
%/5a=T29r:nFW2#6of3f0=raK91,07Cn!;HM<O#3#i[dciNflf0r./%1#*!$iWY0dm!8Tsh#o1)9!8j@&e6#hge6'<1LMuj#:O]!=
%)I\,Z!aTA2!(1pk2"fQ$JMj9ApbmB'Sr#GW1B5j0O0m5.gbLHJVH,;e=C0E-'/RBbDRFr6Ir!e[f59[%[[17<e&phhW[CY1%D>Eh
%,-P7;q7+G)l3an&/7^dGb4<QD/+1bms-C4i4(n]ec[F$U[O([^&$5+_IIPE4BZaAdMeU0Rq2F94#PQH9]e^"-W4aYgfJ?j!P9Fo9
%k7?q13TK+4+T>a15C/08#RE"rLu'S;,DW$PQc+U;OXh[tYDPmR%Or$k*2TM%Y3XVG-i%8WrJNbt+SL6><d26ZI6h-tn%Q"lLuE!a
%j2&-m<.Gl9nGG"#G@c"Ebr7$;iNd<+jgME/G@\"=&$t<cq:)@Bepi5N\*^8KT%t%nV8k0+-"LK;Z7FNAp@Z#!X#fr16#MSbVJTt#
%T-u@eF*D*Pa_79d8TaAiAB&Bj%,/YHjWX4Dr,DghI`L^jfq=40jD^PYEn*ZI=M@WV_Dtg`2'.I_"(P4TK+H@["6]"gM7c,<<B5rA
%3.hb^TU_[Vm()1Ph4T%P5[qm#=fif.gke[A'Hk^[?<(X[M4^tO$\CqTrK)G3G@$!4>0BRtmi<g[A)ObH$D``U![fu,`#@_&'"OT<
%)>TKM^Kgb/!Nc1j\NLH:JU_.S.sCT0<Isg8d9+7OSc_Sf`#Fu[IWd'0:$6V%"5d[JZ$rYiONsT8P>F8I/'fd\pKid(Weni&IoYqt
%;u-,h@BP54:?VeXc;uO7gXcGQNN-KBI'uA\P&M11_BPou$?+/U1;m/%\..lCUZ2*S\)XM_Sq=O")rKoWOfkP`YfT"t`E@ZD^Ah?r
%It](7^ah5c3;QuEgOP>N(hdW.2P>q\!7TNa9GCTed;.!-XHF[JiS%'Z,,W*?.!e>!iH-)HL'h_gaW-]5_[t$;C_etsB!LJ51U^D!
%j`GX27gBf;N*Pm,3Xe)AJRihucKH0d99f;l<i^pP1'Ug0(C94BQ>6PAa;2r]dlk3PJT:')^-'=@`AkqId`Ff2h%cND;NiM0]7C/n
%lXD]b="A6IEL>lFDY6_ZJHJ^>?'drFM?O(b+."gD2?!BrOBPD:iH7QsQGt@YXIXET9]E9_]6$1SH.-V1RKDDHWJI]c9/N.c8^pci
%LNui]X]le)+5j6I^R!0JQeBBFGE[E]cGMk/)"gC^nMjNf!6Jo=L'Qju8G83[2HZ->QEM9'`+51".3Ouf4lCp'nu,Qu:6H8G2o;3e
%^^?GC"f71cnE8CQbR[si3.W6/?72B()[k/j252=GQ_;9br*]i'L/te-&sg7P9*+[Ige/g'b5S.q)$U(H482883dps9/\d-Red4(9
%0CqqhBBSnVnjEMad8`V%CjpMmqG$?=!OJl[Kh_`js+0b3g"CD0q@%^B]>pSN5t>I_d'Wp@EZid,?dKR5nba"C_Z@uYiV;*9(5$X<
%E:tsf"Ein'Tn`h1;$IXA+g2&p!rqh#J?+&PGt8T'>IN37LioKKB"#dQL.<-4J3"qkg6^$7X,!?QbmIY^?X8iIm-:q.Ta1`[;fpDJ
%%.n\*(tumAaP1)&n9n4H8_@j%D%e'$P['Dmp.^+blXOD!n=<-)43m3Y;<HpM0Q,"A=R:<Mh=9+bW9Q/+Qtn(70GF]FRr#\D^YZqW
%I?6`Lr$0$C8I+@V?K!!%+FU*CG(,"L.qP7`@i0B#4jWO$$I8f/*&Id34+4IT`j$U_7e__$Q39Ci3_eR0?lgRA]ua:UiBSO::+n9n
%iZc@893i;DKjBNU1]"T$`V^o`<qUlIA?:IB(:"k\>"9?Sm0%[K2Ita>bPG5WEM`hehsT0P1e`OcF)'gh17iqsm=ZW@6gsKD&/b]d
%`sJl)T]$J6<']W8YB:"cGpAlH8&^=l@LIg\W.qZjl9r2O)mg(RKP:7*/W@8S&Z>.)M'Ts<R^RI=pj#OG^mPPrIVs;1XQgKa`Ve#!
%aNog4T\9Zo6.<P?REa'*1flC4MOKQU,&a8%`k->&2)KJ\LL&\ajrufF'19f-;\WSf>>t`!6]s&U+A*EMiUr+#`H0#n:?'E=;"$gb
%<Rr`*!lZfecJ0lKddI3u6,OYO$&SHQ$>"DL-\%KOhC"3tBH3Z$(,ep^.mOQDmEUAkPq+Mj[ODEdW181^VrAn'TZl^Geu(bH%^^+`
%-Jn>7#*D*PZH4H+W7Q`\V<8-WLY&?$PIl.M9aihZcYBAD#1h]hlpmSA!__&?>lR]PZk,a'j.bemU?Uhg[4RhB.:+YWG#VTq&6l$1
%:CF)j3;m38=\`5lV@1sCWpDUQ5q1YD#W#q:9[;KJLS8L:%B8`a<nhf)k5/HO336B!P+soIWYT6<TSEeF#S5sI#70.*Rj1+H9Ie=H
%CG?W(&(?XT(IdY^'YeJWPO^Bm^&V?m(K9AbH%e#YR)ZBaVK)%:#-EMa>?faiRUbCC)(Q#N8?Vc>$EI&O.ns'mTHnk)kl%l;SYodQ
%Xi8<s<E@R4YiKV'[34T*IcemQ,m8Y*X,$U!(I^^"4;]qJ):;9RW=pH4k3][eoP-,G:sD<<fE_E4F&[luJYImtCD`iK(0jK#jKfC\
%+)5B;3lG\CL4l3q*s[jRH)<)J@7Sdk@Tl[%c*bBh7g7K1[:rJe?O^cdYsst3]PH5]BY^<F*^Q+r,MLM-[<g^,o!EJL!2Lc6"LL+[
%V`33hj7V1hZ74k?HDan62WNI&:SB<KipjuI0,e=;<t^oNkSZ[jV]O>SF@dWcjRK:2BgcE"`uNmp2/Euj`]_>C=9_)e`S;C/"Mukr
%bi6.bp9+dR/%<peD3Tq&enPA1s/oG-/Gm+-?MC1N_aQqU]J(B!jKQla9gY6TN\0nTJcU?D4q#N$B3DUnJp204R-ThNBWN5#G[-k)
%XkM0\s4_G%gW$l$<)t!4R/;0;82S"DGeE^"8:<>9E/B1;g]k@)GCim@EqEOY(6moAZ3jV,L*#".B`Qj7fnLgU@4@p-/FIL0G[p=,
%3B<m*dn?XP+A>naO#8).qClN\r@:Cf.T/\tK5S`S;?BnK_14HdSag%<#_Z$m5J0H"7]]N`mA-7YrUqbfAu76nAJR+e\dRi^bG6"h
%iTu3G9d1PIp"70[CG_[kM-[Ir'*5RmGTb<V9i\f$(#CkT_WD4YF;d:(&TF[Hj=1oX8VD16*Yfb8:=<&48=8cWBAj]AI3,n($#j$J
%9nR=Hn/H%)E4rB!DLT+hY<[4h]A,"SK!iK4*gB/,LV"Jj`si^`b!KSP8"@$aha2hfST4F(Q?>YaEG98N:TF:kf&WdFUJ<BY\k6J<
%HffCOgQ,@jn`4Sg3h&gNYn/@E8l;\1(W:'oB)QsV:FZj\Bcj^Xe)G@1m[o+*hUh1AD.gmlgWnfP5@0fj"'86R/Nh]P*DpX`;(Lja
%/-m6idW7$9aB"<gkZSWmS.NL>.NCa4>uqLr1+/Rm9_J;^"b2kLnm^-#[nALKpW0ck>Va,&OeTmaQR'JCMm7[0K)b^d`hqm^.1e.@
%R\Bt;!Y,CJgo6"G^qX)a6s)WLf`M"!3ZC>4`0@0YUi:6F<?]4KKqCpWe[:Cri[k\M@-Vcp4SB^Z'l&l(d93lo7,pW=WgVn**2s%S
%eTHS6=#43^rs>8*$N75]\4`!O"8LeNmTpKYTrFN]KG6\]nE!Cs-rekof%Z=EYf<uY>4@[o<C1]Ne*b1##mX2jnlQG)":P"M;PROP
%E`(2mX4\D*d0ciV#6.Ja$?+$$<uM&K_WII"S-2b_$K^Hn0qe#fFpRDN"CZ%>BViMF*^51@Y`$o`:?EX+RdAdKj#-ZO5uJ3mGH563
%AT3<=DgY2iD:f5OHahNn'KB5PJ?ABDF)1O*`X4aU#9I*^`bP8#g?k!8H$Ql5]BdaXeC`ZR`r7$%Y@HKj=1\e,m-VL$GT1*E9k8P8
%"%4+WY58&f&NkG/YFjO$+-JrfnhgX@At[PS*j*i3BrBZcB(K0cQhTXUjk`h08*iCBrU(a?Gtk,RrZML#\@Up\h:0GV8W:.O`OrGp
%?bcQ1;j[V<Dq)>.p/K7ql($&O,km3*S8K#QHcJV#YNX\mf!oK+>DFZ^O4\G85>^bK<Gdqg%[7a@#o'\2nj"4X=qrMuT22\k+nU8A
%N<;WE](/+GNUk@(%QN2<`eiMJg/c,"e\:DQ?Ks_D]N7(^XCreU]0$lJ5WiL:c[r0dVbDg!BO(cl>lm?$.OfQ@NFHto7Kjm'j."ZZ
%nDWThoEmH,>O>"a/hIj(_L@X]BP[h./"B=Nl__+5P>QAnR;G_LL1:aMd^i$eo=*DufL;N"L#FrUgj8=F2BSl,R:9&_r*S+coG<92
%Q9[:o:_1E<hj\L&T4=1JfQ9Z!ghb_7Xeeo"&VF"b>OU/'TF1;E\GAB#GU`K.MrS\Z,j3X4Xs;S*GKR[Rjo!$IX.qLl*$CJK[^NWH
%+%WM>9fmgj?=p!Y*#uEtQT&'beeB"&3I\&5Gk!oraphDU"Y$gGfB2)K%8ZO-=o<84bmA.XJ3n8a(<,2BS*["Mq/5q4"<o:%jeP=r
%RX/Z$/2/PGB(0[HR_P+Ya>eU[eaP!YJ3HQBG\PlFY\!67$>^.I`HX(B"1A2f;;XBg@53?D8<*I^Bir]h0*?$Kc@V\^Fg\/Fri[.f
%iC.ilHn^3:9U5I06q]t"22,)-TD#@'Hdhnm0H:_3#;Is`0'7bki&?%Q7&?4fIj'oN5'@"9s+jApFYujFIV>\I__"gu.q#qmNF4Jt
%eYj3?rO#LoE_bX;2P630`&@:?;t4[76_.8M[4h5CL3Z6gPDVh09Ju?I,BHXU[?O2T:9X:"&7metco"h&#$-ApVtnWeWR(f-?4i".
%)PKmXX4J!K8%$/q'0ReP0f0I'N#OGPY9%mXD+g#rKrJ%qE/i5),?Z-/)+jUHX0%"s"@g?C'k-!tpTVn1hbae0[4a\hJ3R!BH7MEl
%*lGU1p'cB52=2(r^!a,GBs]qLe*K'\*'7WX4!_XOc,)9qc76gs-@^iNPM=#URc-e`l#+(Q9tQ/U6`[e9^)re7_c,)'ji,('f`YA=
%X[Ss"37bY=f(l,*mAIA&;bq7ME&hu8[tCVP2Gkc]2Apkt).f!8jARoICZV&Gg4)OnKs'(kXr(+aPA,H*X807Co5*_Y&_:rAou/.&
%3lN\[Cm>/]o<ok)4n6<_jNCUfH=0qD$iN[sKo57)qLWH%$DG6JV$!=a]$I`!BP+gB;0?%&lQ3M%E;^(1B6J51(d"io;L/MY&2mKL
%@':f5I?@R[65^=1G-0"m,+P0NT3p,V:UT:B@R5A7e"X7PM9ShbN"A3gOL-#uU+J9.B'h)*8K-rfi]5W/Y37!I&Iq2H*Jb0ZkpasK
%KDR2p>'X%#8B5Zp.g?Wfrke3-TnFA_S"93J=u<2hJ4OXE8e!K9LY"3A]?>Z9f-.:egjc"@hl*s&UkrT_2(3kgf;L`k\D'3fDlrPQ
%gB6/HO,.t.^6&]MOnbf]Fr_I>l#sShU3%)tPJ_"0L5*F[Xdr5hbFDCVF-l6@-,E@1.1<6U[r5LA4!aX)/X$Ch=BiDi@H<'[X`H`T
%iCs-B+k)]'G(.*&m6Tk8[E]t!^9FM=#8\pArH)iJf(j3/Br@^1Zp*`;&I+T6J8AfMs+[Y4T?TiHruFCLn?:8M0.?3WI2l&s6+n)r
%k^1h'Ra+N%"^USoR"YAdm4&!=)D/o3b^45Glg$JR_pKt=QL$]P>')6om:&og1'4FheH0EQ"Q8d!qjtFm=Gmr:PCH&F)P,3g*^p2Q
%P!0TO1h/pqd5;.V<(,*Z(Ob7Y`1eueX!7OA$0I1UJ!1+g-nV6`UfS!/>`)b)<B8W%GJn(ARa^NDSBKe5l)I3%b%:E:Na*i)D15ZC
%Mdh#ABImjf>oqC+`q-)0Z;OZ:C=f,)QI]#?Vds,s_Y!FMduR2>#ZO=NP[j%oIfZHEG:W]L/UXatEPOn<=:^jjbO_M1>o'd5riZ)i
%O("pdR(:ZUrKpM\>HdFs_^c#e&kunt>U,`2p/01;RQ\u/*Vo]R%,p9H&e9l!'cIhY-^%8/gKpeeH?9q5"47)o>AS"JllDNYM79!/
%3c[$G'^So&"\BfZiR&]eMHi!a7Ro?EROsAQ-7$RHO$>/]leiDHYl88j]00rQn8YoU2g:CM=!e*TPq1+49#$d<JX%QX`g%598499i
%K\kr?QKjI-X5`KQ?)iMj^^Q+_BjU21?W<;m^k0NbR/?r:02bq9/n9c`\B=&>j=LX\0OcDp%5D"e;CX1T$-#fE-E1jd[B??i+OMB.
%Fo!G.R?L\rI1Q"l+Y=Iu"]:)C<6YI&*Kj0EP6Lrm/2Pg8B[r,Bgjt;pLMY2i]0qq'Lb_EUo3i^fQ;`cNrYM2u)Y#M'H$N?HT<8g!
%U;=]ca$@2+7('-C1H+[7P%6&CcmG.N\LprARGZFtG;53#EFP&=r/,EgJd#I"X&jhn0i+0;Er;,h0KX,]rn:riVp(E/>@uorcg`o=
%`.'dg6ZJcK0s']VE?%X?+mJXSd;XRN"lNd)CIqKZT;9k6<h;YAbC%G&f4g\aZ0?]2NV^m+(W9_t/X"[(Q0e"uQ:-$FaN?WUY<=_h
%gRcYVaQDuSH2,LqaDFN(T,;K4b,%j"S72s[Q_$0O?UT40gG?f?@][_UP2a-BHrEI5"Z]J/%o&sq^OJ0$'sQ:?9mX3Y%!?&OV80FK
%i'i\`A;`bb%7i<!\)Jf;^AI6J28&GC^NIjsX;H=jpQ@m]XdRd&^5F`]R*d5T(*=I&_L>DV+YEau6goJ&lu'AW.M4)UF[>EJ^Nn.2
%o@BACQQ1&gha5"`:Uo8H`W<k>?<F)*+2tAb4[iXukf;[\B?[J(oB-X?.uo%X&oHKH[iB\B^k!fPguDV;pHD&oaSCZ[0Il=$V;h&[
%m9=@bWntpIHVbpTk+ZBcW>C.K0t4ooT^@*J0mEI0lMW\3K.ri#j?31+!M;L,;m,u+Rf\S'GV`I4/P8=GcQCrofus51gN/DkH%Y[N
%6Z0#of6\I3_.PIVlN=qn*ZOee_.PIM/C>k0fke4>C(5??&Y@Vp8Nu8h)t.etH%2JkomRl*HL^hamUN%31B@+#;j20I>-_#EGH6h[
%cE.^`2;>hXk.'Lo)t.bsH0)K'Z/44P9cBr-`;/Wk]Yfeul9!9b>D`"@6SHL8AX/(:1"UcVrS)5#gW$k]8e/CmDkZ$kRk4jtClP/H
%,W&'27Vu5=SROjU8d-toOCd:AQUdEe,?bX`6&EH#n[SDV7^5W`a`jKPI+Qr7[4u']ZNei>=B?=7,:n.\#?N[9LLn-`1:U1C4t5+j
%ZHSjHE;8scf&Bm&OVX1f*S<B_2m*K(dm;oi$.sK$L0-S`Vga"klP[#o3K#=?8=9msX@opYTcrtMTZ.8#lkp$=L93PVn5/:;XeT$s
%$_Cc&g2b!n'l&P"Rh$4RGh,[5^T;cTB%\PqpWDf_BtOBEJ,'#P=2M`J&,!^8]79a^mm$cChuE9Gqj$[Fs63>ZnG@_7bFee2s7lOG
%^\utQr:?Q[fC.VroT0%I:]L!`J,0%m?@RD#LVNcdci<Q3J,0&t5QA3BqVRG[R68CEs8B_0O8o3g^\bd?lBm2~>
%AI9_PrivateDataEnd
